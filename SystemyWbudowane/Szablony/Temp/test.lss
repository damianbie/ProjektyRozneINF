
test.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000216a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000034  00800060  0000216a  000021fe  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000013c  00800094  00800094  00002232  2**0
                  ALLOC
  3 .debug_aranges 00000020  00000000  00000000  00002232  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 0000039d  00000000  00000000  00002252  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000af4  00000000  00000000  000025ef  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000211  00000000  00000000  000030e3  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000092d  00000000  00000000  000032f4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000001a0  00000000  00000000  00003c24  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000286  00000000  00000000  00003dc4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000001e0  00000000  00000000  0000404a  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000048  00000000  00000000  0000422a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__ctors_end>
       4:	0c 94 ef 00 	jmp	0x1de	; 0x1de <__bad_interrupt>
       8:	0c 94 ef 00 	jmp	0x1de	; 0x1de <__bad_interrupt>
       c:	0c 94 ef 00 	jmp	0x1de	; 0x1de <__bad_interrupt>
      10:	0c 94 ef 00 	jmp	0x1de	; 0x1de <__bad_interrupt>
      14:	0c 94 ef 00 	jmp	0x1de	; 0x1de <__bad_interrupt>
      18:	0c 94 ef 00 	jmp	0x1de	; 0x1de <__bad_interrupt>
      1c:	0c 94 ef 00 	jmp	0x1de	; 0x1de <__bad_interrupt>
      20:	0c 94 ef 00 	jmp	0x1de	; 0x1de <__bad_interrupt>
      24:	0c 94 ef 00 	jmp	0x1de	; 0x1de <__bad_interrupt>
      28:	0c 94 20 04 	jmp	0x840	; 0x840 <__vector_10>
      2c:	0c 94 ef 00 	jmp	0x1de	; 0x1de <__bad_interrupt>
      30:	0c 94 ef 00 	jmp	0x1de	; 0x1de <__bad_interrupt>
      34:	0c 94 1b 02 	jmp	0x436	; 0x436 <__vector_13>
      38:	0c 94 ef 00 	jmp	0x1de	; 0x1de <__bad_interrupt>
      3c:	0c 94 ef 00 	jmp	0x1de	; 0x1de <__bad_interrupt>
      40:	0c 94 ef 00 	jmp	0x1de	; 0x1de <__bad_interrupt>
      44:	0c 94 ef 00 	jmp	0x1de	; 0x1de <__bad_interrupt>
      48:	0c 94 ef 00 	jmp	0x1de	; 0x1de <__bad_interrupt>
      4c:	0c 94 ef 00 	jmp	0x1de	; 0x1de <__bad_interrupt>
      50:	0c 94 ef 00 	jmp	0x1de	; 0x1de <__bad_interrupt>

00000054 <__c.1790>:
      54:	6e 61 6e 00                                         nan.

00000058 <__c.1788>:
      58:	69 6e 66 00                                         inf.

0000005c <__c.2085>:
      5c:	63 64 69 6e 6f 70 73 75 78 58 5b 65 66 67 45 46     cdinopsuxX[efgEF
      6c:	47 00                                               G.

0000006e <pstr_an>:
      6e:	61 6e 00                                            an.

00000071 <pstr_nfinity>:
      71:	6e 66 69 6e 69 74 79 00                             nfinity.

00000079 <pwr_m10>:
      79:	cd cc cc 3d 0a d7 23 3c 17 b7 d1 38 77 cc 2b 32     ...=..#<...8w.+2
      89:	95 95 e6 24 1f b1 4f 0a                             ...$..O.

00000091 <pwr_p10>:
      91:	00 00 20 41 00 00 c8 42 00 40 1c 46 20 bc be 4c     .. A...B.@.F ..L
      a1:	ca 1b 0e 5a ae c5 9d 74 00 40 7a 10 f3 5a 00 a0     ...Z...t.@z..Z..
      b1:	72 4e 18 09 00 10 a5 d4 e8 00 00 e8 76 48 17 00     rN..........vH..
      c1:	00 e4 0b 54 02 00 00 ca 9a 3b 00 00 00 e1 f5 05     ...T.....;......
      d1:	00 00 80 96 98 00 00 00 40 42 0f 00 00 00 a0 86     ........@B......
      e1:	01 00 00 00 10 27 00 00 00 00 e8 03 00 00 00 00     .....'..........
      f1:	64 00 00 00 00 00 0a 00 00 00 00 00 01 00 00 00     d...............
     101:	00 00 2c 76 d8 88 dc 67 4f 08 23 df c1 df ae 59     ..,v...gO.#....Y
     111:	e1 b1 b7 96 e5 e3 e4 53 c6 3a e6 51 99 76 96 e8     .......S.:.Q.v..
     121:	e6 c2 84 26 eb 89 8c 9b 62 ed 40 7c 6f fc ef bc     ...&....b.@|o...
     131:	9c 9f 40 f2 ba a5 6f a5 f4 90 05 5a 2a f7 5c 93     ..@...o....Z*.\.
     141:	6b 6c f9 67 6d c1 1b fc e0 e4 0d 47 fe f5 20 e6     kl.gm......G.. .
     151:	b5 00 d0 ed 90 2e 03 00 94 35 77 05 00 80 84 1e     .........5w.....
     161:	08 00 00 20 4e 0a 00 00 00 c8 0c 33 33 33 33 0f     ... N......3333.
     171:	98 6e 12 83 11 41 ef 8d 21 14 89 3b e6 55 16 cf     .n...A..!..;.U..
     181:	fe e6 db 18 d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb     ......K8..|.....
     191:	e4 24 20 32 84 72 5e 22 81 00 c9 f1 24 ec a1 e5     .$ 2.r^"....$...
     1a1:	3d 27 00                                            ='.

000001a4 <__ctors_end>:
     1a4:	11 24       	eor	r1, r1
     1a6:	1f be       	out	0x3f, r1	; 63
     1a8:	cf e5       	ldi	r28, 0x5F	; 95
     1aa:	d8 e0       	ldi	r29, 0x08	; 8
     1ac:	de bf       	out	0x3e, r29	; 62
     1ae:	cd bf       	out	0x3d, r28	; 61

000001b0 <__do_copy_data>:
     1b0:	10 e0       	ldi	r17, 0x00	; 0
     1b2:	a0 e6       	ldi	r26, 0x60	; 96
     1b4:	b0 e0       	ldi	r27, 0x00	; 0
     1b6:	ea e6       	ldi	r30, 0x6A	; 106
     1b8:	f1 e2       	ldi	r31, 0x21	; 33
     1ba:	02 c0       	rjmp	.+4      	; 0x1c0 <.do_copy_data_start>

000001bc <.do_copy_data_loop>:
     1bc:	05 90       	lpm	r0, Z+
     1be:	0d 92       	st	X+, r0

000001c0 <.do_copy_data_start>:
     1c0:	a4 39       	cpi	r26, 0x94	; 148
     1c2:	b1 07       	cpc	r27, r17
     1c4:	d9 f7       	brne	.-10     	; 0x1bc <.do_copy_data_loop>

000001c6 <__do_clear_bss>:
     1c6:	11 e0       	ldi	r17, 0x01	; 1
     1c8:	a4 e9       	ldi	r26, 0x94	; 148
     1ca:	b0 e0       	ldi	r27, 0x00	; 0
     1cc:	01 c0       	rjmp	.+2      	; 0x1d0 <.do_clear_bss_start>

000001ce <.do_clear_bss_loop>:
     1ce:	1d 92       	st	X+, r1

000001d0 <.do_clear_bss_start>:
     1d0:	a0 3d       	cpi	r26, 0xD0	; 208
     1d2:	b1 07       	cpc	r27, r17
     1d4:	e1 f7       	brne	.-8      	; 0x1ce <.do_clear_bss_loop>
     1d6:	0e 94 50 05 	call	0xaa0	; 0xaa0 <main>
     1da:	0c 94 b3 10 	jmp	0x2166	; 0x2166 <_exit>

000001de <__bad_interrupt>:
     1de:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001e2 <KEY_init>:
char aK1,aK2,aK3,aK4,aK5,aK6,aK7,aK8;	// Aktualny stan klawiszy
char pK1,pK2,pK3,pK4,pK5,pK6,pK7,pK8;	// Poprzedni stan klawiszy

void KEY_init(void)				// Inicjowanie rejestrów dla klawiszy
{
	DDRKEY &= 0x00;				// Kierunek linii: "0" = port wejœciowy
     1e2:	87 b3       	in	r24, 0x17	; 23
     1e4:	17 ba       	out	0x17, r1	; 23
	PKEY   |= 0xff;				// "1" = aktywne rezystory podci¹gaj¹ce (pull-up)
     1e6:	88 b3       	in	r24, 0x18	; 24
     1e8:	8f ef       	ldi	r24, 0xFF	; 255
     1ea:	88 bb       	out	0x18, r24	; 24
}
     1ec:	08 95       	ret

000001ee <KEY_read>:
	aK4 = !(KEY & _BV(KEY4));		// 0x08
	aK5 = !(KEY & _BV(KEY5));		// 0x10
	aK6 = !(KEY & _BV(KEY6));		// 0x20
	aK7 = !(KEY & _BV(KEY7));		// 0x40
	aK8 = !(KEY & _BV(KEY8));		// 0x80*/
	aK1 = !K1;		// 0x01
     1ee:	86 b3       	in	r24, 0x16	; 22
     1f0:	21 e0       	ldi	r18, 0x01	; 1
     1f2:	30 e0       	ldi	r19, 0x00	; 0
     1f4:	82 27       	eor	r24, r18
     1f6:	81 70       	andi	r24, 0x01	; 1
     1f8:	80 93 db 00 	sts	0x00DB, r24
	aK2 = !K2;		// 0x02
     1fc:	86 b3       	in	r24, 0x16	; 22
     1fe:	90 e0       	ldi	r25, 0x00	; 0
     200:	96 95       	lsr	r25
     202:	87 95       	ror	r24
     204:	82 27       	eor	r24, r18
     206:	93 27       	eor	r25, r19
     208:	81 70       	andi	r24, 0x01	; 1
     20a:	80 93 cf 00 	sts	0x00CF, r24
	aK3 = !K3;		// 0x04
     20e:	86 b3       	in	r24, 0x16	; 22
     210:	90 e0       	ldi	r25, 0x00	; 0
     212:	96 95       	lsr	r25
     214:	87 95       	ror	r24
     216:	96 95       	lsr	r25
     218:	87 95       	ror	r24
     21a:	82 27       	eor	r24, r18
     21c:	93 27       	eor	r25, r19
     21e:	81 70       	andi	r24, 0x01	; 1
     220:	80 93 d2 00 	sts	0x00D2, r24
	aK4 = !K4;		// 0x08
     224:	86 b3       	in	r24, 0x16	; 22
     226:	90 e0       	ldi	r25, 0x00	; 0
     228:	73 e0       	ldi	r23, 0x03	; 3
     22a:	96 95       	lsr	r25
     22c:	87 95       	ror	r24
     22e:	7a 95       	dec	r23
     230:	e1 f7       	brne	.-8      	; 0x22a <KEY_read+0x3c>
     232:	82 27       	eor	r24, r18
     234:	93 27       	eor	r25, r19
     236:	81 70       	andi	r24, 0x01	; 1
     238:	80 93 ef 00 	sts	0x00EF, r24
	aK5 = !K5;		// 0x10
     23c:	86 b3       	in	r24, 0x16	; 22
     23e:	90 e0       	ldi	r25, 0x00	; 0
     240:	64 e0       	ldi	r22, 0x04	; 4
     242:	96 95       	lsr	r25
     244:	87 95       	ror	r24
     246:	6a 95       	dec	r22
     248:	e1 f7       	brne	.-8      	; 0x242 <KEY_read+0x54>
     24a:	82 27       	eor	r24, r18
     24c:	93 27       	eor	r25, r19
     24e:	81 70       	andi	r24, 0x01	; 1
     250:	80 93 7f 01 	sts	0x017F, r24
	aK6 = !K6;		// 0x20
     254:	86 b3       	in	r24, 0x16	; 22
     256:	90 e0       	ldi	r25, 0x00	; 0
     258:	55 e0       	ldi	r21, 0x05	; 5
     25a:	96 95       	lsr	r25
     25c:	87 95       	ror	r24
     25e:	5a 95       	dec	r21
     260:	e1 f7       	brne	.-8      	; 0x25a <KEY_read+0x6c>
     262:	82 27       	eor	r24, r18
     264:	93 27       	eor	r25, r19
     266:	81 70       	andi	r24, 0x01	; 1
     268:	80 93 79 01 	sts	0x0179, r24
	aK7 = !K7;		// 0x40
     26c:	86 b3       	in	r24, 0x16	; 22
     26e:	90 e0       	ldi	r25, 0x00	; 0
     270:	46 e0       	ldi	r20, 0x06	; 6
     272:	96 95       	lsr	r25
     274:	87 95       	ror	r24
     276:	4a 95       	dec	r20
     278:	e1 f7       	brne	.-8      	; 0x272 <KEY_read+0x84>
     27a:	82 27       	eor	r24, r18
     27c:	93 27       	eor	r25, r19
     27e:	81 70       	andi	r24, 0x01	; 1
     280:	80 93 d1 00 	sts	0x00D1, r24
	aK8 = !K8;		// 0x80
     284:	86 b3       	in	r24, 0x16	; 22
     286:	10 92 c7 01 	sts	0x01C7, r1
     28a:	87 fd       	sbrc	r24, 7
     28c:	03 c0       	rjmp	.+6      	; 0x294 <KEY_read+0xa6>
     28e:	81 e0       	ldi	r24, 0x01	; 1
     290:	80 93 c7 01 	sts	0x01C7, r24
	return KEY;
     294:	86 b3       	in	r24, 0x16	; 22
}
     296:	90 e0       	ldi	r25, 0x00	; 0
     298:	08 95       	ret

0000029a <KEY_mem>:

void KEY_mem(void)				// Zapamiêtanie stanu klawiszy
{
	pK1=aK1; pK2=aK2; pK3=aK3; pK4=aK4;
     29a:	80 91 db 00 	lds	r24, 0x00DB
     29e:	80 93 c9 01 	sts	0x01C9, r24
     2a2:	80 91 cf 00 	lds	r24, 0x00CF
     2a6:	80 93 d5 00 	sts	0x00D5, r24
     2aa:	80 91 d2 00 	lds	r24, 0x00D2
     2ae:	80 93 ce 01 	sts	0x01CE, r24
     2b2:	80 91 ef 00 	lds	r24, 0x00EF
     2b6:	80 93 fa 00 	sts	0x00FA, r24
	pK5=aK5; pK6=aK6; pK7=aK7; pK8=aK8;
     2ba:	80 91 7f 01 	lds	r24, 0x017F
     2be:	80 93 d6 00 	sts	0x00D6, r24
     2c2:	80 91 79 01 	lds	r24, 0x0179
     2c6:	80 93 fb 00 	sts	0x00FB, r24
     2ca:	80 91 d1 00 	lds	r24, 0x00D1
     2ce:	80 93 f9 00 	sts	0x00F9, r24
     2d2:	80 91 c7 01 	lds	r24, 0x01C7
     2d6:	80 93 7b 01 	sts	0x017B, r24
}
     2da:	08 95       	ret

000002dc <LED_init>:

char L1,L2,L3,L4,L5,L6,L7,L8;	// Diody LD0..LD7

void LED_init(void)				// Inicjowanie rejestrów z diodami LED
{
	DDRLED |= LEDBITS;			// Kierunek linii: port wyjœciowy
     2dc:	8a b3       	in	r24, 0x1a	; 26
     2de:	8f 63       	ori	r24, 0x3F	; 63
     2e0:	8a bb       	out	0x1a, r24	; 26
	LED    |= LEDBITS;			// Diody LED: "1" = wygaszone diody
     2e2:	8b b3       	in	r24, 0x1b	; 27
     2e4:	8f 63       	ori	r24, 0x3F	; 63
     2e6:	8b bb       	out	0x1b, r24	; 27
}
     2e8:	08 95       	ret

000002ea <LED_set>:

void LED_set(void)				// Ustaw diody LED
{ unsigned char leds=0;
     2ea:	80 91 f2 00 	lds	r24, 0x00F2
     2ee:	81 11       	cpse	r24, r1
     2f0:	81 e0       	ldi	r24, 0x01	; 1
     2f2:	98 2f       	mov	r25, r24
  
  if(L1) leds |= _BV(D1);		// 0x01;
  if(L2) leds |= _BV(D2);		// 0x02;
     2f4:	80 91 cd 01 	lds	r24, 0x01CD
     2f8:	81 11       	cpse	r24, r1
     2fa:	92 60       	ori	r25, 0x02	; 2
  if(L3) leds |= _BV(D3);		// 0x04;
     2fc:	80 91 50 01 	lds	r24, 0x0150
     300:	81 11       	cpse	r24, r1
     302:	94 60       	ori	r25, 0x04	; 4
  if(L4) leds |= _BV(D4);		// 0x08;
     304:	80 91 ca 01 	lds	r24, 0x01CA
     308:	81 11       	cpse	r24, r1
     30a:	98 60       	ori	r25, 0x08	; 8
  if(L5) leds |= _BV(D5);		// 0x10;
     30c:	80 91 c4 01 	lds	r24, 0x01C4
     310:	81 11       	cpse	r24, r1
     312:	90 61       	ori	r25, 0x10	; 16
  if(L6) leds |= _BV(D6);		// 0x20;
     314:	80 91 fc 00 	lds	r24, 0x00FC
     318:	81 11       	cpse	r24, r1
     31a:	90 62       	ori	r25, 0x20	; 32
  LED = (LED&~LEDBITS) | (~leds&LEDBITS);	// Wpis do rejestru portu
     31c:	8b b3       	in	r24, 0x1b	; 27
     31e:	90 95       	com	r25
     320:	9f 73       	andi	r25, 0x3F	; 63
     322:	80 7c       	andi	r24, 0xC0	; 192
     324:	89 2b       	or	r24, r25
     326:	8b bb       	out	0x1b, r24	; 27
}
     328:	08 95       	ret

0000032a <out_nibble>:

// funkcja wystawiaj¹ca na szynê danych po³ówkê bajtu 
// pod uwagê brana jest m³odsza po³ówka parametru 
void out_nibble(char x) 
{ 
	if(x & _BV(0)) SET_DB4; else  CLR_DB4; 
     32a:	80 ff       	sbrs	r24, 0
     32c:	02 c0       	rjmp	.+4      	; 0x332 <out_nibble+0x8>
     32e:	92 9a       	sbi	0x12, 2	; 18
     330:	01 c0       	rjmp	.+2      	; 0x334 <out_nibble+0xa>
     332:	92 98       	cbi	0x12, 2	; 18
	if(x & _BV(1)) SET_DB5; else  CLR_DB5; 
     334:	81 ff       	sbrs	r24, 1
     336:	02 c0       	rjmp	.+4      	; 0x33c <out_nibble+0x12>
     338:	93 9a       	sbi	0x12, 3	; 18
     33a:	01 c0       	rjmp	.+2      	; 0x33e <out_nibble+0x14>
     33c:	93 98       	cbi	0x12, 3	; 18
	if(x & _BV(2)) SET_DB6; else  CLR_DB6; 
     33e:	82 ff       	sbrs	r24, 2
     340:	02 c0       	rjmp	.+4      	; 0x346 <out_nibble+0x1c>
     342:	94 9a       	sbi	0x12, 4	; 18
     344:	01 c0       	rjmp	.+2      	; 0x348 <out_nibble+0x1e>
     346:	94 98       	cbi	0x12, 4	; 18
	if(x & _BV(3)) SET_DB7; else  CLR_DB7; 
     348:	83 ff       	sbrs	r24, 3
     34a:	02 c0       	rjmp	.+4      	; 0x350 <out_nibble+0x26>
     34c:	95 9a       	sbi	0x12, 5	; 18
     34e:	08 95       	ret
     350:	95 98       	cbi	0x12, 5	; 18
     352:	08 95       	ret

00000354 <write_to_lcd>:
} 

// funkcja zapisuj¹ca do LCD bajt danych 
void write_to_lcd(char x) 
{ 
     354:	1f 93       	push	r17
     356:	18 2f       	mov	r17, r24
	SET_E; 
     358:	97 9a       	sbi	0x12, 7	; 18
	out_nibble(x >> 4); 				// wystawienie na szynê danych starszej po³ówki bajtu 
     35a:	82 95       	swap	r24
     35c:	8f 70       	andi	r24, 0x0F	; 15
     35e:	0e 94 95 01 	call	0x32a	; 0x32a <out_nibble>
	CLR_E; 							    // opadaj¹ce zbocze na E powoduje zapis do wyœwietlacza 
     362:	97 98       	cbi	0x12, 7	; 18
	SET_E; 
     364:	97 9a       	sbi	0x12, 7	; 18
	out_nibble(x); 						// wystawienie na szynê danych m³odszej po³ówki bajtu 
     366:	81 2f       	mov	r24, r17
     368:	0e 94 95 01 	call	0x32a	; 0x32a <out_nibble>
	CLR_E; 								// opadaj¹ce zbocze na E powoduje zapis do wyœwietlacza 
     36c:	97 98       	cbi	0x12, 7	; 18
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     36e:	80 ed       	ldi	r24, 0xD0	; 208
     370:	97 e0       	ldi	r25, 0x07	; 7
     372:	01 97       	sbiw	r24, 0x01	; 1
     374:	f1 f7       	brne	.-4      	; 0x372 <write_to_lcd+0x1e>
	_delay_ms(1); 						// opóŸnienie ok 1 ms 
} 
     376:	1f 91       	pop	r17
     378:	08 95       	ret

0000037a <write_command>:

// funkcja zapisuj¹ca do LCD rozkaz 
void write_command(char x) 
{ 
	CLR_RS; 							// niski stan na RS -> zapis instrukcji 
     37a:	96 98       	cbi	0x12, 6	; 18
	write_to_lcd(x); 					// zapis do LCD 
     37c:	0e 94 aa 01 	call	0x354	; 0x354 <write_to_lcd>
} 
     380:	08 95       	ret

00000382 <LCD_char>:

// funkcja zapisujaca do LCD znak 
void LCD_char(char x) 
{ 
	SET_RS; 							// wysoki stan na RS -> zapis danej 
     382:	96 9a       	sbi	0x12, 6	; 18
	write_to_lcd(x); 					// zapis do LCD 
     384:	0e 94 aa 01 	call	0x354	; 0x354 <write_to_lcd>
} 
     388:	08 95       	ret

0000038a <LCD_puts>:

// funkcja zapisu tekstu do wyœwietlacza LCD 
void LCD_puts(char * s) 
{ 
     38a:	cf 93       	push	r28
     38c:	df 93       	push	r29
     38e:	ec 01       	movw	r28, r24
     390:	03 c0       	rjmp	.+6      	; 0x398 <LCD_puts+0xe>
	while(*s) 							// do napotkania 0 
	{ 
		LCD_char(*s); 					// zapisz znak wskazywany przez s na LCD 
     392:	0e 94 c1 01 	call	0x382	; 0x382 <LCD_char>
		s++; 							// zwiêksz s (przygotuj nastepny znak) 
     396:	21 96       	adiw	r28, 0x01	; 1
} 

// funkcja zapisu tekstu do wyœwietlacza LCD 
void LCD_puts(char * s) 
{ 
	while(*s) 							// do napotkania 0 
     398:	88 81       	ld	r24, Y
     39a:	88 23       	and	r24, r24
     39c:	d1 f7       	brne	.-12     	; 0x392 <LCD_puts+0x8>
	{ 
		LCD_char(*s); 					// zapisz znak wskazywany przez s na LCD 
		s++; 							// zwiêksz s (przygotuj nastepny znak) 
	} 
} 
     39e:	df 91       	pop	r29
     3a0:	cf 91       	pop	r28
     3a2:	08 95       	ret

000003a4 <LCD_init>:

// funkcja inicjuj¹ca LCD 
void LCD_init(void) 
{ 
     3a4:	1f 93       	push	r17
     3a6:	cf 93       	push	r28
     3a8:	df 93       	push	r29
	// ustawienie wszystkich linii steruj¹cych LCD jako wyjœcia 
	DDR_DB4 |= _BV(DB4); 
     3aa:	8a 9a       	sbi	0x11, 2	; 17
	DDR_DB5 |= _BV(DB5); 
     3ac:	8b 9a       	sbi	0x11, 3	; 17
	DDR_DB6 |= _BV(DB6); 
     3ae:	8c 9a       	sbi	0x11, 4	; 17
	DDR_DB7 |= _BV(DB7); 
     3b0:	8d 9a       	sbi	0x11, 5	; 17
	DDR_E |= _BV(E); 
     3b2:	8f 9a       	sbi	0x11, 7	; 17
	DDR_RS |= _BV(RS); 
     3b4:	8e 9a       	sbi	0x11, 6	; 17
     3b6:	80 e3       	ldi	r24, 0x30	; 48
     3b8:	95 e7       	ldi	r25, 0x75	; 117
     3ba:	01 97       	sbiw	r24, 0x01	; 1
     3bc:	f1 f7       	brne	.-4      	; 0x3ba <LCD_init+0x16>
 
	_delay_ms(15); 						// czekaj 15ms na ustabilizowanie siê napiêcia zasilaj¹cego 
	CLR_E; 								// E = 0 
     3be:	97 98       	cbi	0x12, 7	; 18
	CLR_RS; 							// RS = 0 
     3c0:	96 98       	cbi	0x12, 6	; 18
     3c2:	10 e0       	ldi	r17, 0x00	; 0
     3c4:	c0 e1       	ldi	r28, 0x10	; 16
     3c6:	d7 e2       	ldi	r29, 0x27	; 39
	char i; 							// zmianna licznikowa 
	for(i = 0; i < 3; i++) 			// trzykrotne powtórzenie bloku instrukcji 
	{ 
		SET_E; 							// E = 1 
     3c8:	97 9a       	sbi	0x12, 7	; 18
		out_nibble(0x03); 
     3ca:	83 e0       	ldi	r24, 0x03	; 3
     3cc:	0e 94 95 01 	call	0x32a	; 0x32a <out_nibble>
		CLR_E; 							// E = 0 
     3d0:	97 98       	cbi	0x12, 7	; 18
     3d2:	ce 01       	movw	r24, r28
     3d4:	01 97       	sbiw	r24, 0x01	; 1
     3d6:	f1 f7       	brne	.-4      	; 0x3d4 <LCD_init+0x30>
 
	_delay_ms(15); 						// czekaj 15ms na ustabilizowanie siê napiêcia zasilaj¹cego 
	CLR_E; 								// E = 0 
	CLR_RS; 							// RS = 0 
	char i; 							// zmianna licznikowa 
	for(i = 0; i < 3; i++) 			// trzykrotne powtórzenie bloku instrukcji 
     3d8:	1f 5f       	subi	r17, 0xFF	; 255
     3da:	13 30       	cpi	r17, 0x03	; 3
     3dc:	a9 f7       	brne	.-22     	; 0x3c8 <LCD_init+0x24>
		SET_E; 							// E = 1 
		out_nibble(0x03); 
		CLR_E; 							// E = 0 
		_delay_ms(5); 					// czekaj 5ms 
	} 
	SET_E; 								// E = 1 
     3de:	97 9a       	sbi	0x12, 7	; 18
	out_nibble(0x02); 
     3e0:	82 e0       	ldi	r24, 0x02	; 2
     3e2:	0e 94 95 01 	call	0x32a	; 0x32a <out_nibble>
	CLR_E; 								// E = 0 
     3e6:	97 98       	cbi	0x12, 7	; 18
     3e8:	80 ed       	ldi	r24, 0xD0	; 208
     3ea:	97 e0       	ldi	r25, 0x07	; 7
     3ec:	01 97       	sbiw	r24, 0x01	; 1
     3ee:	f1 f7       	brne	.-4      	; 0x3ec <LCD_init+0x48>
	_delay_ms(1); 						// czekaj 1ms 
	write_command(0x28); 				// interfejs 4-bity, 2-linie, znak 5x7 
     3f0:	88 e2       	ldi	r24, 0x28	; 40
     3f2:	0e 94 bd 01 	call	0x37a	; 0x37a <write_command>
	write_command(0x08);				// wy³¹cz LCD, kursor i miganie 
     3f6:	88 e0       	ldi	r24, 0x08	; 8
     3f8:	0e 94 bd 01 	call	0x37a	; 0x37a <write_command>
	write_command(0x01); 				// czyœæ LCD 
     3fc:	81 e0       	ldi	r24, 0x01	; 1
     3fe:	0e 94 bd 01 	call	0x37a	; 0x37a <write_command>
	write_command(0x06); 				// bez przesuwania w prawo 
     402:	86 e0       	ldi	r24, 0x06	; 6
     404:	0e 94 bd 01 	call	0x37a	; 0x37a <write_command>
	write_command(0x0C); 				// w³¹cz LCD, bez kursora i mrugania 
     408:	8c e0       	ldi	r24, 0x0C	; 12
     40a:	0e 94 bd 01 	call	0x37a	; 0x37a <write_command>
} 
     40e:	df 91       	pop	r29
     410:	cf 91       	pop	r28
     412:	1f 91       	pop	r17
     414:	08 95       	ret

00000416 <LCD_xy>:
// funkcja ustawiajaca kursor 
void LCD_xy(char x,char y) 
{ 
	unsigned char com=0x80; 
	com|=(x|(y<<6)); 
	write_command(com); 
     416:	80 68       	ori	r24, 0x80	; 128
     418:	62 95       	swap	r22
     41a:	66 0f       	add	r22, r22
     41c:	66 0f       	add	r22, r22
     41e:	60 7c       	andi	r22, 0xC0	; 192
     420:	86 2b       	or	r24, r22
     422:	0e 94 bd 01 	call	0x37a	; 0x37a <write_command>
}
     426:	08 95       	ret

00000428 <LCD_clr>:

// funkcja czyszczaca wyswietlacz LCD 
void LCD_clr(void)
{
write_command(0x01);                     //Czyœci wyœwietlacz i ustawia kursor na pocz¹tku (adres=0)
     428:	81 e0       	ldi	r24, 0x01	; 1
     42a:	0e 94 bd 01 	call	0x37a	; 0x37a <write_command>
write_command(0x02);                     //Aby po wyczyszczeniu LCD dziala za pierwszym razem funkcja LCD_xy()
     42e:	82 e0       	ldi	r24, 0x02	; 2
     430:	0e 94 bd 01 	call	0x37a	; 0x37a <write_command>
}
     434:	08 95       	ret

00000436 <__vector_13>:

static unsigned char volatile x_in=0;			// wskaŸnik zapisu do ramki wejsciowej
static unsigned char volatile y_out=0;			// wskaŸnik zapisu do ramki wyjsciowej

SIGNAL (SIG_USART_RECV)				// Przerwanie od odbiornika UART
{
     436:	1f 92       	push	r1
     438:	0f 92       	push	r0
     43a:	0f b6       	in	r0, 0x3f	; 63
     43c:	0f 92       	push	r0
     43e:	11 24       	eor	r1, r1
     440:	8f 93       	push	r24
     442:	9f 93       	push	r25
     444:	ef 93       	push	r30
     446:	ff 93       	push	r31
	frame_in[x_in++] = UDR;						// Zapis znaku do bufora
     448:	80 91 cd 00 	lds	r24, 0x00CD
     44c:	e8 2f       	mov	r30, r24
     44e:	f0 e0       	ldi	r31, 0x00	; 0
     450:	9c b1       	in	r25, 0x0c	; 12
     452:	ef 5a       	subi	r30, 0xAF	; 175
     454:	fe 4f       	sbci	r31, 0xFE	; 254
     456:	90 83       	st	Z, r25
     458:	8f 5f       	subi	r24, 0xFF	; 255
     45a:	80 93 cd 00 	sts	0x00CD, r24
		
	if(x_in >= FRAME_IN_SIZE)					// Jeœli koniec ramki komunikatu to:
     45e:	90 91 cd 00 	lds	r25, 0x00CD
     462:	80 91 92 00 	lds	r24, 0x0092
     466:	98 17       	cp	r25, r24
     468:	28 f0       	brcs	.+10     	; 0x474 <__vector_13+0x3e>
	{
		x_in = 0;								// - wróæ na pocz¹tek bufora
     46a:	10 92 cd 00 	sts	0x00CD, r1
		rozpoczeto_transmisje=1;				// - ramka gotowa do odczytu
     46e:	81 e0       	ldi	r24, 0x01	; 1
     470:	80 93 ce 00 	sts	0x00CE, r24
	}
	UCSRA &= ~_BV(RXC);							// Potwierdzenie odebrania znaku
     474:	5f 98       	cbi	0x0b, 7	; 11
}
     476:	ff 91       	pop	r31
     478:	ef 91       	pop	r30
     47a:	9f 91       	pop	r25
     47c:	8f 91       	pop	r24
     47e:	0f 90       	pop	r0
     480:	0f be       	out	0x3f, r0	; 63
     482:	0f 90       	pop	r0
     484:	1f 90       	pop	r1
     486:	18 95       	reti

00000488 <UART_init>:

char UART_init(long baud)			// Inicjowanie portu szeregowego
{   
	char speed, err=0;
		
	cli();										// Zablokowanie wszystkich przerwañ
     488:	f8 94       	cli
	
	speed = baud / 4800;
	switch(speed)
     48a:	20 ec       	ldi	r18, 0xC0	; 192
     48c:	32 e1       	ldi	r19, 0x12	; 18
     48e:	40 e0       	ldi	r20, 0x00	; 0
     490:	50 e0       	ldi	r21, 0x00	; 0
     492:	0e 94 15 0e 	call	0x1c2a	; 0x1c2a <__divmodsi4>
     496:	22 30       	cpi	r18, 0x02	; 2
     498:	69 f0       	breq	.+26     	; 0x4b4 <UART_init+0x2c>
     49a:	23 30       	cpi	r18, 0x03	; 3
     49c:	18 f4       	brcc	.+6      	; 0x4a4 <UART_init+0x1c>
     49e:	21 30       	cpi	r18, 0x01	; 1
     4a0:	a1 f4       	brne	.+40     	; 0x4ca <UART_init+0x42>
     4a2:	05 c0       	rjmp	.+10     	; 0x4ae <UART_init+0x26>
     4a4:	24 30       	cpi	r18, 0x04	; 4
     4a6:	59 f0       	breq	.+22     	; 0x4be <UART_init+0x36>
     4a8:	2c 30       	cpi	r18, 0x0C	; 12
     4aa:	79 f4       	brne	.+30     	; 0x4ca <UART_init+0x42>
     4ac:	0b c0       	rjmp	.+22     	; 0x4c4 <UART_init+0x3c>
	{
		case  1: 
			UBRRH=0; UBRRL=103;					// 4800   (fosc=8MHz => UBRRL=103)
     4ae:	10 bc       	out	0x20, r1	; 32
     4b0:	87 e6       	ldi	r24, 0x67	; 103
     4b2:	02 c0       	rjmp	.+4      	; 0x4b8 <UART_init+0x30>
			break;
		case  2: 
			UBRRH=0; UBRRL=51;					// 9600   (fosc=8MHz => UBRRL=51)
     4b4:	10 bc       	out	0x20, r1	; 32
     4b6:	83 e3       	ldi	r24, 0x33	; 51
     4b8:	89 b9       	out	0x09, r24	; 9
     4ba:	90 e0       	ldi	r25, 0x00	; 0
     4bc:	0a c0       	rjmp	.+20     	; 0x4d2 <UART_init+0x4a>
			break;
		case  4: 
			UBRRH=0; UBRRL=25;					// 19200  (fosc=8MHz => UBRRL=25)
     4be:	10 bc       	out	0x20, r1	; 32
     4c0:	89 e1       	ldi	r24, 0x19	; 25
     4c2:	fa cf       	rjmp	.-12     	; 0x4b8 <UART_init+0x30>
			break;
		case 12: 
			UBRRH=0; UBRRL=8;					// 57600  (fosc=8MHz => UBRRL=8)
     4c4:	10 bc       	out	0x20, r1	; 32
     4c6:	88 e0       	ldi	r24, 0x08	; 8
     4c8:	f7 cf       	rjmp	.-18     	; 0x4b8 <UART_init+0x30>
			break;
		default: 
			UBRRH=0; UBRRL=25;					// 19200   (fosc=8MHz => UBRRL=25)
     4ca:	10 bc       	out	0x20, r1	; 32
     4cc:	89 e1       	ldi	r24, 0x19	; 25
     4ce:	89 b9       	out	0x09, r24	; 9
     4d0:	91 e0       	ldi	r25, 0x01	; 1
			err = 1;							// nietypowa prêdkoœæ (ustawiona domyœlna)
			break;
	}
	UCSRC =_BV(URSEL)|_BV(UCSZ1)|_BV(UCSZ0);	// transmisja 8N1
     4d2:	86 e8       	ldi	r24, 0x86	; 134
     4d4:	80 bd       	out	0x20, r24	; 32
	UCSRB =_BV(RXEN)|_BV(TXEN)|_BV(RXCIE);		// w³¹czenie odbiornika RX i nadajnika TX 
     4d6:	88 e9       	ldi	r24, 0x98	; 152
     4d8:	8a b9       	out	0x0a, r24	; 10
	
	sei();										// Globalne odblokowanie przerwañ
     4da:	78 94       	sei
	
	return err;
}
     4dc:	89 2f       	mov	r24, r25
     4de:	08 95       	ret

000004e0 <checkCRC>:

char checkCRC(void)					// Obliczenie sumy kontrolnej komunikatu
{	
     4e0:	40 e0       	ldi	r20, 0x00	; 0
     4e2:	55 e5       	ldi	r21, 0x55	; 85
     4e4:	03 c0       	rjmp	.+6      	; 0x4ec <checkCRC+0xc>
	unsigned char i = 0;						// zmienna pomocnicza
	char sumaCRC = 0x55;						// pocz¹tkowa wartoœæ sumy kontrolnej

	for(i=0; i<(FRAME_IN_SIZE-1); i++)
		sumaCRC ^= frame_in[i];
     4e6:	80 81       	ld	r24, Z
     4e8:	58 27       	eor	r21, r24
char checkCRC(void)					// Obliczenie sumy kontrolnej komunikatu
{	
	unsigned char i = 0;						// zmienna pomocnicza
	char sumaCRC = 0x55;						// pocz¹tkowa wartoœæ sumy kontrolnej

	for(i=0; i<(FRAME_IN_SIZE-1); i++)
     4ea:	4f 5f       	subi	r20, 0xFF	; 255
     4ec:	24 2f       	mov	r18, r20
     4ee:	30 e0       	ldi	r19, 0x00	; 0
     4f0:	80 91 92 00 	lds	r24, 0x0092
     4f4:	90 e0       	ldi	r25, 0x00	; 0
     4f6:	01 97       	sbiw	r24, 0x01	; 1
     4f8:	f9 01       	movw	r30, r18
     4fa:	ef 5a       	subi	r30, 0xAF	; 175
     4fc:	fe 4f       	sbci	r31, 0xFE	; 254
     4fe:	28 17       	cp	r18, r24
     500:	39 07       	cpc	r19, r25
     502:	8c f3       	brlt	.-30     	; 0x4e6 <checkCRC+0x6>
		sumaCRC ^= frame_in[i];

	if(sumaCRC != frame_in[i]) return 0;
     504:	80 81       	ld	r24, Z
     506:	90 e0       	ldi	r25, 0x00	; 0
     508:	58 17       	cp	r21, r24
     50a:	09 f4       	brne	.+2      	; 0x50e <checkCRC+0x2e>
     50c:	91 e0       	ldi	r25, 0x01	; 1

	return 1;
}
     50e:	89 2f       	mov	r24, r25
     510:	08 95       	ret

00000512 <SYM_init>:

char SYM_init(long predkosc, char ile_aWe, char ile_aWy)
{
     512:	ef 92       	push	r14
     514:	ff 92       	push	r15
     516:	0f 93       	push	r16
     518:	1f 93       	push	r17
     51a:	7b 01       	movw	r14, r22
     51c:	8c 01       	movw	r16, r24
	unsigned char i;

	if(ile_aWe*2>sizeof(aWe)) return 2;			// Zbyt ma³y rozmiar aWe[]
     51e:	e4 2f       	mov	r30, r20
     520:	f0 e0       	ldi	r31, 0x00	; 0
     522:	e1 31       	cpi	r30, 0x11	; 17
     524:	f1 05       	cpc	r31, r1
     526:	10 f0       	brcs	.+4      	; 0x52c <SYM_init+0x1a>
     528:	82 e0       	ldi	r24, 0x02	; 2
     52a:	82 c0       	rjmp	.+260    	; 0x630 <SYM_init+0x11e>
	if(ile_aWy*2>sizeof(aWy)) return 3;			// Zbyt ma³y rozmiar aWy[]
     52c:	21 31       	cpi	r18, 0x11	; 17
     52e:	10 f0       	brcs	.+4      	; 0x534 <SYM_init+0x22>
     530:	83 e0       	ldi	r24, 0x03	; 3
     532:	7e c0       	rjmp	.+252    	; 0x630 <SYM_init+0x11e>
	if(ile_aWe*2+4>sizeof(frame_in)) return 4;	// Zbyt ma³y rozmiar frame_in[]
     534:	cf 01       	movw	r24, r30
     536:	02 96       	adiw	r24, 0x02	; 2
     538:	88 0f       	add	r24, r24
     53a:	99 1f       	adc	r25, r25
     53c:	89 32       	cpi	r24, 0x29	; 41
     53e:	91 05       	cpc	r25, r1
     540:	10 f0       	brcs	.+4      	; 0x546 <SYM_init+0x34>
     542:	84 e0       	ldi	r24, 0x04	; 4
     544:	75 c0       	rjmp	.+234    	; 0x630 <SYM_init+0x11e>

	cli();										// Zablokowanie obs³ugi przerwañ
     546:	f8 94       	cli
     548:	a0 e0       	ldi	r26, 0x00	; 0
     54a:	b0 e0       	ldi	r27, 0x00	; 0
	// Wyczyszczenie buforow
	for(i=0; i<FRAME_IN_MAX; i++) { frame_in[i]=0; }
     54c:	fd 01       	movw	r30, r26
     54e:	ef 5a       	subi	r30, 0xAF	; 175
     550:	fe 4f       	sbci	r31, 0xFE	; 254
     552:	10 82       	st	Z, r1
     554:	11 96       	adiw	r26, 0x01	; 1
     556:	a8 32       	cpi	r26, 0x28	; 40
     558:	b1 05       	cpc	r27, r1
     55a:	c1 f7       	brne	.-16     	; 0x54c <SYM_init+0x3a>
	bWy[0]=0; bWy[1]=0;							// Ustawienie "bezpiecznych" wart. pocz¹tkowych
     55c:	10 92 96 00 	sts	0x0096, r1
     560:	10 92 97 00 	sts	0x0097, r1
     564:	ed ef       	ldi	r30, 0xFD	; 253
     566:	f0 e0       	ldi	r31, 0x00	; 0
	for(i=0; i<aWy_MAX; i++) { aWy[i]=0; }
     568:	11 92       	st	Z+, r1
     56a:	11 92       	st	Z+, r1
     56c:	31 e0       	ldi	r19, 0x01	; 1
     56e:	ed 31       	cpi	r30, 0x1D	; 29
     570:	f3 07       	cpc	r31, r19
     572:	d1 f7       	brne	.-12     	; 0x568 <SYM_init+0x56>

	// Ustawienie zmiennych
	FRAME_IN_SIZE = 4 + ile_aWe * 2;			// Rozmiar komunikatu (razem z CRC)
     574:	80 93 92 00 	sts	0x0092, r24
	OUT_ILE_CALKOWITYCH = ile_aWy;				// Liczba wyjœæ analogowych
     578:	20 93 99 00 	sts	0x0099, r18
	IN_ILE_CALKOWITYCH = ile_aWe;				// Liczba wejœæ analogowych
     57c:	40 93 98 00 	sts	0x0098, r20
	
	if(UART_init(predkosc)) return 1;			// B³¹d inicjowania UART
     580:	c8 01       	movw	r24, r16
     582:	b7 01       	movw	r22, r14
     584:	0e 94 44 02 	call	0x488	; 0x488 <UART_init>
     588:	88 23       	and	r24, r24
     58a:	11 f0       	breq	.+4      	; 0x590 <SYM_init+0x7e>
     58c:	81 e0       	ldi	r24, 0x01	; 1
     58e:	50 c0       	rjmp	.+160    	; 0x630 <SYM_init+0x11e>
	
	x_in = 0;									// Opró¿nienie bufora komunikatów
     590:	10 92 cd 00 	sts	0x00CD, r1
	rozpoczeto_transmisje=0;
     594:	10 92 ce 00 	sts	0x00CE, r1
	sei();										// Odblokowanie obs³ugi przerwañ
     598:	78 94       	sei

	X1 = bWe[0]&0x01 ? 1 : 0;					// Pocz¹tkowy stan czujnika X1
     59a:	30 91 94 00 	lds	r19, 0x0094
     59e:	83 2f       	mov	r24, r19
     5a0:	81 70       	andi	r24, 0x01	; 1
     5a2:	80 93 4d 01 	sts	0x014D, r24
	X2 = bWe[0]&0x02 ? 1 : 0;					// Pocz¹tkowy stan czujnika X2
     5a6:	83 2f       	mov	r24, r19
     5a8:	90 e0       	ldi	r25, 0x00	; 0
     5aa:	96 95       	lsr	r25
     5ac:	87 95       	ror	r24
     5ae:	28 2f       	mov	r18, r24
     5b0:	21 70       	andi	r18, 0x01	; 1
     5b2:	20 93 ed 00 	sts	0x00ED, r18
	X3 = bWe[0]&0x04 ? 1 : 0;					// Pocz¹tkowy stan czujnika X3
     5b6:	96 95       	lsr	r25
     5b8:	87 95       	ror	r24
     5ba:	28 2f       	mov	r18, r24
     5bc:	21 70       	andi	r18, 0x01	; 1
     5be:	20 93 7d 01 	sts	0x017D, r18
	X4 = bWe[0]&0x08 ? 1 : 0;					// Pocz¹tkowy stan czujnika X4
     5c2:	96 95       	lsr	r25
     5c4:	87 95       	ror	r24
     5c6:	28 2f       	mov	r18, r24
     5c8:	21 70       	andi	r18, 0x01	; 1
     5ca:	20 93 f6 00 	sts	0x00F6, r18
	X5 = bWe[0]&0x10 ? 1 : 0;					// Pocz¹tkowy stan czujnika X5
     5ce:	96 95       	lsr	r25
     5d0:	87 95       	ror	r24
     5d2:	28 2f       	mov	r18, r24
     5d4:	21 70       	andi	r18, 0x01	; 1
     5d6:	20 93 d0 00 	sts	0x00D0, r18
	X6 = bWe[0]&0x20 ? 1 : 0;					// Pocz¹tkowy stan czujnika X6
     5da:	96 95       	lsr	r25
     5dc:	87 95       	ror	r24
     5de:	28 2f       	mov	r18, r24
     5e0:	21 70       	andi	r18, 0x01	; 1
     5e2:	20 93 c1 01 	sts	0x01C1, r18
	X7 = bWe[0]&0x40 ? 1 : 0;					// Pocz¹tkowy stan czujnika X7
     5e6:	96 95       	lsr	r25
     5e8:	87 95       	ror	r24
     5ea:	81 70       	andi	r24, 0x01	; 1
     5ec:	80 93 d7 00 	sts	0x00D7, r24
	X8 = bWe[0]&0x80 ? 1 : 0;					// Pocz¹tkowy stan czujnika X8
     5f0:	10 92 c6 01 	sts	0x01C6, r1
     5f4:	37 ff       	sbrs	r19, 7
     5f6:	03 c0       	rjmp	.+6      	; 0x5fe <SYM_init+0xec>
     5f8:	81 e0       	ldi	r24, 0x01	; 1
     5fa:	80 93 c6 01 	sts	0x01C6, r24
	X9 = bWe[1]&0x01 ? 1 : 0;					// Pocz¹tkowy stan czujnika X9
     5fe:	80 91 95 00 	lds	r24, 0x0095
     602:	28 2f       	mov	r18, r24
     604:	21 70       	andi	r18, 0x01	; 1
     606:	20 93 4f 01 	sts	0x014F, r18
	X10= bWe[1]&0x02 ? 1 : 0;					// Pocz¹tkowy stan czujnika X10
     60a:	90 e0       	ldi	r25, 0x00	; 0
     60c:	96 95       	lsr	r25
     60e:	87 95       	ror	r24
     610:	28 2f       	mov	r18, r24
     612:	21 70       	andi	r18, 0x01	; 1
     614:	20 93 f0 00 	sts	0x00F0, r18
	X11= bWe[1]&0x04 ? 1 : 0;					// Pocz¹tkowy stan czujnika X11
     618:	96 95       	lsr	r25
     61a:	87 95       	ror	r24
     61c:	28 2f       	mov	r18, r24
     61e:	21 70       	andi	r18, 0x01	; 1
     620:	20 93 d3 00 	sts	0x00D3, r18
	X12= bWe[1]&0x08 ? 1 : 0;					// Pocz¹tkowy stan czujnika X12
     624:	96 95       	lsr	r25
     626:	87 95       	ror	r24
     628:	81 70       	andi	r24, 0x01	; 1
     62a:	80 93 ee 00 	sts	0x00EE, r24
     62e:	80 e0       	ldi	r24, 0x00	; 0
	
	return 0;
}
     630:	1f 91       	pop	r17
     632:	0f 91       	pop	r16
     634:	ff 90       	pop	r15
     636:	ef 90       	pop	r14
     638:	08 95       	ret

0000063a <SYM_read>:

char SYM_read(void)					// Odczyt wejœæ symulowanego obiektu
{	
     63a:	08 c0       	rjmp	.+16     	; 0x64c <SYM_read+0x12>
	unsigned char i;
	int *ptr=(int*)(frame_in+3);				// WskaŸnik na pierwsze wejœcie analogowe
	
	while(x_in)									// Poczekaj na odczyt ca³ej ramki
	{
		if(!cykl) break;						// Przerwij jeœli up³yn¹³ czas
     63c:	80 91 f1 00 	lds	r24, 0x00F1
     640:	88 23       	and	r24, r24
     642:	41 f0       	breq	.+16     	; 0x654 <SYM_read+0x1a>
		{
			x_in=0;								// Rozpocznij od nowa
     644:	10 92 cd 00 	sts	0x00CD, r1
			rozpoczeto_transmisje=0;
     648:	10 92 ce 00 	sts	0x00CE, r1
char SYM_read(void)					// Odczyt wejœæ symulowanego obiektu
{	
	unsigned char i;
	int *ptr=(int*)(frame_in+3);				// WskaŸnik na pierwsze wejœcie analogowe
	
	while(x_in)									// Poczekaj na odczyt ca³ej ramki
     64c:	80 91 cd 00 	lds	r24, 0x00CD
     650:	88 23       	and	r24, r24
     652:	a1 f7       	brne	.-24     	; 0x63c <SYM_read+0x2>
		{
			x_in=0;								// Rozpocznij od nowa
			rozpoczeto_transmisje=0;
		}
	}
	if(rozpoczeto_transmisje)
     654:	80 91 ce 00 	lds	r24, 0x00CE
     658:	88 23       	and	r24, r24
     65a:	09 f4       	brne	.+2      	; 0x65e <SYM_read+0x24>
     65c:	73 c0       	rjmp	.+230    	; 0x744 <SYM_read+0x10a>
	{
		if(checkCRC())							// Jeœli suma kontrolna OK
     65e:	0e 94 70 02 	call	0x4e0	; 0x4e0 <checkCRC>
     662:	88 23       	and	r24, r24
     664:	09 f4       	brne	.+2      	; 0x668 <SYM_read+0x2e>
     666:	6b c0       	rjmp	.+214    	; 0x73e <SYM_read+0x104>
		{
			bWe[0]=frame_in[1];					// 1-szy bajt wejœæ binarnych
     668:	60 91 52 01 	lds	r22, 0x0152
     66c:	60 93 94 00 	sts	0x0094, r22
			bWe[1]=frame_in[2];					// 2-gi bajt wejœæ binarnych
     670:	70 91 53 01 	lds	r23, 0x0153
     674:	70 93 95 00 	sts	0x0095, r23
			for(i=0;i<IN_ILE_CALKOWITYCH;i++)
     678:	80 91 98 00 	lds	r24, 0x0098
     67c:	20 e0       	ldi	r18, 0x00	; 0
     67e:	30 e0       	ldi	r19, 0x00	; 0
     680:	48 2f       	mov	r20, r24
     682:	50 e0       	ldi	r21, 0x00	; 0
     684:	4f 5f       	subi	r20, 0xFF	; 255
     686:	5f 4f       	sbci	r21, 0xFF	; 255
     688:	44 0f       	add	r20, r20
     68a:	55 1f       	adc	r21, r21
     68c:	0c c0       	rjmp	.+24     	; 0x6a6 <SYM_read+0x6c>
				aWe[i]=*ptr++;					// Kolejne wejœcia analogowe
     68e:	f9 01       	movw	r30, r18
     690:	e5 5e       	subi	r30, 0xE5	; 229
     692:	fe 4f       	sbci	r31, 0xFE	; 254
     694:	d9 01       	movw	r26, r18
     696:	af 5a       	subi	r26, 0xAF	; 175
     698:	be 4f       	sbci	r27, 0xFE	; 254
     69a:	11 96       	adiw	r26, 0x01	; 1
     69c:	8d 91       	ld	r24, X+
     69e:	9c 91       	ld	r25, X
     6a0:	12 97       	sbiw	r26, 0x02	; 2
     6a2:	91 83       	std	Z+1, r25	; 0x01
     6a4:	80 83       	st	Z, r24
     6a6:	2e 5f       	subi	r18, 0xFE	; 254
     6a8:	3f 4f       	sbci	r19, 0xFF	; 255
	{
		if(checkCRC())							// Jeœli suma kontrolna OK
		{
			bWe[0]=frame_in[1];					// 1-szy bajt wejœæ binarnych
			bWe[1]=frame_in[2];					// 2-gi bajt wejœæ binarnych
			for(i=0;i<IN_ILE_CALKOWITYCH;i++)
     6aa:	24 17       	cp	r18, r20
     6ac:	35 07       	cpc	r19, r21
     6ae:	79 f7       	brne	.-34     	; 0x68e <SYM_read+0x54>
				aWe[i]=*ptr++;					// Kolejne wejœcia analogowe
				
			X1 = bWe[0]&0x01 ? 1 : 0;			// Stan czujnika X1
     6b0:	86 2f       	mov	r24, r22
     6b2:	81 70       	andi	r24, 0x01	; 1
     6b4:	80 93 4d 01 	sts	0x014D, r24
			X2 = bWe[0]&0x02 ? 1 : 0;			// Stan czujnika X2
     6b8:	86 2f       	mov	r24, r22
     6ba:	90 e0       	ldi	r25, 0x00	; 0
     6bc:	96 95       	lsr	r25
     6be:	87 95       	ror	r24
     6c0:	28 2f       	mov	r18, r24
     6c2:	21 70       	andi	r18, 0x01	; 1
     6c4:	20 93 ed 00 	sts	0x00ED, r18
			X3 = bWe[0]&0x04 ? 1 : 0;			// Stan czujnika X3
     6c8:	96 95       	lsr	r25
     6ca:	87 95       	ror	r24
     6cc:	28 2f       	mov	r18, r24
     6ce:	21 70       	andi	r18, 0x01	; 1
     6d0:	20 93 7d 01 	sts	0x017D, r18
			X4 = bWe[0]&0x08 ? 1 : 0;			// Stan czujnika X4
     6d4:	96 95       	lsr	r25
     6d6:	87 95       	ror	r24
     6d8:	28 2f       	mov	r18, r24
     6da:	21 70       	andi	r18, 0x01	; 1
     6dc:	20 93 f6 00 	sts	0x00F6, r18
			X5 = bWe[0]&0x10 ? 1 : 0;			// Stan czujnika X5
     6e0:	96 95       	lsr	r25
     6e2:	87 95       	ror	r24
     6e4:	28 2f       	mov	r18, r24
     6e6:	21 70       	andi	r18, 0x01	; 1
     6e8:	20 93 d0 00 	sts	0x00D0, r18
			X6 = bWe[0]&0x20 ? 1 : 0;			// Stan czujnika X6
     6ec:	96 95       	lsr	r25
     6ee:	87 95       	ror	r24
     6f0:	28 2f       	mov	r18, r24
     6f2:	21 70       	andi	r18, 0x01	; 1
     6f4:	20 93 c1 01 	sts	0x01C1, r18
			X7 = bWe[0]&0x40 ? 1 : 0;			// Stan czujnika X7
     6f8:	96 95       	lsr	r25
     6fa:	87 95       	ror	r24
     6fc:	81 70       	andi	r24, 0x01	; 1
     6fe:	80 93 d7 00 	sts	0x00D7, r24
			X8 = bWe[0]&0x80 ? 1 : 0;			// Stan czujnika X8
     702:	10 92 c6 01 	sts	0x01C6, r1
     706:	67 ff       	sbrs	r22, 7
     708:	03 c0       	rjmp	.+6      	; 0x710 <SYM_read+0xd6>
     70a:	81 e0       	ldi	r24, 0x01	; 1
     70c:	80 93 c6 01 	sts	0x01C6, r24
			X9 = bWe[1]&0x01 ? 1 : 0;			// Stan czujnika X9
     710:	87 2f       	mov	r24, r23
     712:	81 70       	andi	r24, 0x01	; 1
     714:	80 93 4f 01 	sts	0x014F, r24
			X10= bWe[1]&0x02 ? 1 : 0;			// Stan czujnika X10
     718:	87 2f       	mov	r24, r23
     71a:	90 e0       	ldi	r25, 0x00	; 0
     71c:	96 95       	lsr	r25
     71e:	87 95       	ror	r24
     720:	28 2f       	mov	r18, r24
     722:	21 70       	andi	r18, 0x01	; 1
     724:	20 93 f0 00 	sts	0x00F0, r18
			X11= bWe[1]&0x04 ? 1 : 0;			// Stan czujnika X11
     728:	96 95       	lsr	r25
     72a:	87 95       	ror	r24
     72c:	28 2f       	mov	r18, r24
     72e:	21 70       	andi	r18, 0x01	; 1
     730:	20 93 d3 00 	sts	0x00D3, r18
			X12= bWe[1]&0x08 ? 1 : 0;			// Stan czujnika X12
     734:	96 95       	lsr	r25
     736:	87 95       	ror	r24
     738:	81 70       	andi	r24, 0x01	; 1
     73a:	80 93 ee 00 	sts	0x00EE, r24
		}
		rozpoczeto_transmisje=0;
     73e:	10 92 ce 00 	sts	0x00CE, r1
     742:	81 e0       	ldi	r24, 0x01	; 1
		return 1;
	}
	return 0;	
}
     744:	08 95       	ret

00000746 <SYM_send>:
void SYM_send(void)					// Wyœlij komunikat do symulatora obiektów
{	unsigned char i;
	unsigned char crc = 0x55;
	unsigned char byte_to_send = 0;
	
	bWy[0]=0;									// Stan wyjœæ sterownika
     746:	10 92 96 00 	sts	0x0096, r1
	if(Y1) bWy[0] |= 0x01;						// Dopisz stan wyjœcia Y1
     74a:	80 91 c5 01 	lds	r24, 0x01C5
     74e:	88 23       	and	r24, r24
     750:	19 f0       	breq	.+6      	; 0x758 <SYM_send+0x12>
     752:	81 e0       	ldi	r24, 0x01	; 1
     754:	80 93 96 00 	sts	0x0096, r24
	if(Y2) bWy[0] |= 0x02;						// Dopisz stan wyjœcia Y2
     758:	80 91 ec 00 	lds	r24, 0x00EC
     75c:	88 23       	and	r24, r24
     75e:	29 f0       	breq	.+10     	; 0x76a <SYM_send+0x24>
     760:	80 91 96 00 	lds	r24, 0x0096
     764:	82 60       	ori	r24, 0x02	; 2
     766:	80 93 96 00 	sts	0x0096, r24
	if(Y3) bWy[0] |= 0x04;						// Dopisz stan wyjœcia Y3
     76a:	80 91 cc 01 	lds	r24, 0x01CC
     76e:	88 23       	and	r24, r24
     770:	29 f0       	breq	.+10     	; 0x77c <SYM_send+0x36>
     772:	80 91 96 00 	lds	r24, 0x0096
     776:	84 60       	ori	r24, 0x04	; 4
     778:	80 93 96 00 	sts	0x0096, r24
	if(Y4) bWy[0] |= 0x08;						// Dopisz stan wyjœcia Y4
     77c:	80 91 7c 01 	lds	r24, 0x017C
     780:	88 23       	and	r24, r24
     782:	29 f0       	breq	.+10     	; 0x78e <SYM_send+0x48>
     784:	80 91 96 00 	lds	r24, 0x0096
     788:	88 60       	ori	r24, 0x08	; 8
     78a:	80 93 96 00 	sts	0x0096, r24
	if(Y5) bWy[0] |= 0x10;						// Dopisz stan wyjœcia Y5
     78e:	80 91 d9 00 	lds	r24, 0x00D9
     792:	88 23       	and	r24, r24
     794:	29 f0       	breq	.+10     	; 0x7a0 <SYM_send+0x5a>
     796:	80 91 96 00 	lds	r24, 0x0096
     79a:	80 61       	ori	r24, 0x10	; 16
     79c:	80 93 96 00 	sts	0x0096, r24
	if(Y6) bWy[0] |= 0x20;						// Dopisz stan wyjœcia Y6
     7a0:	80 91 4e 01 	lds	r24, 0x014E
     7a4:	88 23       	and	r24, r24
     7a6:	29 f0       	breq	.+10     	; 0x7b2 <SYM_send+0x6c>
     7a8:	80 91 96 00 	lds	r24, 0x0096
     7ac:	80 62       	ori	r24, 0x20	; 32
     7ae:	80 93 96 00 	sts	0x0096, r24
	if(Y7) bWy[0] |= 0x40;						// Dopisz stan wyjœcia Y7
     7b2:	80 91 f3 00 	lds	r24, 0x00F3
     7b6:	88 23       	and	r24, r24
     7b8:	29 f0       	breq	.+10     	; 0x7c4 <SYM_send+0x7e>
     7ba:	80 91 96 00 	lds	r24, 0x0096
     7be:	80 64       	ori	r24, 0x40	; 64
     7c0:	80 93 96 00 	sts	0x0096, r24
	if(Y8) bWy[0] |= 0x80;						// Dopisz stan wyjœcia Y8
     7c4:	80 91 cf 01 	lds	r24, 0x01CF
     7c8:	88 23       	and	r24, r24
     7ca:	29 f0       	breq	.+10     	; 0x7d6 <SYM_send+0x90>
     7cc:	80 91 96 00 	lds	r24, 0x0096
     7d0:	80 68       	ori	r24, 0x80	; 128
     7d2:	80 93 96 00 	sts	0x0096, r24
	
	//Wyœlij ile liczb ca³kowitych
	while(!(UCSRA & _BV(UDRE)));				// Czekaj, jeœli nie wys³any poprzedni znak
     7d6:	5d 9b       	sbis	0x0b, 5	; 11
     7d8:	fe cf       	rjmp	.-4      	; 0x7d6 <SYM_send+0x90>
	UDR = OUT_ILE_CALKOWITYCH;					// Wyœlij przez UART liczbê wyjœæ analogowych
     7da:	30 91 99 00 	lds	r19, 0x0099
     7de:	3c b9       	out	0x0c, r19	; 12
	crc ^= OUT_ILE_CALKOWITYCH;					// Obliczaj sumê kontroln¹
	
	//Wyœlij pola bitowe
	while(!(UCSRA & _BV(UDRE)));				// Czekaj, jeœli nie wys³any poprzedni znak
     7e0:	5d 9b       	sbis	0x0b, 5	; 11
     7e2:	fe cf       	rjmp	.-4      	; 0x7e0 <SYM_send+0x9a>
	UDR = bWy[0];								// Wyœlij przez UART 1-szy bajt wyjœæ binarnych
     7e4:	80 91 96 00 	lds	r24, 0x0096
     7e8:	8c b9       	out	0x0c, r24	; 12
	crc ^= bWy[0];								// Obliczaj sumê kontroln¹
	while(!(UCSRA & _BV(UDRE)));				// Czekaj, jeœli nie wys³any poprzedni znak
     7ea:	5d 9b       	sbis	0x0b, 5	; 11
     7ec:	fe cf       	rjmp	.-4      	; 0x7ea <SYM_send+0xa4>
	UDR = bWy[1];								// Wyœlij przez UART 2-gi bajt wyjœæ binarnych
     7ee:	90 91 97 00 	lds	r25, 0x0097
     7f2:	9c b9       	out	0x0c, r25	; 12
	if(Y8) bWy[0] |= 0x80;						// Dopisz stan wyjœcia Y8
	
	//Wyœlij ile liczb ca³kowitych
	while(!(UCSRA & _BV(UDRE)));				// Czekaj, jeœli nie wys³any poprzedni znak
	UDR = OUT_ILE_CALKOWITYCH;					// Wyœlij przez UART liczbê wyjœæ analogowych
	crc ^= OUT_ILE_CALKOWITYCH;					// Obliczaj sumê kontroln¹
     7f4:	23 2f       	mov	r18, r19
     7f6:	28 27       	eor	r18, r24
	
	//Wyœlij pola bitowe
	while(!(UCSRA & _BV(UDRE)));				// Czekaj, jeœli nie wys³any poprzedni znak
	UDR = bWy[0];								// Wyœlij przez UART 1-szy bajt wyjœæ binarnych
	crc ^= bWy[0];								// Obliczaj sumê kontroln¹
     7f8:	85 e5       	ldi	r24, 0x55	; 85
     7fa:	28 27       	eor	r18, r24
	while(!(UCSRA & _BV(UDRE)));				// Czekaj, jeœli nie wys³any poprzedni znak
	UDR = bWy[1];								// Wyœlij przez UART 2-gi bajt wyjœæ binarnych
	crc ^= bWy[1];								// Obliczaj sumê kontroln¹
     7fc:	29 27       	eor	r18, r25
     7fe:	90 e0       	ldi	r25, 0x00	; 0
     800:	19 c0       	rjmp	.+50     	; 0x834 <SYM_send+0xee>
	
	//wyœlij liczby ca³kowite
	for(i=0; i<OUT_ILE_CALKOWITYCH; i++)
	{
		byte_to_send = aWy[y_out]>>8;			// Starszy bajt liczby
     802:	e0 91 cc 00 	lds	r30, 0x00CC
     806:	f0 e0       	ldi	r31, 0x00	; 0
     808:	ee 0f       	add	r30, r30
     80a:	ff 1f       	adc	r31, r31
     80c:	e3 50       	subi	r30, 0x03	; 3
     80e:	ff 4f       	sbci	r31, 0xFF	; 255
     810:	81 81       	ldd	r24, Z+1	; 0x01
		while(!(UCSRA & _BV(UDRE)));			// Czekaj, jeœli nie wys³any poprzedni znak
     812:	5d 9b       	sbis	0x0b, 5	; 11
     814:	fe cf       	rjmp	.-4      	; 0x812 <SYM_send+0xcc>
		UDR = byte_to_send;						// Wyœlij bajt przez UART
     816:	8c b9       	out	0x0c, r24	; 12
		crc ^= byte_to_send;					// Obliczaj sumê kontroln¹

		byte_to_send = (char)aWy[y_out];		// M³odszy bajt liczby
     818:	e0 91 cc 00 	lds	r30, 0x00CC
     81c:	f0 e0       	ldi	r31, 0x00	; 0
     81e:	ee 0f       	add	r30, r30
     820:	ff 1f       	adc	r31, r31
     822:	e3 50       	subi	r30, 0x03	; 3
     824:	ff 4f       	sbci	r31, 0xFF	; 255
     826:	e0 81       	ld	r30, Z
		while(!(UCSRA & _BV(UDRE)));			// Czekaj, jeœli nie wys³any poprzedni znak
     828:	5d 9b       	sbis	0x0b, 5	; 11
     82a:	fe cf       	rjmp	.-4      	; 0x828 <SYM_send+0xe2>
		UDR = byte_to_send;						// Wyœlij bajt przez UART
     82c:	ec b9       	out	0x0c, r30	; 12
	for(i=0; i<OUT_ILE_CALKOWITYCH; i++)
	{
		byte_to_send = aWy[y_out]>>8;			// Starszy bajt liczby
		while(!(UCSRA & _BV(UDRE)));			// Czekaj, jeœli nie wys³any poprzedni znak
		UDR = byte_to_send;						// Wyœlij bajt przez UART
		crc ^= byte_to_send;					// Obliczaj sumê kontroln¹
     82e:	8e 27       	eor	r24, r30

		byte_to_send = (char)aWy[y_out];		// M³odszy bajt liczby
		while(!(UCSRA & _BV(UDRE)));			// Czekaj, jeœli nie wys³any poprzedni znak
		UDR = byte_to_send;						// Wyœlij bajt przez UART
		crc ^= byte_to_send;					// Obliczaj sumê kontroln¹
     830:	28 27       	eor	r18, r24
	while(!(UCSRA & _BV(UDRE)));				// Czekaj, jeœli nie wys³any poprzedni znak
	UDR = bWy[1];								// Wyœlij przez UART 2-gi bajt wyjœæ binarnych
	crc ^= bWy[1];								// Obliczaj sumê kontroln¹
	
	//wyœlij liczby ca³kowite
	for(i=0; i<OUT_ILE_CALKOWITYCH; i++)
     832:	9f 5f       	subi	r25, 0xFF	; 255
     834:	93 17       	cp	r25, r19
     836:	28 f3       	brcs	.-54     	; 0x802 <SYM_send+0xbc>
		while(!(UCSRA & _BV(UDRE)));			// Czekaj, jeœli nie wys³any poprzedni znak
		UDR = byte_to_send;						// Wyœlij bajt przez UART
		crc ^= byte_to_send;					// Obliczaj sumê kontroln¹
	}
	//wyœlij crc
	while(!(UCSRA & _BV(UDRE)));				// Czekaj, jeœli niewys³any poprzedni znak
     838:	5d 9b       	sbis	0x0b, 5	; 11
     83a:	fe cf       	rjmp	.-4      	; 0x838 <SYM_send+0xf2>
	UDR = crc;									// Wyœlij przez UART sumê kontroln¹
     83c:	2c b9       	out	0x0c, r18	; 12
}
     83e:	08 95       	ret

00000840 <__vector_10>:
	}
	return 0; 
}

ISR(TIMER0_COMP_vect)				// Przerwanie od Timer/Counter 0 (co 4ms)
{
     840:	1f 92       	push	r1
     842:	0f 92       	push	r0
     844:	0f b6       	in	r0, 0x3f	; 63
     846:	0f 92       	push	r0
     848:	11 24       	eor	r1, r1
     84a:	8f 93       	push	r24
     84c:	9f 93       	push	r25
	if(cykl) --cykl;				// Odmierzanie czasu cyklu pêtli g³ównej
     84e:	80 91 f1 00 	lds	r24, 0x00F1
     852:	88 23       	and	r24, r24
     854:	29 f0       	breq	.+10     	; 0x860 <__stack+0x1>
     856:	80 91 f1 00 	lds	r24, 0x00F1
     85a:	81 50       	subi	r24, 0x01	; 1
     85c:	80 93 f1 00 	sts	0x00F1, r24
	LCD_xy(1,2); LCD_puts(buf);
}

void przerwanie(void)      	// ObsÅ‚ugs przerwania od ukÅ‚adu czasowo-licznikowego
{
    licz++;
     860:	80 91 ca 00 	lds	r24, 0x00CA
     864:	90 91 cb 00 	lds	r25, 0x00CB
     868:	01 96       	adiw	r24, 0x01	; 1
     86a:	90 93 cb 00 	sts	0x00CB, r25
     86e:	80 93 ca 00 	sts	0x00CA, r24
	przerwanie();
}
     872:	9f 91       	pop	r25
     874:	8f 91       	pop	r24
     876:	0f 90       	pop	r0
     878:	0f be       	out	0x3f, r0	; 63
     87a:	0f 90       	pop	r0
     87c:	1f 90       	pop	r1
     87e:	18 95       	reti

00000880 <prolog>:
// --- Zmienne uÅ¼ytkownika ---
int licz=0;                	// Licznik przerwaÅ„

void prolog(void)			// Inicjowanie programu (jednorazowo przy starcie)
{
    L1=L2=L3=L4=0;         	// Zgaszenie LED-Ã³w
     880:	10 92 ca 01 	sts	0x01CA, r1
     884:	10 92 50 01 	sts	0x0150, r1
     888:	10 92 cd 01 	sts	0x01CD, r1
     88c:	10 92 f2 00 	sts	0x00F2, r1
}
     890:	08 95       	ret

00000892 <przerwanie>:
	LCD_xy(1,2); LCD_puts(buf);
}

void przerwanie(void)      	// ObsÅ‚ugs przerwania od ukÅ‚adu czasowo-licznikowego
{
    licz++;
     892:	80 91 ca 00 	lds	r24, 0x00CA
     896:	90 91 cb 00 	lds	r25, 0x00CB
     89a:	01 96       	adiw	r24, 0x01	; 1
     89c:	90 93 cb 00 	sts	0x00CB, r25
     8a0:	80 93 ca 00 	sts	0x00CA, r24
}
     8a4:	08 95       	ret

000008a6 <komunikacja>:

void komunikacja(void)		// ObsÅ‚uga komunikacji szeregowej
{}
     8a6:	08 95       	ret

000008a8 <oblicz>:
{
    L1=L2=L3=L4=0;         	// Zgaszenie LED-Ã³w
}

void oblicz(void)			// Kod uÅ¼ytkownika wykonywany cyklicznie
{ 
     8a8:	ff 92       	push	r15
     8aa:	0f 93       	push	r16
     8ac:	1f 93       	push	r17
    L1=aK1; L2=aK2; L3=aK3; L4=aK4;
     8ae:	f0 90 db 00 	lds	r15, 0x00DB
     8b2:	f0 92 f2 00 	sts	0x00F2, r15
     8b6:	40 91 cf 00 	lds	r20, 0x00CF
     8ba:	40 93 cd 01 	sts	0x01CD, r20
     8be:	30 91 d2 00 	lds	r19, 0x00D2
     8c2:	30 93 50 01 	sts	0x0150, r19
     8c6:	20 91 ef 00 	lds	r18, 0x00EF
     8ca:	20 93 ca 01 	sts	0x01CA, r18
    
    if(aK1) Z1 = 1; else Z1 = 0;
     8ce:	ff 20       	and	r15, r15
     8d0:	21 f0       	breq	.+8      	; 0x8da <oblicz+0x32>
     8d2:	81 e0       	ldi	r24, 0x01	; 1
     8d4:	80 93 c5 01 	sts	0x01C5, r24
     8d8:	02 c0       	rjmp	.+4      	; 0x8de <oblicz+0x36>
     8da:	10 92 c5 01 	sts	0x01C5, r1
    if(aK2) Z2 = 1; else Z2 = 0;
     8de:	44 23       	and	r20, r20
     8e0:	21 f0       	breq	.+8      	; 0x8ea <oblicz+0x42>
     8e2:	81 e0       	ldi	r24, 0x01	; 1
     8e4:	80 93 ec 00 	sts	0x00EC, r24
     8e8:	02 c0       	rjmp	.+4      	; 0x8ee <oblicz+0x46>
     8ea:	10 92 ec 00 	sts	0x00EC, r1
    if(aK3) Z3 = 1; else Z3 = 0;
     8ee:	33 23       	and	r19, r19
     8f0:	21 f0       	breq	.+8      	; 0x8fa <oblicz+0x52>
     8f2:	81 e0       	ldi	r24, 0x01	; 1
     8f4:	80 93 cc 01 	sts	0x01CC, r24
     8f8:	02 c0       	rjmp	.+4      	; 0x8fe <oblicz+0x56>
     8fa:	10 92 cc 01 	sts	0x01CC, r1
    if(aK4) G1 = 1; else G1 = 0;
     8fe:	22 23       	and	r18, r18
     900:	31 f0       	breq	.+12     	; 0x90e <oblicz+0x66>
     902:	81 e0       	ldi	r24, 0x01	; 1
     904:	80 93 f3 00 	sts	0x00F3, r24
    if(aK4) M  = 1; else M  = 0;
     908:	80 93 4e 01 	sts	0x014E, r24
     90c:	04 c0       	rjmp	.+8      	; 0x916 <oblicz+0x6e>
    L1=aK1; L2=aK2; L3=aK3; L4=aK4;
    
    if(aK1) Z1 = 1; else Z1 = 0;
    if(aK2) Z2 = 1; else Z2 = 0;
    if(aK3) Z3 = 1; else Z3 = 0;
    if(aK4) G1 = 1; else G1 = 0;
     90e:	10 92 f3 00 	sts	0x00F3, r1
    if(aK4) M  = 1; else M  = 0;
     912:	10 92 4e 01 	sts	0x014E, r1

    if(licz >= 12000) licz=0;
     916:	80 91 ca 00 	lds	r24, 0x00CA
     91a:	90 91 cb 00 	lds	r25, 0x00CB
     91e:	80 5e       	subi	r24, 0xE0	; 224
     920:	9e 42       	sbci	r25, 0x2E	; 46
     922:	24 f0       	brlt	.+8      	; 0x92c <oblicz+0x84>
     924:	10 92 cb 00 	sts	0x00CB, r1
     928:	10 92 ca 00 	sts	0x00CA, r1

    AO[0] += 100; AO[1] += 200;
     92c:	80 91 3d 01 	lds	r24, 0x013D
     930:	90 91 3e 01 	lds	r25, 0x013E
     934:	8c 59       	subi	r24, 0x9C	; 156
     936:	9f 4f       	sbci	r25, 0xFF	; 255
     938:	90 93 3e 01 	sts	0x013E, r25
     93c:	80 93 3d 01 	sts	0x013D, r24
     940:	80 91 3f 01 	lds	r24, 0x013F
     944:	90 91 40 01 	lds	r25, 0x0140
     948:	88 53       	subi	r24, 0x38	; 56
     94a:	9f 4f       	sbci	r25, 0xFF	; 255
     94c:	90 93 40 01 	sts	0x0140, r25
     950:	80 93 3f 01 	sts	0x013F, r24
    AO[2] += 300; AO[3] += 400;
     954:	80 91 41 01 	lds	r24, 0x0141
     958:	90 91 42 01 	lds	r25, 0x0142
     95c:	84 5d       	subi	r24, 0xD4	; 212
     95e:	9e 4f       	sbci	r25, 0xFE	; 254
     960:	90 93 42 01 	sts	0x0142, r25
     964:	80 93 41 01 	sts	0x0141, r24
     968:	80 91 43 01 	lds	r24, 0x0143
     96c:	90 91 44 01 	lds	r25, 0x0144
     970:	80 57       	subi	r24, 0x70	; 112
     972:	9e 4f       	sbci	r25, 0xFE	; 254
     974:	90 93 44 01 	sts	0x0144, r25
     978:	80 93 43 01 	sts	0x0143, r24
    AO[4] += 500; AO[5] += 600;
     97c:	80 91 45 01 	lds	r24, 0x0145
     980:	90 91 46 01 	lds	r25, 0x0146
     984:	8c 50       	subi	r24, 0x0C	; 12
     986:	9e 4f       	sbci	r25, 0xFE	; 254
     988:	90 93 46 01 	sts	0x0146, r25
     98c:	80 93 45 01 	sts	0x0145, r24
     990:	80 91 47 01 	lds	r24, 0x0147
     994:	90 91 48 01 	lds	r25, 0x0148
     998:	88 5a       	subi	r24, 0xA8	; 168
     99a:	9d 4f       	sbci	r25, 0xFD	; 253
     99c:	90 93 48 01 	sts	0x0148, r25
     9a0:	80 93 47 01 	sts	0x0147, r24
    AO[6] += 700; AO[7] = licz/100;
     9a4:	80 91 49 01 	lds	r24, 0x0149
     9a8:	90 91 4a 01 	lds	r25, 0x014A
     9ac:	84 54       	subi	r24, 0x44	; 68
     9ae:	9d 4f       	sbci	r25, 0xFD	; 253
     9b0:	90 93 4a 01 	sts	0x014A, r25
     9b4:	80 93 49 01 	sts	0x0149, r24
     9b8:	80 91 ca 00 	lds	r24, 0x00CA
     9bc:	90 91 cb 00 	lds	r25, 0x00CB
     9c0:	64 e6       	ldi	r22, 0x64	; 100
     9c2:	70 e0       	ldi	r23, 0x00	; 0
     9c4:	0e 94 02 0e 	call	0x1c04	; 0x1c04 <__divmodhi4>
     9c8:	70 93 4c 01 	sts	0x014C, r23
     9cc:	60 93 4b 01 	sts	0x014B, r22

	sprintf(buf,"K1=%dK2=%dK3=%dK4=%d    ",(int)aK1,(int)aK2,(int)aK3,(int)aK4);
     9d0:	8d b7       	in	r24, 0x3d	; 61
     9d2:	9e b7       	in	r25, 0x3e	; 62
     9d4:	0c 97       	sbiw	r24, 0x0c	; 12
     9d6:	0f b6       	in	r0, 0x3f	; 63
     9d8:	f8 94       	cli
     9da:	9e bf       	out	0x3e, r25	; 62
     9dc:	0f be       	out	0x3f, r0	; 63
     9de:	8d bf       	out	0x3d, r24	; 61
     9e0:	ed b7       	in	r30, 0x3d	; 61
     9e2:	fe b7       	in	r31, 0x3e	; 62
     9e4:	31 96       	adiw	r30, 0x01	; 1
     9e6:	01 e8       	ldi	r16, 0x81	; 129
     9e8:	11 e0       	ldi	r17, 0x01	; 1
     9ea:	ad b7       	in	r26, 0x3d	; 61
     9ec:	be b7       	in	r27, 0x3e	; 62
     9ee:	12 96       	adiw	r26, 0x02	; 2
     9f0:	1c 93       	st	X, r17
     9f2:	0e 93       	st	-X, r16
     9f4:	11 97       	sbiw	r26, 0x01	; 1
     9f6:	80 e6       	ldi	r24, 0x60	; 96
     9f8:	90 e0       	ldi	r25, 0x00	; 0
     9fa:	93 83       	std	Z+3, r25	; 0x03
     9fc:	82 83       	std	Z+2, r24	; 0x02
     9fe:	f4 82       	std	Z+4, r15	; 0x04
     a00:	15 82       	std	Z+5, r1	; 0x05
     a02:	46 83       	std	Z+6, r20	; 0x06
     a04:	17 82       	std	Z+7, r1	; 0x07
     a06:	30 87       	std	Z+8, r19	; 0x08
     a08:	11 86       	std	Z+9, r1	; 0x09
     a0a:	22 87       	std	Z+10, r18	; 0x0a
     a0c:	13 86       	std	Z+11, r1	; 0x0b
     a0e:	0e 94 14 10 	call	0x2028	; 0x2028 <sprintf>
	LCD_xy(1,1); LCD_puts(buf);
     a12:	8d b7       	in	r24, 0x3d	; 61
     a14:	9e b7       	in	r25, 0x3e	; 62
     a16:	0c 96       	adiw	r24, 0x0c	; 12
     a18:	0f b6       	in	r0, 0x3f	; 63
     a1a:	f8 94       	cli
     a1c:	9e bf       	out	0x3e, r25	; 62
     a1e:	0f be       	out	0x3f, r0	; 63
     a20:	8d bf       	out	0x3d, r24	; 61
     a22:	81 e0       	ldi	r24, 0x01	; 1
     a24:	61 e0       	ldi	r22, 0x01	; 1
     a26:	0e 94 0b 02 	call	0x416	; 0x416 <LCD_xy>
     a2a:	c8 01       	movw	r24, r16
     a2c:	0e 94 c5 01 	call	0x38a	; 0x38a <LCD_puts>
	sprintf(buf,"L1=%dL2=%dL3=%dL4=%d    ",(int)L1,(int)L2,(int)L3,(int)L4);
     a30:	ad b7       	in	r26, 0x3d	; 61
     a32:	be b7       	in	r27, 0x3e	; 62
     a34:	1c 97       	sbiw	r26, 0x0c	; 12
     a36:	0f b6       	in	r0, 0x3f	; 63
     a38:	f8 94       	cli
     a3a:	be bf       	out	0x3e, r27	; 62
     a3c:	0f be       	out	0x3f, r0	; 63
     a3e:	ad bf       	out	0x3d, r26	; 61
     a40:	ed b7       	in	r30, 0x3d	; 61
     a42:	fe b7       	in	r31, 0x3e	; 62
     a44:	31 96       	adiw	r30, 0x01	; 1
     a46:	12 96       	adiw	r26, 0x02	; 2
     a48:	1c 93       	st	X, r17
     a4a:	0e 93       	st	-X, r16
     a4c:	11 97       	sbiw	r26, 0x01	; 1
     a4e:	89 e7       	ldi	r24, 0x79	; 121
     a50:	90 e0       	ldi	r25, 0x00	; 0
     a52:	93 83       	std	Z+3, r25	; 0x03
     a54:	82 83       	std	Z+2, r24	; 0x02
     a56:	80 91 f2 00 	lds	r24, 0x00F2
     a5a:	84 83       	std	Z+4, r24	; 0x04
     a5c:	15 82       	std	Z+5, r1	; 0x05
     a5e:	80 91 cd 01 	lds	r24, 0x01CD
     a62:	86 83       	std	Z+6, r24	; 0x06
     a64:	17 82       	std	Z+7, r1	; 0x07
     a66:	80 91 50 01 	lds	r24, 0x0150
     a6a:	80 87       	std	Z+8, r24	; 0x08
     a6c:	11 86       	std	Z+9, r1	; 0x09
     a6e:	80 91 ca 01 	lds	r24, 0x01CA
     a72:	82 87       	std	Z+10, r24	; 0x0a
     a74:	13 86       	std	Z+11, r1	; 0x0b
     a76:	0e 94 14 10 	call	0x2028	; 0x2028 <sprintf>
	LCD_xy(1,2); LCD_puts(buf);
     a7a:	8d b7       	in	r24, 0x3d	; 61
     a7c:	9e b7       	in	r25, 0x3e	; 62
     a7e:	0c 96       	adiw	r24, 0x0c	; 12
     a80:	0f b6       	in	r0, 0x3f	; 63
     a82:	f8 94       	cli
     a84:	9e bf       	out	0x3e, r25	; 62
     a86:	0f be       	out	0x3f, r0	; 63
     a88:	8d bf       	out	0x3d, r24	; 61
     a8a:	81 e0       	ldi	r24, 0x01	; 1
     a8c:	62 e0       	ldi	r22, 0x02	; 2
     a8e:	0e 94 0b 02 	call	0x416	; 0x416 <LCD_xy>
     a92:	c8 01       	movw	r24, r16
     a94:	0e 94 c5 01 	call	0x38a	; 0x38a <LCD_puts>
}
     a98:	1f 91       	pop	r17
     a9a:	0f 91       	pop	r16
     a9c:	ff 90       	pop	r15
     a9e:	08 95       	ret

00000aa0 <main>:

volatile unsigned char cykl;		// Odmierzanie czasu cyklu (pêtli g³ównej)
char buf[64];						// Bufor komunikatów LCD

int main(void)
{
     aa0:	1f 93       	push	r17
	DDRA  = 0xff;					// Kierunek portu A (diody LED): port wyjœciowy
     aa2:	8f ef       	ldi	r24, 0xFF	; 255
     aa4:	8a bb       	out	0x1a, r24	; 26
	DDRB  = 0x00;					// Kierunek portu B (klawisze) : port wejœciowy
     aa6:	17 ba       	out	0x17, r1	; 23
	PORTA = 0xff;					// Port A (diody LED): ustaw "1" (wygaszone diody)
     aa8:	8b bb       	out	0x1b, r24	; 27
	PORTB = 0xff;					// Port B (klawisze) : aktywne rezystory podci¹gaj¹ce
     aaa:	88 bb       	out	0x18, r24	; 24
	
	TCCR0 = _BV(WGM01)|_BV(CS02);	// Timer/Counter 0: tryb CTC, dzielnik=256
     aac:	8c e0       	ldi	r24, 0x0C	; 12
     aae:	83 bf       	out	0x33, r24	; 51
	OCR0  = 124;					// Limit zliczania T0: 0.125us x 256 x (124+1) = 4ms
     ab0:	8c e7       	ldi	r24, 0x7C	; 124
     ab2:	8c bf       	out	0x3c, r24	; 60
	TIMSK = _BV(OCIE0);				// Odblokowanie przewañ T0 (Output Compare Match)
     ab4:	82 e0       	ldi	r24, 0x02	; 2
     ab6:	89 bf       	out	0x39, r24	; 57
	sei();							// Globalne w³¹czenie obs³ugi przerwañ
     ab8:	78 94       	sei

	LCD_init();						// Inicjowanie wyœwietlacza LCD
     aba:	0e 94 d2 01 	call	0x3a4	; 0x3a4 <LCD_init>
	SYM_init(19200,0,0);			// Inicjowanie komunikacji z symulatorem
     abe:	60 e0       	ldi	r22, 0x00	; 0
     ac0:	7b e4       	ldi	r23, 0x4B	; 75
     ac2:	80 e0       	ldi	r24, 0x00	; 0
     ac4:	90 e0       	ldi	r25, 0x00	; 0
     ac6:	40 e0       	ldi	r20, 0x00	; 0
     ac8:	20 e0       	ldi	r18, 0x00	; 0
     aca:	0e 94 89 02 	call	0x512	; 0x512 <SYM_init>
// --- Zmienne uÅ¼ytkownika ---
int licz=0;                	// Licznik przerwaÅ„

void prolog(void)			// Inicjowanie programu (jednorazowo przy starcie)
{
    L1=L2=L3=L4=0;         	// Zgaszenie LED-Ã³w
     ace:	10 92 ca 01 	sts	0x01CA, r1
     ad2:	10 92 50 01 	sts	0x0150, r1
     ad6:	10 92 cd 01 	sts	0x01CD, r1
     ada:	10 92 f2 00 	sts	0x00F2, r1
	prolog();						// Inicjowanie programu u¿ytkownika
	
	while(1)
	{
		cykl = TCYKL;				// Deklarowany czas cyklu (TCYKL x 4ms)
     ade:	19 e1       	ldi	r17, 0x19	; 25
     ae0:	10 93 f1 00 	sts	0x00F1, r17
		//KEY_read();					// Odczyt stanu klawiszy aK1..aK4
		//-------------- Pocz¹tek kodu u¿ytkownika --------------------------------------
		oblicz();					// Obliczenia u¿ytkownika
     ae4:	0e 94 54 04 	call	0x8a8	; 0x8a8 <oblicz>
		//KEY_mem();				// Zapamiêtanie stanu klawiszy w pK1..pK4
		//SYM_send();					// Przeœlij stan wyjœæ do obiektu
		//SYM_read();					// Odczytaj stan wejœæ z obiektu
		
		//if(!cykl) L4=!L4;			// Sygnalizacja przekroczenia czasu cyklu
		while(cykl);				// Oczekiwanie na koniec cyklu oblicz.
     ae8:	80 91 f1 00 	lds	r24, 0x00F1
     aec:	88 23       	and	r24, r24
     aee:	e1 f7       	brne	.-8      	; 0xae8 <main+0x48>
     af0:	f7 cf       	rjmp	.-18     	; 0xae0 <main+0x40>

00000af2 <vfprintf>:
     af2:	a1 e1       	ldi	r26, 0x11	; 17
     af4:	b0 e0       	ldi	r27, 0x00	; 0
     af6:	ef e7       	ldi	r30, 0x7F	; 127
     af8:	f5 e0       	ldi	r31, 0x05	; 5
     afa:	0c 94 30 0e 	jmp	0x1c60	; 0x1c60 <__prologue_saves__>
     afe:	3c 01       	movw	r6, r24
     b00:	7f 87       	std	Y+15, r23	; 0x0f
     b02:	6e 87       	std	Y+14, r22	; 0x0e
     b04:	6a 01       	movw	r12, r20
     b06:	fc 01       	movw	r30, r24
     b08:	17 82       	std	Z+7, r1	; 0x07
     b0a:	16 82       	std	Z+6, r1	; 0x06
     b0c:	83 81       	ldd	r24, Z+3	; 0x03
     b0e:	81 fd       	sbrc	r24, 1
     b10:	03 c0       	rjmp	.+6      	; 0xb18 <vfprintf+0x26>
     b12:	6f ef       	ldi	r22, 0xFF	; 255
     b14:	7f ef       	ldi	r23, 0xFF	; 255
     b16:	6f c3       	rjmp	.+1758   	; 0x11f6 <vfprintf+0x704>
     b18:	9e 01       	movw	r18, r28
     b1a:	2f 5f       	subi	r18, 0xFF	; 255
     b1c:	3f 4f       	sbci	r19, 0xFF	; 255
     b1e:	39 8b       	std	Y+17, r19	; 0x11
     b20:	28 8b       	std	Y+16, r18	; 0x10
     b22:	f3 01       	movw	r30, r6
     b24:	23 81       	ldd	r18, Z+3	; 0x03
     b26:	ee 85       	ldd	r30, Y+14	; 0x0e
     b28:	ff 85       	ldd	r31, Y+15	; 0x0f
     b2a:	23 fd       	sbrc	r18, 3
     b2c:	85 91       	lpm	r24, Z+
     b2e:	23 ff       	sbrs	r18, 3
     b30:	81 91       	ld	r24, Z+
     b32:	ff 87       	std	Y+15, r31	; 0x0f
     b34:	ee 87       	std	Y+14, r30	; 0x0e
     b36:	88 23       	and	r24, r24
     b38:	09 f4       	brne	.+2      	; 0xb3c <vfprintf+0x4a>
     b3a:	5a c3       	rjmp	.+1716   	; 0x11f0 <vfprintf+0x6fe>
     b3c:	85 32       	cpi	r24, 0x25	; 37
     b3e:	51 f4       	brne	.+20     	; 0xb54 <vfprintf+0x62>
     b40:	ee 85       	ldd	r30, Y+14	; 0x0e
     b42:	ff 85       	ldd	r31, Y+15	; 0x0f
     b44:	23 fd       	sbrc	r18, 3
     b46:	85 91       	lpm	r24, Z+
     b48:	23 ff       	sbrs	r18, 3
     b4a:	81 91       	ld	r24, Z+
     b4c:	ff 87       	std	Y+15, r31	; 0x0f
     b4e:	ee 87       	std	Y+14, r30	; 0x0e
     b50:	85 32       	cpi	r24, 0x25	; 37
     b52:	29 f4       	brne	.+10     	; 0xb5e <vfprintf+0x6c>
     b54:	90 e0       	ldi	r25, 0x00	; 0
     b56:	b3 01       	movw	r22, r6
     b58:	0e 94 e8 0f 	call	0x1fd0	; 0x1fd0 <fputc>
     b5c:	e2 cf       	rjmp	.-60     	; 0xb22 <vfprintf+0x30>
     b5e:	98 2f       	mov	r25, r24
     b60:	10 e0       	ldi	r17, 0x00	; 0
     b62:	88 24       	eor	r8, r8
     b64:	99 24       	eor	r9, r9
     b66:	10 32       	cpi	r17, 0x20	; 32
     b68:	b0 f4       	brcc	.+44     	; 0xb96 <vfprintf+0xa4>
     b6a:	9b 32       	cpi	r25, 0x2B	; 43
     b6c:	69 f0       	breq	.+26     	; 0xb88 <vfprintf+0x96>
     b6e:	9c 32       	cpi	r25, 0x2C	; 44
     b70:	28 f4       	brcc	.+10     	; 0xb7c <vfprintf+0x8a>
     b72:	90 32       	cpi	r25, 0x20	; 32
     b74:	51 f0       	breq	.+20     	; 0xb8a <vfprintf+0x98>
     b76:	93 32       	cpi	r25, 0x23	; 35
     b78:	71 f4       	brne	.+28     	; 0xb96 <vfprintf+0xa4>
     b7a:	0b c0       	rjmp	.+22     	; 0xb92 <vfprintf+0xa0>
     b7c:	9d 32       	cpi	r25, 0x2D	; 45
     b7e:	39 f0       	breq	.+14     	; 0xb8e <vfprintf+0x9c>
     b80:	90 33       	cpi	r25, 0x30	; 48
     b82:	49 f4       	brne	.+18     	; 0xb96 <vfprintf+0xa4>
     b84:	11 60       	ori	r17, 0x01	; 1
     b86:	28 c0       	rjmp	.+80     	; 0xbd8 <vfprintf+0xe6>
     b88:	12 60       	ori	r17, 0x02	; 2
     b8a:	14 60       	ori	r17, 0x04	; 4
     b8c:	25 c0       	rjmp	.+74     	; 0xbd8 <vfprintf+0xe6>
     b8e:	18 60       	ori	r17, 0x08	; 8
     b90:	23 c0       	rjmp	.+70     	; 0xbd8 <vfprintf+0xe6>
     b92:	10 61       	ori	r17, 0x10	; 16
     b94:	21 c0       	rjmp	.+66     	; 0xbd8 <vfprintf+0xe6>
     b96:	17 fd       	sbrc	r17, 7
     b98:	2a c0       	rjmp	.+84     	; 0xbee <vfprintf+0xfc>
     b9a:	89 2f       	mov	r24, r25
     b9c:	80 53       	subi	r24, 0x30	; 48
     b9e:	8a 30       	cpi	r24, 0x0A	; 10
     ba0:	78 f4       	brcc	.+30     	; 0xbc0 <vfprintf+0xce>
     ba2:	16 ff       	sbrs	r17, 6
     ba4:	06 c0       	rjmp	.+12     	; 0xbb2 <vfprintf+0xc0>
     ba6:	fa e0       	ldi	r31, 0x0A	; 10
     ba8:	9f 9e       	mul	r9, r31
     baa:	90 2c       	mov	r9, r0
     bac:	11 24       	eor	r1, r1
     bae:	98 0e       	add	r9, r24
     bb0:	13 c0       	rjmp	.+38     	; 0xbd8 <vfprintf+0xe6>
     bb2:	3a e0       	ldi	r19, 0x0A	; 10
     bb4:	83 9e       	mul	r8, r19
     bb6:	80 2c       	mov	r8, r0
     bb8:	11 24       	eor	r1, r1
     bba:	88 0e       	add	r8, r24
     bbc:	10 62       	ori	r17, 0x20	; 32
     bbe:	0c c0       	rjmp	.+24     	; 0xbd8 <vfprintf+0xe6>
     bc0:	9e 32       	cpi	r25, 0x2E	; 46
     bc2:	21 f4       	brne	.+8      	; 0xbcc <vfprintf+0xda>
     bc4:	16 fd       	sbrc	r17, 6
     bc6:	14 c3       	rjmp	.+1576   	; 0x11f0 <vfprintf+0x6fe>
     bc8:	10 64       	ori	r17, 0x40	; 64
     bca:	06 c0       	rjmp	.+12     	; 0xbd8 <vfprintf+0xe6>
     bcc:	9c 36       	cpi	r25, 0x6C	; 108
     bce:	11 f4       	brne	.+4      	; 0xbd4 <vfprintf+0xe2>
     bd0:	10 68       	ori	r17, 0x80	; 128
     bd2:	02 c0       	rjmp	.+4      	; 0xbd8 <vfprintf+0xe6>
     bd4:	98 36       	cpi	r25, 0x68	; 104
     bd6:	59 f4       	brne	.+22     	; 0xbee <vfprintf+0xfc>
     bd8:	ee 85       	ldd	r30, Y+14	; 0x0e
     bda:	ff 85       	ldd	r31, Y+15	; 0x0f
     bdc:	23 fd       	sbrc	r18, 3
     bde:	95 91       	lpm	r25, Z+
     be0:	23 ff       	sbrs	r18, 3
     be2:	91 91       	ld	r25, Z+
     be4:	ff 87       	std	Y+15, r31	; 0x0f
     be6:	ee 87       	std	Y+14, r30	; 0x0e
     be8:	99 23       	and	r25, r25
     bea:	09 f0       	breq	.+2      	; 0xbee <vfprintf+0xfc>
     bec:	bc cf       	rjmp	.-136    	; 0xb66 <vfprintf+0x74>
     bee:	89 2f       	mov	r24, r25
     bf0:	85 54       	subi	r24, 0x45	; 69
     bf2:	83 30       	cpi	r24, 0x03	; 3
     bf4:	20 f4       	brcc	.+8      	; 0xbfe <vfprintf+0x10c>
     bf6:	81 2f       	mov	r24, r17
     bf8:	80 61       	ori	r24, 0x10	; 16
     bfa:	90 5e       	subi	r25, 0xE0	; 224
     bfc:	07 c0       	rjmp	.+14     	; 0xc0c <vfprintf+0x11a>
     bfe:	89 2f       	mov	r24, r25
     c00:	85 56       	subi	r24, 0x65	; 101
     c02:	83 30       	cpi	r24, 0x03	; 3
     c04:	08 f0       	brcs	.+2      	; 0xc08 <vfprintf+0x116>
     c06:	9f c1       	rjmp	.+830    	; 0xf46 <vfprintf+0x454>
     c08:	81 2f       	mov	r24, r17
     c0a:	8f 7e       	andi	r24, 0xEF	; 239
     c0c:	86 fd       	sbrc	r24, 6
     c0e:	02 c0       	rjmp	.+4      	; 0xc14 <vfprintf+0x122>
     c10:	76 e0       	ldi	r23, 0x06	; 6
     c12:	97 2e       	mov	r9, r23
     c14:	6f e3       	ldi	r22, 0x3F	; 63
     c16:	f6 2e       	mov	r15, r22
     c18:	f8 22       	and	r15, r24
     c1a:	95 36       	cpi	r25, 0x65	; 101
     c1c:	19 f4       	brne	.+6      	; 0xc24 <vfprintf+0x132>
     c1e:	f0 e4       	ldi	r31, 0x40	; 64
     c20:	ff 2a       	or	r15, r31
     c22:	07 c0       	rjmp	.+14     	; 0xc32 <vfprintf+0x140>
     c24:	96 36       	cpi	r25, 0x66	; 102
     c26:	19 f4       	brne	.+6      	; 0xc2e <vfprintf+0x13c>
     c28:	20 e8       	ldi	r18, 0x80	; 128
     c2a:	f2 2a       	or	r15, r18
     c2c:	02 c0       	rjmp	.+4      	; 0xc32 <vfprintf+0x140>
     c2e:	91 10       	cpse	r9, r1
     c30:	9a 94       	dec	r9
     c32:	f7 fe       	sbrs	r15, 7
     c34:	0a c0       	rjmp	.+20     	; 0xc4a <vfprintf+0x158>
     c36:	3b e3       	ldi	r19, 0x3B	; 59
     c38:	39 15       	cp	r19, r9
     c3a:	18 f4       	brcc	.+6      	; 0xc42 <vfprintf+0x150>
     c3c:	5c e3       	ldi	r21, 0x3C	; 60
     c3e:	b5 2e       	mov	r11, r21
     c40:	02 c0       	rjmp	.+4      	; 0xc46 <vfprintf+0x154>
     c42:	b9 2c       	mov	r11, r9
     c44:	b3 94       	inc	r11
     c46:	27 e0       	ldi	r18, 0x07	; 7
     c48:	09 c0       	rjmp	.+18     	; 0xc5c <vfprintf+0x16a>
     c4a:	47 e0       	ldi	r20, 0x07	; 7
     c4c:	49 15       	cp	r20, r9
     c4e:	20 f4       	brcc	.+8      	; 0xc58 <vfprintf+0x166>
     c50:	bb 24       	eor	r11, r11
     c52:	47 e0       	ldi	r20, 0x07	; 7
     c54:	94 2e       	mov	r9, r20
     c56:	f7 cf       	rjmp	.-18     	; 0xc46 <vfprintf+0x154>
     c58:	29 2d       	mov	r18, r9
     c5a:	bb 24       	eor	r11, r11
     c5c:	c6 01       	movw	r24, r12
     c5e:	04 96       	adiw	r24, 0x04	; 4
     c60:	9d 87       	std	Y+13, r25	; 0x0d
     c62:	8c 87       	std	Y+12, r24	; 0x0c
     c64:	f6 01       	movw	r30, r12
     c66:	60 81       	ld	r22, Z
     c68:	71 81       	ldd	r23, Z+1	; 0x01
     c6a:	82 81       	ldd	r24, Z+2	; 0x02
     c6c:	93 81       	ldd	r25, Z+3	; 0x03
     c6e:	ae 01       	movw	r20, r28
     c70:	4f 5f       	subi	r20, 0xFF	; 255
     c72:	5f 4f       	sbci	r21, 0xFF	; 255
     c74:	0b 2d       	mov	r16, r11
     c76:	0e 94 9d 0e 	call	0x1d3a	; 0x1d3a <__ftoa_engine>
     c7a:	6c 01       	movw	r12, r24
     c7c:	09 81       	ldd	r16, Y+1	; 0x01
     c7e:	20 2e       	mov	r2, r16
     c80:	33 24       	eor	r3, r3
     c82:	00 ff       	sbrs	r16, 0
     c84:	04 c0       	rjmp	.+8      	; 0xc8e <vfprintf+0x19c>
     c86:	03 fd       	sbrc	r16, 3
     c88:	02 c0       	rjmp	.+4      	; 0xc8e <vfprintf+0x19c>
     c8a:	1d e2       	ldi	r17, 0x2D	; 45
     c8c:	09 c0       	rjmp	.+18     	; 0xca0 <vfprintf+0x1ae>
     c8e:	f1 fe       	sbrs	r15, 1
     c90:	02 c0       	rjmp	.+4      	; 0xc96 <vfprintf+0x1a4>
     c92:	1b e2       	ldi	r17, 0x2B	; 43
     c94:	05 c0       	rjmp	.+10     	; 0xca0 <vfprintf+0x1ae>
     c96:	f2 fc       	sbrc	r15, 2
     c98:	02 c0       	rjmp	.+4      	; 0xc9e <vfprintf+0x1ac>
     c9a:	10 e0       	ldi	r17, 0x00	; 0
     c9c:	01 c0       	rjmp	.+2      	; 0xca0 <vfprintf+0x1ae>
     c9e:	10 e2       	ldi	r17, 0x20	; 32
     ca0:	c1 01       	movw	r24, r2
     ca2:	8c 70       	andi	r24, 0x0C	; 12
     ca4:	90 70       	andi	r25, 0x00	; 0
     ca6:	89 2b       	or	r24, r25
     ca8:	b9 f1       	breq	.+110    	; 0xd18 <vfprintf+0x226>
     caa:	11 23       	and	r17, r17
     cac:	11 f4       	brne	.+4      	; 0xcb2 <vfprintf+0x1c0>
     cae:	83 e0       	ldi	r24, 0x03	; 3
     cb0:	01 c0       	rjmp	.+2      	; 0xcb4 <vfprintf+0x1c2>
     cb2:	84 e0       	ldi	r24, 0x04	; 4
     cb4:	88 15       	cp	r24, r8
     cb6:	10 f0       	brcs	.+4      	; 0xcbc <vfprintf+0x1ca>
     cb8:	88 24       	eor	r8, r8
     cba:	0a c0       	rjmp	.+20     	; 0xcd0 <vfprintf+0x1de>
     cbc:	88 1a       	sub	r8, r24
     cbe:	f3 fc       	sbrc	r15, 3
     cc0:	07 c0       	rjmp	.+14     	; 0xcd0 <vfprintf+0x1de>
     cc2:	80 e2       	ldi	r24, 0x20	; 32
     cc4:	90 e0       	ldi	r25, 0x00	; 0
     cc6:	b3 01       	movw	r22, r6
     cc8:	0e 94 e8 0f 	call	0x1fd0	; 0x1fd0 <fputc>
     ccc:	8a 94       	dec	r8
     cce:	c9 f7       	brne	.-14     	; 0xcc2 <vfprintf+0x1d0>
     cd0:	11 23       	and	r17, r17
     cd2:	29 f0       	breq	.+10     	; 0xcde <vfprintf+0x1ec>
     cd4:	81 2f       	mov	r24, r17
     cd6:	90 e0       	ldi	r25, 0x00	; 0
     cd8:	b3 01       	movw	r22, r6
     cda:	0e 94 e8 0f 	call	0x1fd0	; 0x1fd0 <fputc>
     cde:	23 fe       	sbrs	r2, 3
     ce0:	03 c0       	rjmp	.+6      	; 0xce8 <vfprintf+0x1f6>
     ce2:	04 e5       	ldi	r16, 0x54	; 84
     ce4:	10 e0       	ldi	r17, 0x00	; 0
     ce6:	0e c0       	rjmp	.+28     	; 0xd04 <vfprintf+0x212>
     ce8:	08 e5       	ldi	r16, 0x58	; 88
     cea:	10 e0       	ldi	r17, 0x00	; 0
     cec:	0b c0       	rjmp	.+22     	; 0xd04 <vfprintf+0x212>
     cee:	e1 14       	cp	r14, r1
     cf0:	f1 04       	cpc	r15, r1
     cf2:	09 f0       	breq	.+2      	; 0xcf6 <vfprintf+0x204>
     cf4:	80 52       	subi	r24, 0x20	; 32
     cf6:	90 e0       	ldi	r25, 0x00	; 0
     cf8:	b3 01       	movw	r22, r6
     cfa:	0e 94 e8 0f 	call	0x1fd0	; 0x1fd0 <fputc>
     cfe:	0f 5f       	subi	r16, 0xFF	; 255
     d00:	1f 4f       	sbci	r17, 0xFF	; 255
     d02:	05 c0       	rjmp	.+10     	; 0xd0e <vfprintf+0x21c>
     d04:	ef 2c       	mov	r14, r15
     d06:	ff 24       	eor	r15, r15
     d08:	f0 e1       	ldi	r31, 0x10	; 16
     d0a:	ef 22       	and	r14, r31
     d0c:	ff 24       	eor	r15, r15
     d0e:	f8 01       	movw	r30, r16
     d10:	84 91       	lpm	r24, Z+
     d12:	88 23       	and	r24, r24
     d14:	61 f7       	brne	.-40     	; 0xcee <vfprintf+0x1fc>
     d16:	14 c1       	rjmp	.+552    	; 0xf40 <vfprintf+0x44e>
     d18:	f7 fe       	sbrs	r15, 7
     d1a:	12 c0       	rjmp	.+36     	; 0xd40 <vfprintf+0x24e>
     d1c:	bc 0c       	add	r11, r12
     d1e:	24 fe       	sbrs	r2, 4
     d20:	04 c0       	rjmp	.+8      	; 0xd2a <vfprintf+0x238>
     d22:	8a 81       	ldd	r24, Y+2	; 0x02
     d24:	81 33       	cpi	r24, 0x31	; 49
     d26:	09 f4       	brne	.+2      	; 0xd2a <vfprintf+0x238>
     d28:	ba 94       	dec	r11
     d2a:	1b 14       	cp	r1, r11
     d2c:	1c f0       	brlt	.+6      	; 0xd34 <vfprintf+0x242>
     d2e:	bb 24       	eor	r11, r11
     d30:	b3 94       	inc	r11
     d32:	2d c0       	rjmp	.+90     	; 0xd8e <vfprintf+0x29c>
     d34:	f8 e0       	ldi	r31, 0x08	; 8
     d36:	fb 15       	cp	r31, r11
     d38:	50 f5       	brcc	.+84     	; 0xd8e <vfprintf+0x29c>
     d3a:	38 e0       	ldi	r19, 0x08	; 8
     d3c:	b3 2e       	mov	r11, r19
     d3e:	27 c0       	rjmp	.+78     	; 0xd8e <vfprintf+0x29c>
     d40:	f6 fc       	sbrc	r15, 6
     d42:	25 c0       	rjmp	.+74     	; 0xd8e <vfprintf+0x29c>
     d44:	89 2d       	mov	r24, r9
     d46:	90 e0       	ldi	r25, 0x00	; 0
     d48:	8c 15       	cp	r24, r12
     d4a:	9d 05       	cpc	r25, r13
     d4c:	4c f0       	brlt	.+18     	; 0xd60 <vfprintf+0x26e>
     d4e:	2c ef       	ldi	r18, 0xFC	; 252
     d50:	c2 16       	cp	r12, r18
     d52:	2f ef       	ldi	r18, 0xFF	; 255
     d54:	d2 06       	cpc	r13, r18
     d56:	24 f0       	brlt	.+8      	; 0xd60 <vfprintf+0x26e>
     d58:	30 e8       	ldi	r19, 0x80	; 128
     d5a:	f3 2a       	or	r15, r19
     d5c:	01 c0       	rjmp	.+2      	; 0xd60 <vfprintf+0x26e>
     d5e:	9a 94       	dec	r9
     d60:	99 20       	and	r9, r9
     d62:	49 f0       	breq	.+18     	; 0xd76 <vfprintf+0x284>
     d64:	e2 e0       	ldi	r30, 0x02	; 2
     d66:	f0 e0       	ldi	r31, 0x00	; 0
     d68:	ec 0f       	add	r30, r28
     d6a:	fd 1f       	adc	r31, r29
     d6c:	e9 0d       	add	r30, r9
     d6e:	f1 1d       	adc	r31, r1
     d70:	80 81       	ld	r24, Z
     d72:	80 33       	cpi	r24, 0x30	; 48
     d74:	a1 f3       	breq	.-24     	; 0xd5e <vfprintf+0x26c>
     d76:	f7 fe       	sbrs	r15, 7
     d78:	0a c0       	rjmp	.+20     	; 0xd8e <vfprintf+0x29c>
     d7a:	b9 2c       	mov	r11, r9
     d7c:	b3 94       	inc	r11
     d7e:	89 2d       	mov	r24, r9
     d80:	90 e0       	ldi	r25, 0x00	; 0
     d82:	c8 16       	cp	r12, r24
     d84:	d9 06       	cpc	r13, r25
     d86:	14 f0       	brlt	.+4      	; 0xd8c <vfprintf+0x29a>
     d88:	99 24       	eor	r9, r9
     d8a:	01 c0       	rjmp	.+2      	; 0xd8e <vfprintf+0x29c>
     d8c:	9c 18       	sub	r9, r12
     d8e:	f7 fc       	sbrc	r15, 7
     d90:	03 c0       	rjmp	.+6      	; 0xd98 <vfprintf+0x2a6>
     d92:	25 e0       	ldi	r18, 0x05	; 5
     d94:	30 e0       	ldi	r19, 0x00	; 0
     d96:	09 c0       	rjmp	.+18     	; 0xdaa <vfprintf+0x2b8>
     d98:	1c 14       	cp	r1, r12
     d9a:	1d 04       	cpc	r1, r13
     d9c:	1c f0       	brlt	.+6      	; 0xda4 <vfprintf+0x2b2>
     d9e:	21 e0       	ldi	r18, 0x01	; 1
     da0:	30 e0       	ldi	r19, 0x00	; 0
     da2:	03 c0       	rjmp	.+6      	; 0xdaa <vfprintf+0x2b8>
     da4:	96 01       	movw	r18, r12
     da6:	2f 5f       	subi	r18, 0xFF	; 255
     da8:	3f 4f       	sbci	r19, 0xFF	; 255
     daa:	11 23       	and	r17, r17
     dac:	11 f0       	breq	.+4      	; 0xdb2 <vfprintf+0x2c0>
     dae:	2f 5f       	subi	r18, 0xFF	; 255
     db0:	3f 4f       	sbci	r19, 0xFF	; 255
     db2:	99 20       	and	r9, r9
     db4:	29 f0       	breq	.+10     	; 0xdc0 <vfprintf+0x2ce>
     db6:	89 2d       	mov	r24, r9
     db8:	90 e0       	ldi	r25, 0x00	; 0
     dba:	01 96       	adiw	r24, 0x01	; 1
     dbc:	28 0f       	add	r18, r24
     dbe:	39 1f       	adc	r19, r25
     dc0:	88 2d       	mov	r24, r8
     dc2:	90 e0       	ldi	r25, 0x00	; 0
     dc4:	28 17       	cp	r18, r24
     dc6:	39 07       	cpc	r19, r25
     dc8:	14 f0       	brlt	.+4      	; 0xdce <vfprintf+0x2dc>
     dca:	88 24       	eor	r8, r8
     dcc:	01 c0       	rjmp	.+2      	; 0xdd0 <vfprintf+0x2de>
     dce:	82 1a       	sub	r8, r18
     dd0:	4f 2c       	mov	r4, r15
     dd2:	55 24       	eor	r5, r5
     dd4:	c2 01       	movw	r24, r4
     dd6:	89 70       	andi	r24, 0x09	; 9
     dd8:	90 70       	andi	r25, 0x00	; 0
     dda:	89 2b       	or	r24, r25
     ddc:	39 f0       	breq	.+14     	; 0xdec <vfprintf+0x2fa>
     dde:	08 c0       	rjmp	.+16     	; 0xdf0 <vfprintf+0x2fe>
     de0:	80 e2       	ldi	r24, 0x20	; 32
     de2:	90 e0       	ldi	r25, 0x00	; 0
     de4:	b3 01       	movw	r22, r6
     de6:	0e 94 e8 0f 	call	0x1fd0	; 0x1fd0 <fputc>
     dea:	8a 94       	dec	r8
     dec:	88 20       	and	r8, r8
     dee:	c1 f7       	brne	.-16     	; 0xde0 <vfprintf+0x2ee>
     df0:	11 23       	and	r17, r17
     df2:	29 f0       	breq	.+10     	; 0xdfe <vfprintf+0x30c>
     df4:	81 2f       	mov	r24, r17
     df6:	90 e0       	ldi	r25, 0x00	; 0
     df8:	b3 01       	movw	r22, r6
     dfa:	0e 94 e8 0f 	call	0x1fd0	; 0x1fd0 <fputc>
     dfe:	43 fe       	sbrs	r4, 3
     e00:	07 c0       	rjmp	.+14     	; 0xe10 <vfprintf+0x31e>
     e02:	08 c0       	rjmp	.+16     	; 0xe14 <vfprintf+0x322>
     e04:	80 e3       	ldi	r24, 0x30	; 48
     e06:	90 e0       	ldi	r25, 0x00	; 0
     e08:	b3 01       	movw	r22, r6
     e0a:	0e 94 e8 0f 	call	0x1fd0	; 0x1fd0 <fputc>
     e0e:	8a 94       	dec	r8
     e10:	88 20       	and	r8, r8
     e12:	c1 f7       	brne	.-16     	; 0xe04 <vfprintf+0x312>
     e14:	f7 fe       	sbrs	r15, 7
     e16:	46 c0       	rjmp	.+140    	; 0xea4 <vfprintf+0x3b2>
     e18:	86 01       	movw	r16, r12
     e1a:	d7 fe       	sbrs	r13, 7
     e1c:	02 c0       	rjmp	.+4      	; 0xe22 <vfprintf+0x330>
     e1e:	00 e0       	ldi	r16, 0x00	; 0
     e20:	10 e0       	ldi	r17, 0x00	; 0
     e22:	76 01       	movw	r14, r12
     e24:	08 94       	sec
     e26:	e1 1c       	adc	r14, r1
     e28:	f1 1c       	adc	r15, r1
     e2a:	e0 1a       	sub	r14, r16
     e2c:	f1 0a       	sbc	r15, r17
     e2e:	41 e0       	ldi	r20, 0x01	; 1
     e30:	50 e0       	ldi	r21, 0x00	; 0
     e32:	4c 0f       	add	r20, r28
     e34:	5d 1f       	adc	r21, r29
     e36:	e4 0e       	add	r14, r20
     e38:	f5 1e       	adc	r15, r21
     e3a:	26 01       	movw	r4, r12
     e3c:	4b 18       	sub	r4, r11
     e3e:	51 08       	sbc	r5, r1
     e40:	89 2d       	mov	r24, r9
     e42:	90 e0       	ldi	r25, 0x00	; 0
     e44:	aa 24       	eor	r10, r10
     e46:	bb 24       	eor	r11, r11
     e48:	a8 1a       	sub	r10, r24
     e4a:	b9 0a       	sbc	r11, r25
     e4c:	5f ef       	ldi	r21, 0xFF	; 255
     e4e:	0f 3f       	cpi	r16, 0xFF	; 255
     e50:	15 07       	cpc	r17, r21
     e52:	29 f4       	brne	.+10     	; 0xe5e <vfprintf+0x36c>
     e54:	8e e2       	ldi	r24, 0x2E	; 46
     e56:	90 e0       	ldi	r25, 0x00	; 0
     e58:	b3 01       	movw	r22, r6
     e5a:	0e 94 e8 0f 	call	0x1fd0	; 0x1fd0 <fputc>
     e5e:	c0 16       	cp	r12, r16
     e60:	d1 06       	cpc	r13, r17
     e62:	34 f0       	brlt	.+12     	; 0xe70 <vfprintf+0x37e>
     e64:	40 16       	cp	r4, r16
     e66:	51 06       	cpc	r5, r17
     e68:	1c f4       	brge	.+6      	; 0xe70 <vfprintf+0x37e>
     e6a:	f7 01       	movw	r30, r14
     e6c:	80 81       	ld	r24, Z
     e6e:	01 c0       	rjmp	.+2      	; 0xe72 <vfprintf+0x380>
     e70:	80 e3       	ldi	r24, 0x30	; 48
     e72:	01 50       	subi	r16, 0x01	; 1
     e74:	10 40       	sbci	r17, 0x00	; 0
     e76:	08 94       	sec
     e78:	e1 1c       	adc	r14, r1
     e7a:	f1 1c       	adc	r15, r1
     e7c:	0a 15       	cp	r16, r10
     e7e:	1b 05       	cpc	r17, r11
     e80:	2c f0       	brlt	.+10     	; 0xe8c <vfprintf+0x39a>
     e82:	90 e0       	ldi	r25, 0x00	; 0
     e84:	b3 01       	movw	r22, r6
     e86:	0e 94 e8 0f 	call	0x1fd0	; 0x1fd0 <fputc>
     e8a:	e0 cf       	rjmp	.-64     	; 0xe4c <vfprintf+0x35a>
     e8c:	0c 15       	cp	r16, r12
     e8e:	1d 05       	cpc	r17, r13
     e90:	39 f4       	brne	.+14     	; 0xea0 <vfprintf+0x3ae>
     e92:	9a 81       	ldd	r25, Y+2	; 0x02
     e94:	96 33       	cpi	r25, 0x36	; 54
     e96:	18 f4       	brcc	.+6      	; 0xe9e <vfprintf+0x3ac>
     e98:	95 33       	cpi	r25, 0x35	; 53
     e9a:	11 f4       	brne	.+4      	; 0xea0 <vfprintf+0x3ae>
     e9c:	24 fe       	sbrs	r2, 4
     e9e:	81 e3       	ldi	r24, 0x31	; 49
     ea0:	90 e0       	ldi	r25, 0x00	; 0
     ea2:	4b c0       	rjmp	.+150    	; 0xf3a <vfprintf+0x448>
     ea4:	8a 81       	ldd	r24, Y+2	; 0x02
     ea6:	81 33       	cpi	r24, 0x31	; 49
     ea8:	09 f0       	breq	.+2      	; 0xeac <vfprintf+0x3ba>
     eaa:	0f 7e       	andi	r16, 0xEF	; 239
     eac:	90 e0       	ldi	r25, 0x00	; 0
     eae:	b3 01       	movw	r22, r6
     eb0:	0e 94 e8 0f 	call	0x1fd0	; 0x1fd0 <fputc>
     eb4:	99 20       	and	r9, r9
     eb6:	a1 f0       	breq	.+40     	; 0xee0 <vfprintf+0x3ee>
     eb8:	8e e2       	ldi	r24, 0x2E	; 46
     eba:	90 e0       	ldi	r25, 0x00	; 0
     ebc:	b3 01       	movw	r22, r6
     ebe:	0e 94 e8 0f 	call	0x1fd0	; 0x1fd0 <fputc>
     ec2:	12 e0       	ldi	r17, 0x02	; 2
     ec4:	e1 e0       	ldi	r30, 0x01	; 1
     ec6:	f0 e0       	ldi	r31, 0x00	; 0
     ec8:	ec 0f       	add	r30, r28
     eca:	fd 1f       	adc	r31, r29
     ecc:	e1 0f       	add	r30, r17
     ece:	f1 1d       	adc	r31, r1
     ed0:	1f 5f       	subi	r17, 0xFF	; 255
     ed2:	80 81       	ld	r24, Z
     ed4:	90 e0       	ldi	r25, 0x00	; 0
     ed6:	b3 01       	movw	r22, r6
     ed8:	0e 94 e8 0f 	call	0x1fd0	; 0x1fd0 <fputc>
     edc:	9a 94       	dec	r9
     ede:	91 f7       	brne	.-28     	; 0xec4 <vfprintf+0x3d2>
     ee0:	44 fc       	sbrc	r4, 4
     ee2:	03 c0       	rjmp	.+6      	; 0xeea <vfprintf+0x3f8>
     ee4:	85 e6       	ldi	r24, 0x65	; 101
     ee6:	90 e0       	ldi	r25, 0x00	; 0
     ee8:	02 c0       	rjmp	.+4      	; 0xeee <vfprintf+0x3fc>
     eea:	85 e4       	ldi	r24, 0x45	; 69
     eec:	90 e0       	ldi	r25, 0x00	; 0
     eee:	b3 01       	movw	r22, r6
     ef0:	0e 94 e8 0f 	call	0x1fd0	; 0x1fd0 <fputc>
     ef4:	d7 fc       	sbrc	r13, 7
     ef6:	05 c0       	rjmp	.+10     	; 0xf02 <vfprintf+0x410>
     ef8:	c1 14       	cp	r12, r1
     efa:	d1 04       	cpc	r13, r1
     efc:	41 f4       	brne	.+16     	; 0xf0e <vfprintf+0x41c>
     efe:	04 ff       	sbrs	r16, 4
     f00:	06 c0       	rjmp	.+12     	; 0xf0e <vfprintf+0x41c>
     f02:	d0 94       	com	r13
     f04:	c1 94       	neg	r12
     f06:	d1 08       	sbc	r13, r1
     f08:	d3 94       	inc	r13
     f0a:	8d e2       	ldi	r24, 0x2D	; 45
     f0c:	01 c0       	rjmp	.+2      	; 0xf10 <vfprintf+0x41e>
     f0e:	8b e2       	ldi	r24, 0x2B	; 43
     f10:	90 e0       	ldi	r25, 0x00	; 0
     f12:	b3 01       	movw	r22, r6
     f14:	0e 94 e8 0f 	call	0x1fd0	; 0x1fd0 <fputc>
     f18:	80 e3       	ldi	r24, 0x30	; 48
     f1a:	05 c0       	rjmp	.+10     	; 0xf26 <vfprintf+0x434>
     f1c:	8f 5f       	subi	r24, 0xFF	; 255
     f1e:	26 ef       	ldi	r18, 0xF6	; 246
     f20:	3f ef       	ldi	r19, 0xFF	; 255
     f22:	c2 0e       	add	r12, r18
     f24:	d3 1e       	adc	r13, r19
     f26:	3a e0       	ldi	r19, 0x0A	; 10
     f28:	c3 16       	cp	r12, r19
     f2a:	d1 04       	cpc	r13, r1
     f2c:	bc f7       	brge	.-18     	; 0xf1c <vfprintf+0x42a>
     f2e:	90 e0       	ldi	r25, 0x00	; 0
     f30:	b3 01       	movw	r22, r6
     f32:	0e 94 e8 0f 	call	0x1fd0	; 0x1fd0 <fputc>
     f36:	c6 01       	movw	r24, r12
     f38:	c0 96       	adiw	r24, 0x30	; 48
     f3a:	b3 01       	movw	r22, r6
     f3c:	0e 94 e8 0f 	call	0x1fd0	; 0x1fd0 <fputc>
     f40:	cc 84       	ldd	r12, Y+12	; 0x0c
     f42:	dd 84       	ldd	r13, Y+13	; 0x0d
     f44:	52 c1       	rjmp	.+676    	; 0x11ea <vfprintf+0x6f8>
     f46:	93 36       	cpi	r25, 0x63	; 99
     f48:	31 f0       	breq	.+12     	; 0xf56 <vfprintf+0x464>
     f4a:	93 37       	cpi	r25, 0x73	; 115
     f4c:	99 f0       	breq	.+38     	; 0xf74 <vfprintf+0x482>
     f4e:	93 35       	cpi	r25, 0x53	; 83
     f50:	09 f0       	breq	.+2      	; 0xf54 <vfprintf+0x462>
     f52:	59 c0       	rjmp	.+178    	; 0x1006 <vfprintf+0x514>
     f54:	23 c0       	rjmp	.+70     	; 0xf9c <vfprintf+0x4aa>
     f56:	f6 01       	movw	r30, r12
     f58:	80 81       	ld	r24, Z
     f5a:	89 83       	std	Y+1, r24	; 0x01
     f5c:	5e 01       	movw	r10, r28
     f5e:	08 94       	sec
     f60:	a1 1c       	adc	r10, r1
     f62:	b1 1c       	adc	r11, r1
     f64:	22 e0       	ldi	r18, 0x02	; 2
     f66:	30 e0       	ldi	r19, 0x00	; 0
     f68:	c2 0e       	add	r12, r18
     f6a:	d3 1e       	adc	r13, r19
     f6c:	21 e0       	ldi	r18, 0x01	; 1
     f6e:	e2 2e       	mov	r14, r18
     f70:	f1 2c       	mov	r15, r1
     f72:	12 c0       	rjmp	.+36     	; 0xf98 <vfprintf+0x4a6>
     f74:	f6 01       	movw	r30, r12
     f76:	a0 80       	ld	r10, Z
     f78:	b1 80       	ldd	r11, Z+1	; 0x01
     f7a:	16 fd       	sbrc	r17, 6
     f7c:	03 c0       	rjmp	.+6      	; 0xf84 <vfprintf+0x492>
     f7e:	6f ef       	ldi	r22, 0xFF	; 255
     f80:	7f ef       	ldi	r23, 0xFF	; 255
     f82:	02 c0       	rjmp	.+4      	; 0xf88 <vfprintf+0x496>
     f84:	69 2d       	mov	r22, r9
     f86:	70 e0       	ldi	r23, 0x00	; 0
     f88:	22 e0       	ldi	r18, 0x02	; 2
     f8a:	30 e0       	ldi	r19, 0x00	; 0
     f8c:	c2 0e       	add	r12, r18
     f8e:	d3 1e       	adc	r13, r19
     f90:	c5 01       	movw	r24, r10
     f92:	0e 94 9b 0f 	call	0x1f36	; 0x1f36 <strnlen>
     f96:	7c 01       	movw	r14, r24
     f98:	1f 77       	andi	r17, 0x7F	; 127
     f9a:	13 c0       	rjmp	.+38     	; 0xfc2 <vfprintf+0x4d0>
     f9c:	f6 01       	movw	r30, r12
     f9e:	a0 80       	ld	r10, Z
     fa0:	b1 80       	ldd	r11, Z+1	; 0x01
     fa2:	16 fd       	sbrc	r17, 6
     fa4:	03 c0       	rjmp	.+6      	; 0xfac <vfprintf+0x4ba>
     fa6:	6f ef       	ldi	r22, 0xFF	; 255
     fa8:	7f ef       	ldi	r23, 0xFF	; 255
     faa:	02 c0       	rjmp	.+4      	; 0xfb0 <vfprintf+0x4be>
     fac:	69 2d       	mov	r22, r9
     fae:	70 e0       	ldi	r23, 0x00	; 0
     fb0:	22 e0       	ldi	r18, 0x02	; 2
     fb2:	30 e0       	ldi	r19, 0x00	; 0
     fb4:	c2 0e       	add	r12, r18
     fb6:	d3 1e       	adc	r13, r19
     fb8:	c5 01       	movw	r24, r10
     fba:	0e 94 90 0f 	call	0x1f20	; 0x1f20 <strnlen_P>
     fbe:	7c 01       	movw	r14, r24
     fc0:	10 68       	ori	r17, 0x80	; 128
     fc2:	13 ff       	sbrs	r17, 3
     fc4:	07 c0       	rjmp	.+14     	; 0xfd4 <vfprintf+0x4e2>
     fc6:	1b c0       	rjmp	.+54     	; 0xffe <vfprintf+0x50c>
     fc8:	80 e2       	ldi	r24, 0x20	; 32
     fca:	90 e0       	ldi	r25, 0x00	; 0
     fcc:	b3 01       	movw	r22, r6
     fce:	0e 94 e8 0f 	call	0x1fd0	; 0x1fd0 <fputc>
     fd2:	8a 94       	dec	r8
     fd4:	88 2d       	mov	r24, r8
     fd6:	90 e0       	ldi	r25, 0x00	; 0
     fd8:	e8 16       	cp	r14, r24
     fda:	f9 06       	cpc	r15, r25
     fdc:	a8 f3       	brcs	.-22     	; 0xfc8 <vfprintf+0x4d6>
     fde:	0f c0       	rjmp	.+30     	; 0xffe <vfprintf+0x50c>
     fe0:	f5 01       	movw	r30, r10
     fe2:	17 fd       	sbrc	r17, 7
     fe4:	85 91       	lpm	r24, Z+
     fe6:	17 ff       	sbrs	r17, 7
     fe8:	81 91       	ld	r24, Z+
     fea:	5f 01       	movw	r10, r30
     fec:	90 e0       	ldi	r25, 0x00	; 0
     fee:	b3 01       	movw	r22, r6
     ff0:	0e 94 e8 0f 	call	0x1fd0	; 0x1fd0 <fputc>
     ff4:	81 10       	cpse	r8, r1
     ff6:	8a 94       	dec	r8
     ff8:	08 94       	sec
     ffa:	e1 08       	sbc	r14, r1
     ffc:	f1 08       	sbc	r15, r1
     ffe:	e1 14       	cp	r14, r1
    1000:	f1 04       	cpc	r15, r1
    1002:	71 f7       	brne	.-36     	; 0xfe0 <vfprintf+0x4ee>
    1004:	f2 c0       	rjmp	.+484    	; 0x11ea <vfprintf+0x6f8>
    1006:	94 36       	cpi	r25, 0x64	; 100
    1008:	11 f0       	breq	.+4      	; 0x100e <vfprintf+0x51c>
    100a:	99 36       	cpi	r25, 0x69	; 105
    100c:	89 f5       	brne	.+98     	; 0x1070 <vfprintf+0x57e>
    100e:	17 ff       	sbrs	r17, 7
    1010:	08 c0       	rjmp	.+16     	; 0x1022 <vfprintf+0x530>
    1012:	f6 01       	movw	r30, r12
    1014:	20 81       	ld	r18, Z
    1016:	31 81       	ldd	r19, Z+1	; 0x01
    1018:	42 81       	ldd	r20, Z+2	; 0x02
    101a:	53 81       	ldd	r21, Z+3	; 0x03
    101c:	84 e0       	ldi	r24, 0x04	; 4
    101e:	90 e0       	ldi	r25, 0x00	; 0
    1020:	0a c0       	rjmp	.+20     	; 0x1036 <vfprintf+0x544>
    1022:	f6 01       	movw	r30, r12
    1024:	80 81       	ld	r24, Z
    1026:	91 81       	ldd	r25, Z+1	; 0x01
    1028:	9c 01       	movw	r18, r24
    102a:	44 27       	eor	r20, r20
    102c:	37 fd       	sbrc	r19, 7
    102e:	40 95       	com	r20
    1030:	54 2f       	mov	r21, r20
    1032:	82 e0       	ldi	r24, 0x02	; 2
    1034:	90 e0       	ldi	r25, 0x00	; 0
    1036:	c8 0e       	add	r12, r24
    1038:	d9 1e       	adc	r13, r25
    103a:	9f e6       	ldi	r25, 0x6F	; 111
    103c:	f9 2e       	mov	r15, r25
    103e:	f1 22       	and	r15, r17
    1040:	57 ff       	sbrs	r21, 7
    1042:	09 c0       	rjmp	.+18     	; 0x1056 <vfprintf+0x564>
    1044:	50 95       	com	r21
    1046:	40 95       	com	r20
    1048:	30 95       	com	r19
    104a:	21 95       	neg	r18
    104c:	3f 4f       	sbci	r19, 0xFF	; 255
    104e:	4f 4f       	sbci	r20, 0xFF	; 255
    1050:	5f 4f       	sbci	r21, 0xFF	; 255
    1052:	90 e8       	ldi	r25, 0x80	; 128
    1054:	f9 2a       	or	r15, r25
    1056:	ca 01       	movw	r24, r20
    1058:	b9 01       	movw	r22, r18
    105a:	ae 01       	movw	r20, r28
    105c:	4f 5f       	subi	r20, 0xFF	; 255
    105e:	5f 4f       	sbci	r21, 0xFF	; 255
    1060:	2a e0       	ldi	r18, 0x0A	; 10
    1062:	30 e0       	ldi	r19, 0x00	; 0
    1064:	0e 94 52 10 	call	0x20a4	; 0x20a4 <__ultoa_invert>
    1068:	e8 2e       	mov	r14, r24
    106a:	e8 89       	ldd	r30, Y+16	; 0x10
    106c:	ee 1a       	sub	r14, r30
    106e:	41 c0       	rjmp	.+130    	; 0x10f2 <vfprintf+0x600>
    1070:	95 37       	cpi	r25, 0x75	; 117
    1072:	21 f4       	brne	.+8      	; 0x107c <vfprintf+0x58a>
    1074:	1f 7e       	andi	r17, 0xEF	; 239
    1076:	2a e0       	ldi	r18, 0x0A	; 10
    1078:	30 e0       	ldi	r19, 0x00	; 0
    107a:	1c c0       	rjmp	.+56     	; 0x10b4 <vfprintf+0x5c2>
    107c:	19 7f       	andi	r17, 0xF9	; 249
    107e:	9f 36       	cpi	r25, 0x6F	; 111
    1080:	61 f0       	breq	.+24     	; 0x109a <vfprintf+0x5a8>
    1082:	90 37       	cpi	r25, 0x70	; 112
    1084:	20 f4       	brcc	.+8      	; 0x108e <vfprintf+0x59c>
    1086:	98 35       	cpi	r25, 0x58	; 88
    1088:	09 f0       	breq	.+2      	; 0x108c <vfprintf+0x59a>
    108a:	b2 c0       	rjmp	.+356    	; 0x11f0 <vfprintf+0x6fe>
    108c:	0f c0       	rjmp	.+30     	; 0x10ac <vfprintf+0x5ba>
    108e:	90 37       	cpi	r25, 0x70	; 112
    1090:	39 f0       	breq	.+14     	; 0x10a0 <vfprintf+0x5ae>
    1092:	98 37       	cpi	r25, 0x78	; 120
    1094:	09 f0       	breq	.+2      	; 0x1098 <vfprintf+0x5a6>
    1096:	ac c0       	rjmp	.+344    	; 0x11f0 <vfprintf+0x6fe>
    1098:	04 c0       	rjmp	.+8      	; 0x10a2 <vfprintf+0x5b0>
    109a:	28 e0       	ldi	r18, 0x08	; 8
    109c:	30 e0       	ldi	r19, 0x00	; 0
    109e:	0a c0       	rjmp	.+20     	; 0x10b4 <vfprintf+0x5c2>
    10a0:	10 61       	ori	r17, 0x10	; 16
    10a2:	14 fd       	sbrc	r17, 4
    10a4:	14 60       	ori	r17, 0x04	; 4
    10a6:	20 e1       	ldi	r18, 0x10	; 16
    10a8:	30 e0       	ldi	r19, 0x00	; 0
    10aa:	04 c0       	rjmp	.+8      	; 0x10b4 <vfprintf+0x5c2>
    10ac:	14 fd       	sbrc	r17, 4
    10ae:	16 60       	ori	r17, 0x06	; 6
    10b0:	20 e1       	ldi	r18, 0x10	; 16
    10b2:	32 e0       	ldi	r19, 0x02	; 2
    10b4:	17 ff       	sbrs	r17, 7
    10b6:	08 c0       	rjmp	.+16     	; 0x10c8 <vfprintf+0x5d6>
    10b8:	f6 01       	movw	r30, r12
    10ba:	60 81       	ld	r22, Z
    10bc:	71 81       	ldd	r23, Z+1	; 0x01
    10be:	82 81       	ldd	r24, Z+2	; 0x02
    10c0:	93 81       	ldd	r25, Z+3	; 0x03
    10c2:	44 e0       	ldi	r20, 0x04	; 4
    10c4:	50 e0       	ldi	r21, 0x00	; 0
    10c6:	08 c0       	rjmp	.+16     	; 0x10d8 <vfprintf+0x5e6>
    10c8:	f6 01       	movw	r30, r12
    10ca:	80 81       	ld	r24, Z
    10cc:	91 81       	ldd	r25, Z+1	; 0x01
    10ce:	bc 01       	movw	r22, r24
    10d0:	80 e0       	ldi	r24, 0x00	; 0
    10d2:	90 e0       	ldi	r25, 0x00	; 0
    10d4:	42 e0       	ldi	r20, 0x02	; 2
    10d6:	50 e0       	ldi	r21, 0x00	; 0
    10d8:	c4 0e       	add	r12, r20
    10da:	d5 1e       	adc	r13, r21
    10dc:	ae 01       	movw	r20, r28
    10de:	4f 5f       	subi	r20, 0xFF	; 255
    10e0:	5f 4f       	sbci	r21, 0xFF	; 255
    10e2:	0e 94 52 10 	call	0x20a4	; 0x20a4 <__ultoa_invert>
    10e6:	e8 2e       	mov	r14, r24
    10e8:	58 89       	ldd	r21, Y+16	; 0x10
    10ea:	e5 1a       	sub	r14, r21
    10ec:	8f e7       	ldi	r24, 0x7F	; 127
    10ee:	f8 2e       	mov	r15, r24
    10f0:	f1 22       	and	r15, r17
    10f2:	f6 fe       	sbrs	r15, 6
    10f4:	0b c0       	rjmp	.+22     	; 0x110c <vfprintf+0x61a>
    10f6:	8e ef       	ldi	r24, 0xFE	; 254
    10f8:	f8 22       	and	r15, r24
    10fa:	e9 14       	cp	r14, r9
    10fc:	38 f4       	brcc	.+14     	; 0x110c <vfprintf+0x61a>
    10fe:	f4 fe       	sbrs	r15, 4
    1100:	07 c0       	rjmp	.+14     	; 0x1110 <vfprintf+0x61e>
    1102:	f2 fc       	sbrc	r15, 2
    1104:	05 c0       	rjmp	.+10     	; 0x1110 <vfprintf+0x61e>
    1106:	9f ee       	ldi	r25, 0xEF	; 239
    1108:	f9 22       	and	r15, r25
    110a:	02 c0       	rjmp	.+4      	; 0x1110 <vfprintf+0x61e>
    110c:	1e 2d       	mov	r17, r14
    110e:	01 c0       	rjmp	.+2      	; 0x1112 <vfprintf+0x620>
    1110:	19 2d       	mov	r17, r9
    1112:	f4 fe       	sbrs	r15, 4
    1114:	0d c0       	rjmp	.+26     	; 0x1130 <vfprintf+0x63e>
    1116:	fe 01       	movw	r30, r28
    1118:	ee 0d       	add	r30, r14
    111a:	f1 1d       	adc	r31, r1
    111c:	80 81       	ld	r24, Z
    111e:	80 33       	cpi	r24, 0x30	; 48
    1120:	19 f4       	brne	.+6      	; 0x1128 <vfprintf+0x636>
    1122:	e9 ee       	ldi	r30, 0xE9	; 233
    1124:	fe 22       	and	r15, r30
    1126:	08 c0       	rjmp	.+16     	; 0x1138 <vfprintf+0x646>
    1128:	1f 5f       	subi	r17, 0xFF	; 255
    112a:	f2 fe       	sbrs	r15, 2
    112c:	05 c0       	rjmp	.+10     	; 0x1138 <vfprintf+0x646>
    112e:	03 c0       	rjmp	.+6      	; 0x1136 <vfprintf+0x644>
    1130:	8f 2d       	mov	r24, r15
    1132:	86 78       	andi	r24, 0x86	; 134
    1134:	09 f0       	breq	.+2      	; 0x1138 <vfprintf+0x646>
    1136:	1f 5f       	subi	r17, 0xFF	; 255
    1138:	0f 2d       	mov	r16, r15
    113a:	f3 fc       	sbrc	r15, 3
    113c:	14 c0       	rjmp	.+40     	; 0x1166 <vfprintf+0x674>
    113e:	f0 fe       	sbrs	r15, 0
    1140:	0f c0       	rjmp	.+30     	; 0x1160 <vfprintf+0x66e>
    1142:	18 15       	cp	r17, r8
    1144:	10 f0       	brcs	.+4      	; 0x114a <vfprintf+0x658>
    1146:	9e 2c       	mov	r9, r14
    1148:	0b c0       	rjmp	.+22     	; 0x1160 <vfprintf+0x66e>
    114a:	9e 2c       	mov	r9, r14
    114c:	98 0c       	add	r9, r8
    114e:	91 1a       	sub	r9, r17
    1150:	18 2d       	mov	r17, r8
    1152:	06 c0       	rjmp	.+12     	; 0x1160 <vfprintf+0x66e>
    1154:	80 e2       	ldi	r24, 0x20	; 32
    1156:	90 e0       	ldi	r25, 0x00	; 0
    1158:	b3 01       	movw	r22, r6
    115a:	0e 94 e8 0f 	call	0x1fd0	; 0x1fd0 <fputc>
    115e:	1f 5f       	subi	r17, 0xFF	; 255
    1160:	18 15       	cp	r17, r8
    1162:	c0 f3       	brcs	.-16     	; 0x1154 <vfprintf+0x662>
    1164:	04 c0       	rjmp	.+8      	; 0x116e <vfprintf+0x67c>
    1166:	18 15       	cp	r17, r8
    1168:	10 f4       	brcc	.+4      	; 0x116e <vfprintf+0x67c>
    116a:	81 1a       	sub	r8, r17
    116c:	01 c0       	rjmp	.+2      	; 0x1170 <vfprintf+0x67e>
    116e:	88 24       	eor	r8, r8
    1170:	04 ff       	sbrs	r16, 4
    1172:	0f c0       	rjmp	.+30     	; 0x1192 <vfprintf+0x6a0>
    1174:	80 e3       	ldi	r24, 0x30	; 48
    1176:	90 e0       	ldi	r25, 0x00	; 0
    1178:	b3 01       	movw	r22, r6
    117a:	0e 94 e8 0f 	call	0x1fd0	; 0x1fd0 <fputc>
    117e:	02 ff       	sbrs	r16, 2
    1180:	1d c0       	rjmp	.+58     	; 0x11bc <vfprintf+0x6ca>
    1182:	01 fd       	sbrc	r16, 1
    1184:	03 c0       	rjmp	.+6      	; 0x118c <vfprintf+0x69a>
    1186:	88 e7       	ldi	r24, 0x78	; 120
    1188:	90 e0       	ldi	r25, 0x00	; 0
    118a:	0e c0       	rjmp	.+28     	; 0x11a8 <vfprintf+0x6b6>
    118c:	88 e5       	ldi	r24, 0x58	; 88
    118e:	90 e0       	ldi	r25, 0x00	; 0
    1190:	0b c0       	rjmp	.+22     	; 0x11a8 <vfprintf+0x6b6>
    1192:	80 2f       	mov	r24, r16
    1194:	86 78       	andi	r24, 0x86	; 134
    1196:	91 f0       	breq	.+36     	; 0x11bc <vfprintf+0x6ca>
    1198:	01 ff       	sbrs	r16, 1
    119a:	02 c0       	rjmp	.+4      	; 0x11a0 <vfprintf+0x6ae>
    119c:	8b e2       	ldi	r24, 0x2B	; 43
    119e:	01 c0       	rjmp	.+2      	; 0x11a2 <vfprintf+0x6b0>
    11a0:	80 e2       	ldi	r24, 0x20	; 32
    11a2:	f7 fc       	sbrc	r15, 7
    11a4:	8d e2       	ldi	r24, 0x2D	; 45
    11a6:	90 e0       	ldi	r25, 0x00	; 0
    11a8:	b3 01       	movw	r22, r6
    11aa:	0e 94 e8 0f 	call	0x1fd0	; 0x1fd0 <fputc>
    11ae:	06 c0       	rjmp	.+12     	; 0x11bc <vfprintf+0x6ca>
    11b0:	80 e3       	ldi	r24, 0x30	; 48
    11b2:	90 e0       	ldi	r25, 0x00	; 0
    11b4:	b3 01       	movw	r22, r6
    11b6:	0e 94 e8 0f 	call	0x1fd0	; 0x1fd0 <fputc>
    11ba:	9a 94       	dec	r9
    11bc:	e9 14       	cp	r14, r9
    11be:	c0 f3       	brcs	.-16     	; 0x11b0 <vfprintf+0x6be>
    11c0:	ea 94       	dec	r14
    11c2:	e1 e0       	ldi	r30, 0x01	; 1
    11c4:	f0 e0       	ldi	r31, 0x00	; 0
    11c6:	ec 0f       	add	r30, r28
    11c8:	fd 1f       	adc	r31, r29
    11ca:	ee 0d       	add	r30, r14
    11cc:	f1 1d       	adc	r31, r1
    11ce:	80 81       	ld	r24, Z
    11d0:	90 e0       	ldi	r25, 0x00	; 0
    11d2:	b3 01       	movw	r22, r6
    11d4:	0e 94 e8 0f 	call	0x1fd0	; 0x1fd0 <fputc>
    11d8:	ee 20       	and	r14, r14
    11da:	91 f7       	brne	.-28     	; 0x11c0 <vfprintf+0x6ce>
    11dc:	06 c0       	rjmp	.+12     	; 0x11ea <vfprintf+0x6f8>
    11de:	80 e2       	ldi	r24, 0x20	; 32
    11e0:	90 e0       	ldi	r25, 0x00	; 0
    11e2:	b3 01       	movw	r22, r6
    11e4:	0e 94 e8 0f 	call	0x1fd0	; 0x1fd0 <fputc>
    11e8:	8a 94       	dec	r8
    11ea:	88 20       	and	r8, r8
    11ec:	c1 f7       	brne	.-16     	; 0x11de <vfprintf+0x6ec>
    11ee:	99 cc       	rjmp	.-1742   	; 0xb22 <vfprintf+0x30>
    11f0:	f3 01       	movw	r30, r6
    11f2:	66 81       	ldd	r22, Z+6	; 0x06
    11f4:	77 81       	ldd	r23, Z+7	; 0x07
    11f6:	cb 01       	movw	r24, r22
    11f8:	61 96       	adiw	r28, 0x11	; 17
    11fa:	e2 e1       	ldi	r30, 0x12	; 18
    11fc:	0c 94 4c 0e 	jmp	0x1c98	; 0x1c98 <__epilogue_restores__>

00001200 <putval>:
    1200:	fc 01       	movw	r30, r24
    1202:	20 fd       	sbrc	r18, 0
    1204:	08 c0       	rjmp	.+16     	; 0x1216 <putval+0x16>
    1206:	23 fd       	sbrc	r18, 3
    1208:	05 c0       	rjmp	.+10     	; 0x1214 <putval+0x14>
    120a:	22 ff       	sbrs	r18, 2
    120c:	02 c0       	rjmp	.+4      	; 0x1212 <putval+0x12>
    120e:	73 83       	std	Z+3, r23	; 0x03
    1210:	62 83       	std	Z+2, r22	; 0x02
    1212:	51 83       	std	Z+1, r21	; 0x01
    1214:	40 83       	st	Z, r20
    1216:	08 95       	ret

00001218 <mulacc>:
    1218:	ef 92       	push	r14
    121a:	ff 92       	push	r15
    121c:	0f 93       	push	r16
    121e:	1f 93       	push	r17
    1220:	44 ff       	sbrs	r20, 4
    1222:	02 c0       	rjmp	.+4      	; 0x1228 <mulacc+0x10>
    1224:	33 e0       	ldi	r19, 0x03	; 3
    1226:	11 c0       	rjmp	.+34     	; 0x124a <mulacc+0x32>
    1228:	46 ff       	sbrs	r20, 6
    122a:	02 c0       	rjmp	.+4      	; 0x1230 <mulacc+0x18>
    122c:	34 e0       	ldi	r19, 0x04	; 4
    122e:	0d c0       	rjmp	.+26     	; 0x124a <mulacc+0x32>
    1230:	db 01       	movw	r26, r22
    1232:	fc 01       	movw	r30, r24
    1234:	aa 0f       	add	r26, r26
    1236:	bb 1f       	adc	r27, r27
    1238:	ee 1f       	adc	r30, r30
    123a:	ff 1f       	adc	r31, r31
    123c:	10 94       	com	r1
    123e:	d1 f7       	brne	.-12     	; 0x1234 <mulacc+0x1c>
    1240:	6a 0f       	add	r22, r26
    1242:	7b 1f       	adc	r23, r27
    1244:	8e 1f       	adc	r24, r30
    1246:	9f 1f       	adc	r25, r31
    1248:	31 e0       	ldi	r19, 0x01	; 1
    124a:	66 0f       	add	r22, r22
    124c:	77 1f       	adc	r23, r23
    124e:	88 1f       	adc	r24, r24
    1250:	99 1f       	adc	r25, r25
    1252:	31 50       	subi	r19, 0x01	; 1
    1254:	d1 f7       	brne	.-12     	; 0x124a <mulacc+0x32>
    1256:	7b 01       	movw	r14, r22
    1258:	8c 01       	movw	r16, r24
    125a:	e2 0e       	add	r14, r18
    125c:	f1 1c       	adc	r15, r1
    125e:	01 1d       	adc	r16, r1
    1260:	11 1d       	adc	r17, r1
    1262:	a8 01       	movw	r20, r16
    1264:	97 01       	movw	r18, r14
    1266:	b7 01       	movw	r22, r14
    1268:	ca 01       	movw	r24, r20
    126a:	1f 91       	pop	r17
    126c:	0f 91       	pop	r16
    126e:	ff 90       	pop	r15
    1270:	ef 90       	pop	r14
    1272:	08 95       	ret

00001274 <skip_spaces>:
    1274:	0f 93       	push	r16
    1276:	1f 93       	push	r17
    1278:	cf 93       	push	r28
    127a:	df 93       	push	r29
    127c:	8c 01       	movw	r16, r24
    127e:	c8 01       	movw	r24, r16
    1280:	0e 94 a6 0f 	call	0x1f4c	; 0x1f4c <fgetc>
    1284:	ec 01       	movw	r28, r24
    1286:	97 fd       	sbrc	r25, 7
    1288:	08 c0       	rjmp	.+16     	; 0x129a <skip_spaces+0x26>
    128a:	0e 94 75 0f 	call	0x1eea	; 0x1eea <isspace>
    128e:	89 2b       	or	r24, r25
    1290:	b1 f7       	brne	.-20     	; 0x127e <skip_spaces+0xa>
    1292:	ce 01       	movw	r24, r28
    1294:	b8 01       	movw	r22, r16
    1296:	0e 94 38 10 	call	0x2070	; 0x2070 <ungetc>
    129a:	ce 01       	movw	r24, r28
    129c:	df 91       	pop	r29
    129e:	cf 91       	pop	r28
    12a0:	1f 91       	pop	r17
    12a2:	0f 91       	pop	r16
    12a4:	08 95       	ret

000012a6 <conv_int>:
    12a6:	8f 92       	push	r8
    12a8:	9f 92       	push	r9
    12aa:	af 92       	push	r10
    12ac:	bf 92       	push	r11
    12ae:	df 92       	push	r13
    12b0:	ef 92       	push	r14
    12b2:	ff 92       	push	r15
    12b4:	0f 93       	push	r16
    12b6:	1f 93       	push	r17
    12b8:	cf 93       	push	r28
    12ba:	df 93       	push	r29
    12bc:	5c 01       	movw	r10, r24
    12be:	eb 01       	movw	r28, r22
    12c0:	4a 01       	movw	r8, r20
    12c2:	12 2f       	mov	r17, r18
    12c4:	0e 94 a6 0f 	call	0x1f4c	; 0x1f4c <fgetc>
    12c8:	ac 01       	movw	r20, r24
    12ca:	8b 32       	cpi	r24, 0x2B	; 43
    12cc:	19 f0       	breq	.+6      	; 0x12d4 <conv_int+0x2e>
    12ce:	8d 32       	cpi	r24, 0x2D	; 45
    12d0:	51 f4       	brne	.+20     	; 0x12e6 <conv_int+0x40>
    12d2:	10 68       	ori	r17, 0x80	; 128
    12d4:	21 97       	sbiw	r28, 0x01	; 1
    12d6:	09 f4       	brne	.+2      	; 0x12da <conv_int+0x34>
    12d8:	6d c0       	rjmp	.+218    	; 0x13b4 <conv_int+0x10e>
    12da:	c5 01       	movw	r24, r10
    12dc:	0e 94 a6 0f 	call	0x1f4c	; 0x1f4c <fgetc>
    12e0:	ac 01       	movw	r20, r24
    12e2:	97 fd       	sbrc	r25, 7
    12e4:	67 c0       	rjmp	.+206    	; 0x13b4 <conv_int+0x10e>
    12e6:	6d ef       	ldi	r22, 0xFD	; 253
    12e8:	d6 2e       	mov	r13, r22
    12ea:	d1 22       	and	r13, r17
    12ec:	8d 2d       	mov	r24, r13
    12ee:	80 73       	andi	r24, 0x30	; 48
    12f0:	01 f5       	brne	.+64     	; 0x1332 <conv_int+0x8c>
    12f2:	40 33       	cpi	r20, 0x30	; 48
    12f4:	f1 f4       	brne	.+60     	; 0x1332 <conv_int+0x8c>
    12f6:	21 97       	sbiw	r28, 0x01	; 1
    12f8:	09 f4       	brne	.+2      	; 0x12fc <conv_int+0x56>
    12fa:	47 c0       	rjmp	.+142    	; 0x138a <conv_int+0xe4>
    12fc:	c5 01       	movw	r24, r10
    12fe:	0e 94 a6 0f 	call	0x1f4c	; 0x1f4c <fgetc>
    1302:	ac 01       	movw	r20, r24
    1304:	97 fd       	sbrc	r25, 7
    1306:	41 c0       	rjmp	.+130    	; 0x138a <conv_int+0xe4>
    1308:	82 e0       	ldi	r24, 0x02	; 2
    130a:	d8 2a       	or	r13, r24
    130c:	48 37       	cpi	r20, 0x78	; 120
    130e:	11 f0       	breq	.+4      	; 0x1314 <conv_int+0x6e>
    1310:	48 35       	cpi	r20, 0x58	; 88
    1312:	59 f4       	brne	.+22     	; 0x132a <conv_int+0x84>
    1314:	80 e4       	ldi	r24, 0x40	; 64
    1316:	d8 2a       	or	r13, r24
    1318:	21 97       	sbiw	r28, 0x01	; 1
    131a:	b9 f1       	breq	.+110    	; 0x138a <conv_int+0xe4>
    131c:	c5 01       	movw	r24, r10
    131e:	0e 94 a6 0f 	call	0x1f4c	; 0x1f4c <fgetc>
    1322:	ac 01       	movw	r20, r24
    1324:	99 23       	and	r25, r25
    1326:	2c f4       	brge	.+10     	; 0x1332 <conv_int+0x8c>
    1328:	30 c0       	rjmp	.+96     	; 0x138a <conv_int+0xe4>
    132a:	d6 fc       	sbrc	r13, 6
    132c:	02 c0       	rjmp	.+4      	; 0x1332 <conv_int+0x8c>
    132e:	80 e1       	ldi	r24, 0x10	; 16
    1330:	d8 2a       	or	r13, r24
    1332:	ee 24       	eor	r14, r14
    1334:	ff 24       	eor	r15, r15
    1336:	87 01       	movw	r16, r14
    1338:	24 2f       	mov	r18, r20
    133a:	20 53       	subi	r18, 0x30	; 48
    133c:	28 30       	cpi	r18, 0x08	; 8
    133e:	88 f0       	brcs	.+34     	; 0x1362 <conv_int+0xbc>
    1340:	d4 fc       	sbrc	r13, 4
    1342:	09 c0       	rjmp	.+18     	; 0x1356 <conv_int+0xb0>
    1344:	2a 30       	cpi	r18, 0x0A	; 10
    1346:	68 f0       	brcs	.+26     	; 0x1362 <conv_int+0xbc>
    1348:	d6 fe       	sbrs	r13, 6
    134a:	05 c0       	rjmp	.+10     	; 0x1356 <conv_int+0xb0>
    134c:	2f 7d       	andi	r18, 0xDF	; 223
    134e:	82 2f       	mov	r24, r18
    1350:	81 51       	subi	r24, 0x11	; 17
    1352:	86 30       	cpi	r24, 0x06	; 6
    1354:	28 f0       	brcs	.+10     	; 0x1360 <conv_int+0xba>
    1356:	ca 01       	movw	r24, r20
    1358:	b5 01       	movw	r22, r10
    135a:	0e 94 38 10 	call	0x2070	; 0x2070 <ungetc>
    135e:	12 c0       	rjmp	.+36     	; 0x1384 <conv_int+0xde>
    1360:	27 50       	subi	r18, 0x07	; 7
    1362:	c8 01       	movw	r24, r16
    1364:	b7 01       	movw	r22, r14
    1366:	4d 2d       	mov	r20, r13
    1368:	0e 94 0c 09 	call	0x1218	; 0x1218 <mulacc>
    136c:	7b 01       	movw	r14, r22
    136e:	8c 01       	movw	r16, r24
    1370:	82 e0       	ldi	r24, 0x02	; 2
    1372:	d8 2a       	or	r13, r24
    1374:	21 97       	sbiw	r28, 0x01	; 1
    1376:	61 f0       	breq	.+24     	; 0x1390 <conv_int+0xea>
    1378:	c5 01       	movw	r24, r10
    137a:	0e 94 a6 0f 	call	0x1f4c	; 0x1f4c <fgetc>
    137e:	ac 01       	movw	r20, r24
    1380:	97 ff       	sbrs	r25, 7
    1382:	da cf       	rjmp	.-76     	; 0x1338 <conv_int+0x92>
    1384:	d1 fc       	sbrc	r13, 1
    1386:	04 c0       	rjmp	.+8      	; 0x1390 <conv_int+0xea>
    1388:	15 c0       	rjmp	.+42     	; 0x13b4 <conv_int+0x10e>
    138a:	ee 24       	eor	r14, r14
    138c:	ff 24       	eor	r15, r15
    138e:	87 01       	movw	r16, r14
    1390:	d7 fe       	sbrs	r13, 7
    1392:	08 c0       	rjmp	.+16     	; 0x13a4 <conv_int+0xfe>
    1394:	10 95       	com	r17
    1396:	00 95       	com	r16
    1398:	f0 94       	com	r15
    139a:	e0 94       	com	r14
    139c:	e1 1c       	adc	r14, r1
    139e:	f1 1c       	adc	r15, r1
    13a0:	01 1d       	adc	r16, r1
    13a2:	11 1d       	adc	r17, r1
    13a4:	c4 01       	movw	r24, r8
    13a6:	b8 01       	movw	r22, r16
    13a8:	a7 01       	movw	r20, r14
    13aa:	2d 2d       	mov	r18, r13
    13ac:	0e 94 00 09 	call	0x1200	; 0x1200 <putval>
    13b0:	81 e0       	ldi	r24, 0x01	; 1
    13b2:	01 c0       	rjmp	.+2      	; 0x13b6 <conv_int+0x110>
    13b4:	80 e0       	ldi	r24, 0x00	; 0
    13b6:	df 91       	pop	r29
    13b8:	cf 91       	pop	r28
    13ba:	1f 91       	pop	r17
    13bc:	0f 91       	pop	r16
    13be:	ff 90       	pop	r15
    13c0:	ef 90       	pop	r14
    13c2:	df 90       	pop	r13
    13c4:	bf 90       	pop	r11
    13c6:	af 90       	pop	r10
    13c8:	9f 90       	pop	r9
    13ca:	8f 90       	pop	r8
    13cc:	08 95       	ret

000013ce <conv_brk>:
    13ce:	a0 e2       	ldi	r26, 0x20	; 32
    13d0:	b0 e0       	ldi	r27, 0x00	; 0
    13d2:	ed ee       	ldi	r30, 0xED	; 237
    13d4:	f9 e0       	ldi	r31, 0x09	; 9
    13d6:	0c 94 34 0e 	jmp	0x1c68	; 0x1c68 <__prologue_saves__+0x8>
    13da:	5c 01       	movw	r10, r24
    13dc:	6b 01       	movw	r12, r22
    13de:	8a 01       	movw	r16, r20
    13e0:	79 01       	movw	r14, r18
    13e2:	fe 01       	movw	r30, r28
    13e4:	31 96       	adiw	r30, 0x01	; 1
    13e6:	80 e2       	ldi	r24, 0x20	; 32
    13e8:	df 01       	movw	r26, r30
    13ea:	1d 92       	st	X+, r1
    13ec:	8a 95       	dec	r24
    13ee:	e9 f7       	brne	.-6      	; 0x13ea <conv_brk+0x1c>
    13f0:	70 e0       	ldi	r23, 0x00	; 0
    13f2:	30 e0       	ldi	r19, 0x00	; 0
    13f4:	60 e0       	ldi	r22, 0x00	; 0
    13f6:	40 e0       	ldi	r20, 0x00	; 0
    13f8:	50 e0       	ldi	r21, 0x00	; 0
    13fa:	3f 01       	movw	r6, r30
    13fc:	a1 e0       	ldi	r26, 0x01	; 1
    13fe:	b0 e0       	ldi	r27, 0x00	; 0
    1400:	f5 01       	movw	r30, r10
    1402:	83 81       	ldd	r24, Z+3	; 0x03
    1404:	f7 01       	movw	r30, r14
    1406:	83 fd       	sbrc	r24, 3
    1408:	25 91       	lpm	r18, Z+
    140a:	83 ff       	sbrs	r24, 3
    140c:	21 91       	ld	r18, Z+
    140e:	7f 01       	movw	r14, r30
    1410:	22 23       	and	r18, r18
    1412:	09 f4       	brne	.+2      	; 0x1416 <conv_brk+0x48>
    1414:	81 c0       	rjmp	.+258    	; 0x1518 <conv_brk+0x14a>
    1416:	2e 35       	cpi	r18, 0x5E	; 94
    1418:	19 f4       	brne	.+6      	; 0x1420 <conv_brk+0x52>
    141a:	41 15       	cp	r20, r1
    141c:	51 05       	cpc	r21, r1
    141e:	69 f1       	breq	.+90     	; 0x147a <conv_brk+0xac>
    1420:	87 2f       	mov	r24, r23
    1422:	90 e0       	ldi	r25, 0x00	; 0
    1424:	84 17       	cp	r24, r20
    1426:	95 07       	cpc	r25, r21
    1428:	44 f4       	brge	.+16     	; 0x143a <conv_brk+0x6c>
    142a:	2d 35       	cpi	r18, 0x5D	; 93
    142c:	51 f1       	breq	.+84     	; 0x1482 <conv_brk+0xb4>
    142e:	2d 32       	cpi	r18, 0x2D	; 45
    1430:	21 f4       	brne	.+8      	; 0x143a <conv_brk+0x6c>
    1432:	33 23       	and	r19, r19
    1434:	29 f4       	brne	.+10     	; 0x1440 <conv_brk+0x72>
    1436:	31 e0       	ldi	r19, 0x01	; 1
    1438:	21 c0       	rjmp	.+66     	; 0x147c <conv_brk+0xae>
    143a:	33 23       	and	r19, r19
    143c:	09 f4       	brne	.+2      	; 0x1440 <conv_brk+0x72>
    143e:	62 2f       	mov	r22, r18
    1440:	32 2f       	mov	r19, r18
    1442:	83 2f       	mov	r24, r19
    1444:	86 95       	lsr	r24
    1446:	86 95       	lsr	r24
    1448:	86 95       	lsr	r24
    144a:	f3 01       	movw	r30, r6
    144c:	e8 0f       	add	r30, r24
    144e:	f1 1d       	adc	r31, r1
    1450:	83 2f       	mov	r24, r19
    1452:	87 70       	andi	r24, 0x07	; 7
    1454:	4d 01       	movw	r8, r26
    1456:	02 c0       	rjmp	.+4      	; 0x145c <conv_brk+0x8e>
    1458:	88 0c       	add	r8, r8
    145a:	99 1c       	adc	r9, r9
    145c:	8a 95       	dec	r24
    145e:	e2 f7       	brpl	.-8      	; 0x1458 <conv_brk+0x8a>
    1460:	20 81       	ld	r18, Z
    1462:	28 29       	or	r18, r8
    1464:	20 83       	st	Z, r18
    1466:	36 17       	cp	r19, r22
    1468:	11 f4       	brne	.+4      	; 0x146e <conv_brk+0xa0>
    146a:	30 e0       	ldi	r19, 0x00	; 0
    146c:	07 c0       	rjmp	.+14     	; 0x147c <conv_brk+0xae>
    146e:	36 17       	cp	r19, r22
    1470:	10 f4       	brcc	.+4      	; 0x1476 <conv_brk+0xa8>
    1472:	3f 5f       	subi	r19, 0xFF	; 255
    1474:	e6 cf       	rjmp	.-52     	; 0x1442 <conv_brk+0x74>
    1476:	31 50       	subi	r19, 0x01	; 1
    1478:	e4 cf       	rjmp	.-56     	; 0x1442 <conv_brk+0x74>
    147a:	71 e0       	ldi	r23, 0x01	; 1
    147c:	4f 5f       	subi	r20, 0xFF	; 255
    147e:	5f 4f       	sbci	r21, 0xFF	; 255
    1480:	bf cf       	rjmp	.-130    	; 0x1400 <conv_brk+0x32>
    1482:	33 23       	and	r19, r19
    1484:	19 f0       	breq	.+6      	; 0x148c <conv_brk+0xbe>
    1486:	8e 81       	ldd	r24, Y+6	; 0x06
    1488:	80 62       	ori	r24, 0x20	; 32
    148a:	8e 83       	std	Y+6, r24	; 0x06
    148c:	77 23       	and	r23, r23
    148e:	59 f0       	breq	.+22     	; 0x14a6 <conv_brk+0xd8>
    1490:	fe 01       	movw	r30, r28
    1492:	31 96       	adiw	r30, 0x01	; 1
    1494:	9e 01       	movw	r18, r28
    1496:	2f 5d       	subi	r18, 0xDF	; 223
    1498:	3f 4f       	sbci	r19, 0xFF	; 255
    149a:	80 81       	ld	r24, Z
    149c:	80 95       	com	r24
    149e:	81 93       	st	Z+, r24
    14a0:	e2 17       	cp	r30, r18
    14a2:	f3 07       	cpc	r31, r19
    14a4:	d1 f7       	brne	.-12     	; 0x149a <conv_brk+0xcc>
    14a6:	99 24       	eor	r9, r9
    14a8:	93 94       	inc	r9
    14aa:	3e 01       	movw	r6, r28
    14ac:	08 94       	sec
    14ae:	61 1c       	adc	r6, r1
    14b0:	71 1c       	adc	r7, r1
    14b2:	c5 01       	movw	r24, r10
    14b4:	0e 94 a6 0f 	call	0x1f4c	; 0x1f4c <fgetc>
    14b8:	ac 01       	movw	r20, r24
    14ba:	97 fd       	sbrc	r25, 7
    14bc:	25 c0       	rjmp	.+74     	; 0x1508 <conv_brk+0x13a>
    14be:	86 95       	lsr	r24
    14c0:	86 95       	lsr	r24
    14c2:	86 95       	lsr	r24
    14c4:	f3 01       	movw	r30, r6
    14c6:	e8 0f       	add	r30, r24
    14c8:	f1 1d       	adc	r31, r1
    14ca:	80 81       	ld	r24, Z
    14cc:	90 e0       	ldi	r25, 0x00	; 0
    14ce:	9a 01       	movw	r18, r20
    14d0:	27 70       	andi	r18, 0x07	; 7
    14d2:	30 70       	andi	r19, 0x00	; 0
    14d4:	02 c0       	rjmp	.+4      	; 0x14da <conv_brk+0x10c>
    14d6:	95 95       	asr	r25
    14d8:	87 95       	ror	r24
    14da:	2a 95       	dec	r18
    14dc:	e2 f7       	brpl	.-8      	; 0x14d6 <conv_brk+0x108>
    14de:	80 fd       	sbrc	r24, 0
    14e0:	05 c0       	rjmp	.+10     	; 0x14ec <conv_brk+0x11e>
    14e2:	ca 01       	movw	r24, r20
    14e4:	b5 01       	movw	r22, r10
    14e6:	0e 94 38 10 	call	0x2070	; 0x2070 <ungetc>
    14ea:	0e c0       	rjmp	.+28     	; 0x1508 <conv_brk+0x13a>
    14ec:	01 15       	cp	r16, r1
    14ee:	11 05       	cpc	r17, r1
    14f0:	19 f0       	breq	.+6      	; 0x14f8 <conv_brk+0x12a>
    14f2:	d8 01       	movw	r26, r16
    14f4:	4d 93       	st	X+, r20
    14f6:	8d 01       	movw	r16, r26
    14f8:	08 94       	sec
    14fa:	c1 08       	sbc	r12, r1
    14fc:	d1 08       	sbc	r13, r1
    14fe:	99 24       	eor	r9, r9
    1500:	c1 14       	cp	r12, r1
    1502:	d1 04       	cpc	r13, r1
    1504:	b1 f6       	brne	.-84     	; 0x14b2 <conv_brk+0xe4>
    1506:	02 c0       	rjmp	.+4      	; 0x150c <conv_brk+0x13e>
    1508:	99 20       	and	r9, r9
    150a:	31 f4       	brne	.+12     	; 0x1518 <conv_brk+0x14a>
    150c:	01 15       	cp	r16, r1
    150e:	11 05       	cpc	r17, r1
    1510:	29 f0       	breq	.+10     	; 0x151c <conv_brk+0x14e>
    1512:	f8 01       	movw	r30, r16
    1514:	10 82       	st	Z, r1
    1516:	02 c0       	rjmp	.+4      	; 0x151c <conv_brk+0x14e>
    1518:	ee 24       	eor	r14, r14
    151a:	ff 24       	eor	r15, r15
    151c:	c7 01       	movw	r24, r14
    151e:	a0 96       	adiw	r28, 0x20	; 32
    1520:	ee e0       	ldi	r30, 0x0E	; 14
    1522:	0c 94 50 0e 	jmp	0x1ca0	; 0x1ca0 <__epilogue_restores__+0x8>

00001526 <conv_flt>:
    1526:	2f 92       	push	r2
    1528:	3f 92       	push	r3
    152a:	5f 92       	push	r5
    152c:	6f 92       	push	r6
    152e:	7f 92       	push	r7
    1530:	8f 92       	push	r8
    1532:	9f 92       	push	r9
    1534:	af 92       	push	r10
    1536:	bf 92       	push	r11
    1538:	cf 92       	push	r12
    153a:	df 92       	push	r13
    153c:	ef 92       	push	r14
    153e:	ff 92       	push	r15
    1540:	0f 93       	push	r16
    1542:	1f 93       	push	r17
    1544:	cf 93       	push	r28
    1546:	df 93       	push	r29
    1548:	3c 01       	movw	r6, r24
    154a:	7b 01       	movw	r14, r22
    154c:	1a 01       	movw	r2, r20
    154e:	0e 94 a6 0f 	call	0x1f4c	; 0x1f4c <fgetc>
    1552:	ec 01       	movw	r28, r24
    1554:	8b 32       	cpi	r24, 0x2B	; 43
    1556:	39 f0       	breq	.+14     	; 0x1566 <conv_flt+0x40>
    1558:	8d 32       	cpi	r24, 0x2D	; 45
    155a:	11 f0       	breq	.+4      	; 0x1560 <conv_flt+0x3a>
    155c:	55 24       	eor	r5, r5
    155e:	11 c0       	rjmp	.+34     	; 0x1582 <conv_flt+0x5c>
    1560:	b0 e8       	ldi	r27, 0x80	; 128
    1562:	5b 2e       	mov	r5, r27
    1564:	01 c0       	rjmp	.+2      	; 0x1568 <conv_flt+0x42>
    1566:	55 24       	eor	r5, r5
    1568:	08 94       	sec
    156a:	e1 08       	sbc	r14, r1
    156c:	f1 08       	sbc	r15, r1
    156e:	e1 14       	cp	r14, r1
    1570:	f1 04       	cpc	r15, r1
    1572:	09 f4       	brne	.+2      	; 0x1576 <conv_flt+0x50>
    1574:	18 c1       	rjmp	.+560    	; 0x17a6 <conv_flt+0x280>
    1576:	c3 01       	movw	r24, r6
    1578:	0e 94 a6 0f 	call	0x1f4c	; 0x1f4c <fgetc>
    157c:	ec 01       	movw	r28, r24
    157e:	97 fd       	sbrc	r25, 7
    1580:	12 c1       	rjmp	.+548    	; 0x17a6 <conv_flt+0x280>
    1582:	ce 01       	movw	r24, r28
    1584:	0e 94 7d 0f 	call	0x1efa	; 0x1efa <tolower>
    1588:	89 36       	cpi	r24, 0x69	; 105
    158a:	91 05       	cpc	r25, r1
    158c:	21 f0       	breq	.+8      	; 0x1596 <conv_flt+0x70>
    158e:	8e 36       	cpi	r24, 0x6E	; 110
    1590:	91 05       	cpc	r25, r1
    1592:	99 f5       	brne	.+102    	; 0x15fa <conv_flt+0xd4>
    1594:	1d c0       	rjmp	.+58     	; 0x15d0 <conv_flt+0xaa>
    1596:	01 e7       	ldi	r16, 0x71	; 113
    1598:	10 e0       	ldi	r17, 0x00	; 0
    159a:	1c c0       	rjmp	.+56     	; 0x15d4 <conv_flt+0xae>
    159c:	08 94       	sec
    159e:	e1 08       	sbc	r14, r1
    15a0:	f1 08       	sbc	r15, r1
    15a2:	e1 14       	cp	r14, r1
    15a4:	f1 04       	cpc	r15, r1
    15a6:	71 f0       	breq	.+28     	; 0x15c4 <conv_flt+0x9e>
    15a8:	c3 01       	movw	r24, r6
    15aa:	0e 94 a6 0f 	call	0x1f4c	; 0x1f4c <fgetc>
    15ae:	ec 01       	movw	r28, r24
    15b0:	97 fd       	sbrc	r25, 7
    15b2:	08 c0       	rjmp	.+16     	; 0x15c4 <conv_flt+0x9e>
    15b4:	0e 94 7d 0f 	call	0x1efa	; 0x1efa <tolower>
    15b8:	d8 16       	cp	r13, r24
    15ba:	61 f0       	breq	.+24     	; 0x15d4 <conv_flt+0xae>
    15bc:	ce 01       	movw	r24, r28
    15be:	b3 01       	movw	r22, r6
    15c0:	0e 94 38 10 	call	0x2070	; 0x2070 <ungetc>
    15c4:	20 e0       	ldi	r18, 0x00	; 0
    15c6:	04 37       	cpi	r16, 0x74	; 116
    15c8:	12 07       	cpc	r17, r18
    15ca:	09 f0       	breq	.+2      	; 0x15ce <conv_flt+0xa8>
    15cc:	ec c0       	rjmp	.+472    	; 0x17a6 <conv_flt+0x280>
    15ce:	08 c0       	rjmp	.+16     	; 0x15e0 <conv_flt+0xba>
    15d0:	0e e6       	ldi	r16, 0x6E	; 110
    15d2:	10 e0       	ldi	r17, 0x00	; 0
    15d4:	f8 01       	movw	r30, r16
    15d6:	0f 5f       	subi	r16, 0xFF	; 255
    15d8:	1f 4f       	sbci	r17, 0xFF	; 255
    15da:	d4 90       	lpm	r13, Z+
    15dc:	dd 20       	and	r13, r13
    15de:	f1 f6       	brne	.-68     	; 0x159c <conv_flt+0x76>
    15e0:	01 57       	subi	r16, 0x71	; 113
    15e2:	10 40       	sbci	r17, 0x00	; 0
    15e4:	29 f0       	breq	.+10     	; 0x15f0 <conv_flt+0xca>
    15e6:	80 e0       	ldi	r24, 0x00	; 0
    15e8:	90 e0       	ldi	r25, 0x00	; 0
    15ea:	a0 e8       	ldi	r26, 0x80	; 128
    15ec:	bf e7       	ldi	r27, 0x7F	; 127
    15ee:	cf c0       	rjmp	.+414    	; 0x178e <conv_flt+0x268>
    15f0:	80 e0       	ldi	r24, 0x00	; 0
    15f2:	90 e0       	ldi	r25, 0x00	; 0
    15f4:	a0 ec       	ldi	r26, 0xC0	; 192
    15f6:	bf e7       	ldi	r27, 0x7F	; 127
    15f8:	ca c0       	rjmp	.+404    	; 0x178e <conv_flt+0x268>
    15fa:	cc 24       	eor	r12, r12
    15fc:	dd 24       	eor	r13, r13
    15fe:	88 24       	eor	r8, r8
    1600:	99 24       	eor	r9, r9
    1602:	54 01       	movw	r10, r8
    1604:	ae 01       	movw	r20, r28
    1606:	40 53       	subi	r20, 0x30	; 48
    1608:	24 2f       	mov	r18, r20
    160a:	4a 30       	cpi	r20, 0x0A	; 10
    160c:	38 f5       	brcc	.+78     	; 0x165c <conv_flt+0x136>
    160e:	52 e0       	ldi	r21, 0x02	; 2
    1610:	55 2a       	or	r5, r21
    1612:	85 2d       	mov	r24, r5
    1614:	90 e0       	ldi	r25, 0x00	; 0
    1616:	ac 01       	movw	r20, r24
    1618:	48 70       	andi	r20, 0x08	; 8
    161a:	50 70       	andi	r21, 0x00	; 0
    161c:	52 fe       	sbrs	r5, 2
    161e:	06 c0       	rjmp	.+12     	; 0x162c <conv_flt+0x106>
    1620:	45 2b       	or	r20, r21
    1622:	11 f5       	brne	.+68     	; 0x1668 <conv_flt+0x142>
    1624:	08 94       	sec
    1626:	c1 1c       	adc	r12, r1
    1628:	d1 1c       	adc	r13, r1
    162a:	1e c0       	rjmp	.+60     	; 0x1668 <conv_flt+0x142>
    162c:	45 2b       	or	r20, r21
    162e:	19 f0       	breq	.+6      	; 0x1636 <conv_flt+0x110>
    1630:	08 94       	sec
    1632:	c1 08       	sbc	r12, r1
    1634:	d1 08       	sbc	r13, r1
    1636:	c5 01       	movw	r24, r10
    1638:	b4 01       	movw	r22, r8
    163a:	40 e2       	ldi	r20, 0x20	; 32
    163c:	0e 94 0c 09 	call	0x1218	; 0x1218 <mulacc>
    1640:	4b 01       	movw	r8, r22
    1642:	5c 01       	movw	r10, r24
    1644:	88 e9       	ldi	r24, 0x98	; 152
    1646:	88 16       	cp	r8, r24
    1648:	89 e9       	ldi	r24, 0x99	; 153
    164a:	98 06       	cpc	r9, r24
    164c:	89 e9       	ldi	r24, 0x99	; 153
    164e:	a8 06       	cpc	r10, r24
    1650:	89 e1       	ldi	r24, 0x19	; 25
    1652:	b8 06       	cpc	r11, r24
    1654:	48 f0       	brcs	.+18     	; 0x1668 <conv_flt+0x142>
    1656:	94 e0       	ldi	r25, 0x04	; 4
    1658:	59 2a       	or	r5, r25
    165a:	06 c0       	rjmp	.+12     	; 0x1668 <conv_flt+0x142>
    165c:	4e 3f       	cpi	r20, 0xFE	; 254
    165e:	81 f4       	brne	.+32     	; 0x1680 <conv_flt+0x15a>
    1660:	53 fc       	sbrc	r5, 3
    1662:	0e c0       	rjmp	.+28     	; 0x1680 <conv_flt+0x15a>
    1664:	e8 e0       	ldi	r30, 0x08	; 8
    1666:	5e 2a       	or	r5, r30
    1668:	08 94       	sec
    166a:	e1 08       	sbc	r14, r1
    166c:	f1 08       	sbc	r15, r1
    166e:	e1 14       	cp	r14, r1
    1670:	f1 04       	cpc	r15, r1
    1672:	31 f0       	breq	.+12     	; 0x1680 <conv_flt+0x15a>
    1674:	c3 01       	movw	r24, r6
    1676:	0e 94 a6 0f 	call	0x1f4c	; 0x1f4c <fgetc>
    167a:	ec 01       	movw	r28, r24
    167c:	97 ff       	sbrs	r25, 7
    167e:	c2 cf       	rjmp	.-124    	; 0x1604 <conv_flt+0xde>
    1680:	51 fe       	sbrs	r5, 1
    1682:	91 c0       	rjmp	.+290    	; 0x17a6 <conv_flt+0x280>
    1684:	c5 36       	cpi	r28, 0x65	; 101
    1686:	19 f0       	breq	.+6      	; 0x168e <conv_flt+0x168>
    1688:	c5 34       	cpi	r28, 0x45	; 69
    168a:	09 f0       	breq	.+2      	; 0x168e <conv_flt+0x168>
    168c:	46 c0       	rjmp	.+140    	; 0x171a <conv_flt+0x1f4>
    168e:	08 94       	sec
    1690:	e1 08       	sbc	r14, r1
    1692:	f1 08       	sbc	r15, r1
    1694:	e1 14       	cp	r14, r1
    1696:	f1 04       	cpc	r15, r1
    1698:	09 f4       	brne	.+2      	; 0x169c <conv_flt+0x176>
    169a:	85 c0       	rjmp	.+266    	; 0x17a6 <conv_flt+0x280>
    169c:	c3 01       	movw	r24, r6
    169e:	0e 94 a6 0f 	call	0x1f4c	; 0x1f4c <fgetc>
    16a2:	ec 01       	movw	r28, r24
    16a4:	97 fd       	sbrc	r25, 7
    16a6:	7f c0       	rjmp	.+254    	; 0x17a6 <conv_flt+0x280>
    16a8:	8b 32       	cpi	r24, 0x2B	; 43
    16aa:	21 f0       	breq	.+8      	; 0x16b4 <conv_flt+0x18e>
    16ac:	8d 32       	cpi	r24, 0x2D	; 45
    16ae:	69 f4       	brne	.+26     	; 0x16ca <conv_flt+0x1a4>
    16b0:	f0 e1       	ldi	r31, 0x10	; 16
    16b2:	5f 2a       	or	r5, r31
    16b4:	08 94       	sec
    16b6:	e1 08       	sbc	r14, r1
    16b8:	f1 08       	sbc	r15, r1
    16ba:	e1 14       	cp	r14, r1
    16bc:	f1 04       	cpc	r15, r1
    16be:	09 f4       	brne	.+2      	; 0x16c2 <conv_flt+0x19c>
    16c0:	72 c0       	rjmp	.+228    	; 0x17a6 <conv_flt+0x280>
    16c2:	c3 01       	movw	r24, r6
    16c4:	0e 94 a6 0f 	call	0x1f4c	; 0x1f4c <fgetc>
    16c8:	ec 01       	movw	r28, r24
    16ca:	ce 01       	movw	r24, r28
    16cc:	c0 97       	sbiw	r24, 0x30	; 48
    16ce:	0a 97       	sbiw	r24, 0x0a	; 10
    16d0:	08 f0       	brcs	.+2      	; 0x16d4 <conv_flt+0x1ae>
    16d2:	69 c0       	rjmp	.+210    	; 0x17a6 <conv_flt+0x280>
    16d4:	00 e0       	ldi	r16, 0x00	; 0
    16d6:	10 e0       	ldi	r17, 0x00	; 0
    16d8:	b8 01       	movw	r22, r16
    16da:	88 27       	eor	r24, r24
    16dc:	77 fd       	sbrc	r23, 7
    16de:	80 95       	com	r24
    16e0:	98 2f       	mov	r25, r24
    16e2:	ae 01       	movw	r20, r28
    16e4:	40 53       	subi	r20, 0x30	; 48
    16e6:	24 2f       	mov	r18, r20
    16e8:	40 e2       	ldi	r20, 0x20	; 32
    16ea:	0e 94 0c 09 	call	0x1218	; 0x1218 <mulacc>
    16ee:	8b 01       	movw	r16, r22
    16f0:	08 94       	sec
    16f2:	e1 08       	sbc	r14, r1
    16f4:	f1 08       	sbc	r15, r1
    16f6:	e1 14       	cp	r14, r1
    16f8:	f1 04       	cpc	r15, r1
    16fa:	39 f0       	breq	.+14     	; 0x170a <conv_flt+0x1e4>
    16fc:	c3 01       	movw	r24, r6
    16fe:	0e 94 a6 0f 	call	0x1f4c	; 0x1f4c <fgetc>
    1702:	ec 01       	movw	r28, r24
    1704:	c0 97       	sbiw	r24, 0x30	; 48
    1706:	0a 97       	sbiw	r24, 0x0a	; 10
    1708:	38 f3       	brcs	.-50     	; 0x16d8 <conv_flt+0x1b2>
    170a:	b8 01       	movw	r22, r16
    170c:	54 fe       	sbrs	r5, 4
    170e:	03 c0       	rjmp	.+6      	; 0x1716 <conv_flt+0x1f0>
    1710:	70 95       	com	r23
    1712:	61 95       	neg	r22
    1714:	7f 4f       	sbci	r23, 0xFF	; 255
    1716:	c6 0e       	add	r12, r22
    1718:	d7 1e       	adc	r13, r23
    171a:	ef 28       	or	r14, r15
    171c:	31 f0       	breq	.+12     	; 0x172a <conv_flt+0x204>
    171e:	d7 fd       	sbrc	r29, 7
    1720:	04 c0       	rjmp	.+8      	; 0x172a <conv_flt+0x204>
    1722:	ce 01       	movw	r24, r28
    1724:	b3 01       	movw	r22, r6
    1726:	0e 94 38 10 	call	0x2070	; 0x2070 <ungetc>
    172a:	c5 01       	movw	r24, r10
    172c:	b4 01       	movw	r22, r8
    172e:	0e 94 11 0d 	call	0x1a22	; 0x1a22 <__floatunsisf>
    1732:	d7 fe       	sbrs	r13, 7
    1734:	0d c0       	rjmp	.+26     	; 0x1750 <conv_flt+0x22a>
    1736:	ad e8       	ldi	r26, 0x8D	; 141
    1738:	ea 2e       	mov	r14, r26
    173a:	a0 e0       	ldi	r26, 0x00	; 0
    173c:	fa 2e       	mov	r15, r26
    173e:	d0 94       	com	r13
    1740:	c1 94       	neg	r12
    1742:	d1 08       	sbc	r13, r1
    1744:	d3 94       	inc	r13
    1746:	c0 e2       	ldi	r28, 0x20	; 32
    1748:	d0 e0       	ldi	r29, 0x00	; 0
    174a:	00 e0       	ldi	r16, 0x00	; 0
    174c:	10 e0       	ldi	r17, 0x00	; 0
    174e:	0e c0       	rjmp	.+28     	; 0x176c <conv_flt+0x246>
    1750:	f5 ea       	ldi	r31, 0xA5	; 165
    1752:	ef 2e       	mov	r14, r31
    1754:	f0 e0       	ldi	r31, 0x00	; 0
    1756:	ff 2e       	mov	r15, r31
    1758:	f6 cf       	rjmp	.-20     	; 0x1746 <conv_flt+0x220>
    175a:	f7 01       	movw	r30, r14
    175c:	25 91       	lpm	r18, Z+
    175e:	35 91       	lpm	r19, Z+
    1760:	45 91       	lpm	r20, Z+
    1762:	54 91       	lpm	r21, Z+
    1764:	0e 94 4e 0d 	call	0x1a9c	; 0x1a9c <__mulsf3>
    1768:	cc 1a       	sub	r12, r28
    176a:	dd 0a       	sbc	r13, r29
    176c:	cc 16       	cp	r12, r28
    176e:	dd 06       	cpc	r13, r29
    1770:	a0 f7       	brcc	.-24     	; 0x175a <conv_flt+0x234>
    1772:	d6 95       	lsr	r29
    1774:	c7 95       	ror	r28
    1776:	0f 5f       	subi	r16, 0xFF	; 255
    1778:	1f 4f       	sbci	r17, 0xFF	; 255
    177a:	06 30       	cpi	r16, 0x06	; 6
    177c:	11 05       	cpc	r17, r1
    177e:	29 f0       	breq	.+10     	; 0x178a <conv_flt+0x264>
    1780:	ec ef       	ldi	r30, 0xFC	; 252
    1782:	ff ef       	ldi	r31, 0xFF	; 255
    1784:	ee 0e       	add	r14, r30
    1786:	ff 1e       	adc	r15, r31
    1788:	f1 cf       	rjmp	.-30     	; 0x176c <conv_flt+0x246>
    178a:	dc 01       	movw	r26, r24
    178c:	cb 01       	movw	r24, r22
    178e:	57 fc       	sbrc	r5, 7
    1790:	b0 58       	subi	r27, 0x80	; 128
    1792:	21 14       	cp	r2, r1
    1794:	31 04       	cpc	r3, r1
    1796:	29 f0       	breq	.+10     	; 0x17a2 <conv_flt+0x27c>
    1798:	f1 01       	movw	r30, r2
    179a:	80 83       	st	Z, r24
    179c:	91 83       	std	Z+1, r25	; 0x01
    179e:	a2 83       	std	Z+2, r26	; 0x02
    17a0:	b3 83       	std	Z+3, r27	; 0x03
    17a2:	81 e0       	ldi	r24, 0x01	; 1
    17a4:	01 c0       	rjmp	.+2      	; 0x17a8 <conv_flt+0x282>
    17a6:	80 e0       	ldi	r24, 0x00	; 0
    17a8:	df 91       	pop	r29
    17aa:	cf 91       	pop	r28
    17ac:	1f 91       	pop	r17
    17ae:	0f 91       	pop	r16
    17b0:	ff 90       	pop	r15
    17b2:	ef 90       	pop	r14
    17b4:	df 90       	pop	r13
    17b6:	cf 90       	pop	r12
    17b8:	bf 90       	pop	r11
    17ba:	af 90       	pop	r10
    17bc:	9f 90       	pop	r9
    17be:	8f 90       	pop	r8
    17c0:	7f 90       	pop	r7
    17c2:	6f 90       	pop	r6
    17c4:	5f 90       	pop	r5
    17c6:	3f 90       	pop	r3
    17c8:	2f 90       	pop	r2
    17ca:	08 95       	ret

000017cc <vfscanf>:
    17cc:	a0 e0       	ldi	r26, 0x00	; 0
    17ce:	b0 e0       	ldi	r27, 0x00	; 0
    17d0:	ec ee       	ldi	r30, 0xEC	; 236
    17d2:	fb e0       	ldi	r31, 0x0B	; 11
    17d4:	0c 94 33 0e 	jmp	0x1c66	; 0x1c66 <__prologue_saves__+0x6>
    17d8:	4c 01       	movw	r8, r24
    17da:	5b 01       	movw	r10, r22
    17dc:	3a 01       	movw	r6, r20
    17de:	fc 01       	movw	r30, r24
    17e0:	17 82       	std	Z+7, r1	; 0x07
    17e2:	16 82       	std	Z+6, r1	; 0x06
    17e4:	55 24       	eor	r5, r5
    17e6:	04 c1       	rjmp	.+520    	; 0x19f0 <vfscanf+0x224>
    17e8:	81 2f       	mov	r24, r17
    17ea:	90 e0       	ldi	r25, 0x00	; 0
    17ec:	0e 94 75 0f 	call	0x1eea	; 0x1eea <isspace>
    17f0:	89 2b       	or	r24, r25
    17f2:	21 f0       	breq	.+8      	; 0x17fc <vfscanf+0x30>
    17f4:	c4 01       	movw	r24, r8
    17f6:	0e 94 3a 09 	call	0x1274	; 0x1274 <skip_spaces>
    17fa:	fa c0       	rjmp	.+500    	; 0x19f0 <vfscanf+0x224>
    17fc:	15 32       	cpi	r17, 0x25	; 37
    17fe:	49 f4       	brne	.+18     	; 0x1812 <vfscanf+0x46>
    1800:	f5 01       	movw	r30, r10
    1802:	f3 fc       	sbrc	r15, 3
    1804:	65 91       	lpm	r22, Z+
    1806:	f3 fe       	sbrs	r15, 3
    1808:	61 91       	ld	r22, Z+
    180a:	5f 01       	movw	r10, r30
    180c:	65 32       	cpi	r22, 0x25	; 37
    180e:	69 f4       	brne	.+26     	; 0x182a <vfscanf+0x5e>
    1810:	15 e2       	ldi	r17, 0x25	; 37
    1812:	c4 01       	movw	r24, r8
    1814:	0e 94 a6 0f 	call	0x1f4c	; 0x1f4c <fgetc>
    1818:	97 fd       	sbrc	r25, 7
    181a:	f6 c0       	rjmp	.+492    	; 0x1a08 <vfscanf+0x23c>
    181c:	18 17       	cp	r17, r24
    181e:	09 f4       	brne	.+2      	; 0x1822 <vfscanf+0x56>
    1820:	e7 c0       	rjmp	.+462    	; 0x19f0 <vfscanf+0x224>
    1822:	b4 01       	movw	r22, r8
    1824:	0e 94 38 10 	call	0x2070	; 0x2070 <ungetc>
    1828:	f4 c0       	rjmp	.+488    	; 0x1a12 <vfscanf+0x246>
    182a:	6a 32       	cpi	r22, 0x2A	; 42
    182c:	19 f0       	breq	.+6      	; 0x1834 <vfscanf+0x68>
    182e:	16 2f       	mov	r17, r22
    1830:	00 e0       	ldi	r16, 0x00	; 0
    1832:	06 c0       	rjmp	.+12     	; 0x1840 <vfscanf+0x74>
    1834:	f3 fc       	sbrc	r15, 3
    1836:	15 91       	lpm	r17, Z+
    1838:	f3 fe       	sbrs	r15, 3
    183a:	11 91       	ld	r17, Z+
    183c:	5f 01       	movw	r10, r30
    183e:	01 e0       	ldi	r16, 0x01	; 1
    1840:	cc 24       	eor	r12, r12
    1842:	dd 24       	eor	r13, r13
    1844:	0e c0       	rjmp	.+28     	; 0x1862 <vfscanf+0x96>
    1846:	02 60       	ori	r16, 0x02	; 2
    1848:	b6 01       	movw	r22, r12
    184a:	80 e0       	ldi	r24, 0x00	; 0
    184c:	90 e0       	ldi	r25, 0x00	; 0
    184e:	40 e2       	ldi	r20, 0x20	; 32
    1850:	0e 94 0c 09 	call	0x1218	; 0x1218 <mulacc>
    1854:	6b 01       	movw	r12, r22
    1856:	f5 01       	movw	r30, r10
    1858:	f3 fc       	sbrc	r15, 3
    185a:	15 91       	lpm	r17, Z+
    185c:	f3 fe       	sbrs	r15, 3
    185e:	11 91       	ld	r17, Z+
    1860:	5f 01       	movw	r10, r30
    1862:	21 2f       	mov	r18, r17
    1864:	20 53       	subi	r18, 0x30	; 48
    1866:	2a 30       	cpi	r18, 0x0A	; 10
    1868:	70 f3       	brcs	.-36     	; 0x1846 <vfscanf+0x7a>
    186a:	01 fd       	sbrc	r16, 1
    186c:	04 c0       	rjmp	.+8      	; 0x1876 <vfscanf+0xaa>
    186e:	cc 24       	eor	r12, r12
    1870:	ca 94       	dec	r12
    1872:	dc 2c       	mov	r13, r12
    1874:	04 c0       	rjmp	.+8      	; 0x187e <vfscanf+0xb2>
    1876:	c1 14       	cp	r12, r1
    1878:	d1 04       	cpc	r13, r1
    187a:	09 f4       	brne	.+2      	; 0x187e <vfscanf+0xb2>
    187c:	ca c0       	rjmp	.+404    	; 0x1a12 <vfscanf+0x246>
    187e:	18 36       	cpi	r17, 0x68	; 104
    1880:	21 f0       	breq	.+8      	; 0x188a <vfscanf+0xbe>
    1882:	1c 36       	cpi	r17, 0x6C	; 108
    1884:	99 f4       	brne	.+38     	; 0x18ac <vfscanf+0xe0>
    1886:	f5 01       	movw	r30, r10
    1888:	0b c0       	rjmp	.+22     	; 0x18a0 <vfscanf+0xd4>
    188a:	f5 01       	movw	r30, r10
    188c:	f3 fc       	sbrc	r15, 3
    188e:	65 91       	lpm	r22, Z+
    1890:	f3 fe       	sbrs	r15, 3
    1892:	61 91       	ld	r22, Z+
    1894:	68 36       	cpi	r22, 0x68	; 104
    1896:	19 f0       	breq	.+6      	; 0x189e <vfscanf+0xd2>
    1898:	5f 01       	movw	r10, r30
    189a:	16 2f       	mov	r17, r22
    189c:	07 c0       	rjmp	.+14     	; 0x18ac <vfscanf+0xe0>
    189e:	08 60       	ori	r16, 0x08	; 8
    18a0:	04 60       	ori	r16, 0x04	; 4
    18a2:	f3 fc       	sbrc	r15, 3
    18a4:	15 91       	lpm	r17, Z+
    18a6:	f3 fe       	sbrs	r15, 3
    18a8:	11 91       	ld	r17, Z+
    18aa:	5f 01       	movw	r10, r30
    18ac:	11 23       	and	r17, r17
    18ae:	09 f4       	brne	.+2      	; 0x18b2 <vfscanf+0xe6>
    18b0:	b0 c0       	rjmp	.+352    	; 0x1a12 <vfscanf+0x246>
    18b2:	8c e5       	ldi	r24, 0x5C	; 92
    18b4:	90 e0       	ldi	r25, 0x00	; 0
    18b6:	61 2f       	mov	r22, r17
    18b8:	70 e0       	ldi	r23, 0x00	; 0
    18ba:	0e 94 85 0f 	call	0x1f0a	; 0x1f0a <strchr_P>
    18be:	89 2b       	or	r24, r25
    18c0:	09 f4       	brne	.+2      	; 0x18c4 <vfscanf+0xf8>
    18c2:	a7 c0       	rjmp	.+334    	; 0x1a12 <vfscanf+0x246>
    18c4:	80 2f       	mov	r24, r16
    18c6:	00 ff       	sbrs	r16, 0
    18c8:	03 c0       	rjmp	.+6      	; 0x18d0 <vfscanf+0x104>
    18ca:	ee 24       	eor	r14, r14
    18cc:	ff 24       	eor	r15, r15
    18ce:	07 c0       	rjmp	.+14     	; 0x18de <vfscanf+0x112>
    18d0:	f3 01       	movw	r30, r6
    18d2:	e0 80       	ld	r14, Z
    18d4:	f1 80       	ldd	r15, Z+1	; 0x01
    18d6:	22 e0       	ldi	r18, 0x02	; 2
    18d8:	30 e0       	ldi	r19, 0x00	; 0
    18da:	62 0e       	add	r6, r18
    18dc:	73 1e       	adc	r7, r19
    18de:	1e 36       	cpi	r17, 0x6E	; 110
    18e0:	51 f4       	brne	.+20     	; 0x18f6 <vfscanf+0x12a>
    18e2:	f4 01       	movw	r30, r8
    18e4:	46 81       	ldd	r20, Z+6	; 0x06
    18e6:	57 81       	ldd	r21, Z+7	; 0x07
    18e8:	60 e0       	ldi	r22, 0x00	; 0
    18ea:	70 e0       	ldi	r23, 0x00	; 0
    18ec:	c7 01       	movw	r24, r14
    18ee:	20 2f       	mov	r18, r16
    18f0:	0e 94 00 09 	call	0x1200	; 0x1200 <putval>
    18f4:	7d c0       	rjmp	.+250    	; 0x19f0 <vfscanf+0x224>
    18f6:	13 36       	cpi	r17, 0x63	; 99
    18f8:	b9 f4       	brne	.+46     	; 0x1928 <vfscanf+0x15c>
    18fa:	81 fd       	sbrc	r24, 1
    18fc:	03 c0       	rjmp	.+6      	; 0x1904 <vfscanf+0x138>
    18fe:	81 e0       	ldi	r24, 0x01	; 1
    1900:	c8 2e       	mov	r12, r24
    1902:	d1 2c       	mov	r13, r1
    1904:	c4 01       	movw	r24, r8
    1906:	0e 94 a6 0f 	call	0x1f4c	; 0x1f4c <fgetc>
    190a:	97 fd       	sbrc	r25, 7
    190c:	7d c0       	rjmp	.+250    	; 0x1a08 <vfscanf+0x23c>
    190e:	e1 14       	cp	r14, r1
    1910:	f1 04       	cpc	r15, r1
    1912:	19 f0       	breq	.+6      	; 0x191a <vfscanf+0x14e>
    1914:	f7 01       	movw	r30, r14
    1916:	81 93       	st	Z+, r24
    1918:	7f 01       	movw	r14, r30
    191a:	08 94       	sec
    191c:	c1 08       	sbc	r12, r1
    191e:	d1 08       	sbc	r13, r1
    1920:	c1 14       	cp	r12, r1
    1922:	d1 04       	cpc	r13, r1
    1924:	79 f7       	brne	.-34     	; 0x1904 <vfscanf+0x138>
    1926:	62 c0       	rjmp	.+196    	; 0x19ec <vfscanf+0x220>
    1928:	1b 35       	cpi	r17, 0x5B	; 91
    192a:	59 f4       	brne	.+22     	; 0x1942 <vfscanf+0x176>
    192c:	c4 01       	movw	r24, r8
    192e:	b6 01       	movw	r22, r12
    1930:	a7 01       	movw	r20, r14
    1932:	95 01       	movw	r18, r10
    1934:	0e 94 e7 09 	call	0x13ce	; 0x13ce <conv_brk>
    1938:	5c 01       	movw	r10, r24
    193a:	00 97       	sbiw	r24, 0x00	; 0
    193c:	09 f0       	breq	.+2      	; 0x1940 <vfscanf+0x174>
    193e:	56 c0       	rjmp	.+172    	; 0x19ec <vfscanf+0x220>
    1940:	50 c0       	rjmp	.+160    	; 0x19e2 <vfscanf+0x216>
    1942:	c4 01       	movw	r24, r8
    1944:	0e 94 3a 09 	call	0x1274	; 0x1274 <skip_spaces>
    1948:	97 fd       	sbrc	r25, 7
    194a:	5e c0       	rjmp	.+188    	; 0x1a08 <vfscanf+0x23c>
    194c:	1f 36       	cpi	r17, 0x6F	; 111
    194e:	d1 f1       	breq	.+116    	; 0x19c4 <vfscanf+0x1f8>
    1950:	10 37       	cpi	r17, 0x70	; 112
    1952:	38 f4       	brcc	.+14     	; 0x1962 <vfscanf+0x196>
    1954:	14 36       	cpi	r17, 0x64	; 100
    1956:	a1 f1       	breq	.+104    	; 0x19c0 <vfscanf+0x1f4>
    1958:	19 36       	cpi	r17, 0x69	; 105
    195a:	a9 f1       	breq	.+106    	; 0x19c6 <vfscanf+0x1fa>
    195c:	18 35       	cpi	r17, 0x58	; 88
    195e:	d1 f5       	brne	.+116    	; 0x19d4 <vfscanf+0x208>
    1960:	2d c0       	rjmp	.+90     	; 0x19bc <vfscanf+0x1f0>
    1962:	13 37       	cpi	r17, 0x73	; 115
    1964:	51 f0       	breq	.+20     	; 0x197a <vfscanf+0x1ae>
    1966:	14 37       	cpi	r17, 0x74	; 116
    1968:	18 f4       	brcc	.+6      	; 0x1970 <vfscanf+0x1a4>
    196a:	10 37       	cpi	r17, 0x70	; 112
    196c:	99 f5       	brne	.+102    	; 0x19d4 <vfscanf+0x208>
    196e:	26 c0       	rjmp	.+76     	; 0x19bc <vfscanf+0x1f0>
    1970:	15 37       	cpi	r17, 0x75	; 117
    1972:	31 f1       	breq	.+76     	; 0x19c0 <vfscanf+0x1f4>
    1974:	18 37       	cpi	r17, 0x78	; 120
    1976:	71 f5       	brne	.+92     	; 0x19d4 <vfscanf+0x208>
    1978:	21 c0       	rjmp	.+66     	; 0x19bc <vfscanf+0x1f0>
    197a:	c4 01       	movw	r24, r8
    197c:	0e 94 a6 0f 	call	0x1f4c	; 0x1f4c <fgetc>
    1980:	ec 01       	movw	r28, r24
    1982:	97 fd       	sbrc	r25, 7
    1984:	15 c0       	rjmp	.+42     	; 0x19b0 <vfscanf+0x1e4>
    1986:	0e 94 75 0f 	call	0x1eea	; 0x1eea <isspace>
    198a:	89 2b       	or	r24, r25
    198c:	29 f0       	breq	.+10     	; 0x1998 <vfscanf+0x1cc>
    198e:	ce 01       	movw	r24, r28
    1990:	b4 01       	movw	r22, r8
    1992:	0e 94 38 10 	call	0x2070	; 0x2070 <ungetc>
    1996:	0c c0       	rjmp	.+24     	; 0x19b0 <vfscanf+0x1e4>
    1998:	e1 14       	cp	r14, r1
    199a:	f1 04       	cpc	r15, r1
    199c:	19 f0       	breq	.+6      	; 0x19a4 <vfscanf+0x1d8>
    199e:	f7 01       	movw	r30, r14
    19a0:	c1 93       	st	Z+, r28
    19a2:	7f 01       	movw	r14, r30
    19a4:	08 94       	sec
    19a6:	c1 08       	sbc	r12, r1
    19a8:	d1 08       	sbc	r13, r1
    19aa:	c1 14       	cp	r12, r1
    19ac:	d1 04       	cpc	r13, r1
    19ae:	29 f7       	brne	.-54     	; 0x197a <vfscanf+0x1ae>
    19b0:	e1 14       	cp	r14, r1
    19b2:	f1 04       	cpc	r15, r1
    19b4:	d9 f0       	breq	.+54     	; 0x19ec <vfscanf+0x220>
    19b6:	f7 01       	movw	r30, r14
    19b8:	10 82       	st	Z, r1
    19ba:	18 c0       	rjmp	.+48     	; 0x19ec <vfscanf+0x220>
    19bc:	00 64       	ori	r16, 0x40	; 64
    19be:	03 c0       	rjmp	.+6      	; 0x19c6 <vfscanf+0x1fa>
    19c0:	00 62       	ori	r16, 0x20	; 32
    19c2:	01 c0       	rjmp	.+2      	; 0x19c6 <vfscanf+0x1fa>
    19c4:	00 61       	ori	r16, 0x10	; 16
    19c6:	c4 01       	movw	r24, r8
    19c8:	b6 01       	movw	r22, r12
    19ca:	a7 01       	movw	r20, r14
    19cc:	20 2f       	mov	r18, r16
    19ce:	0e 94 53 09 	call	0x12a6	; 0x12a6 <conv_int>
    19d2:	05 c0       	rjmp	.+10     	; 0x19de <vfscanf+0x212>
    19d4:	c4 01       	movw	r24, r8
    19d6:	b6 01       	movw	r22, r12
    19d8:	a7 01       	movw	r20, r14
    19da:	0e 94 93 0a 	call	0x1526	; 0x1526 <conv_flt>
    19de:	88 23       	and	r24, r24
    19e0:	29 f4       	brne	.+10     	; 0x19ec <vfscanf+0x220>
    19e2:	f4 01       	movw	r30, r8
    19e4:	83 81       	ldd	r24, Z+3	; 0x03
    19e6:	80 73       	andi	r24, 0x30	; 48
    19e8:	79 f4       	brne	.+30     	; 0x1a08 <vfscanf+0x23c>
    19ea:	13 c0       	rjmp	.+38     	; 0x1a12 <vfscanf+0x246>
    19ec:	00 ff       	sbrs	r16, 0
    19ee:	53 94       	inc	r5
    19f0:	f4 01       	movw	r30, r8
    19f2:	f3 80       	ldd	r15, Z+3	; 0x03
    19f4:	f5 01       	movw	r30, r10
    19f6:	f3 fc       	sbrc	r15, 3
    19f8:	15 91       	lpm	r17, Z+
    19fa:	f3 fe       	sbrs	r15, 3
    19fc:	11 91       	ld	r17, Z+
    19fe:	5f 01       	movw	r10, r30
    1a00:	11 23       	and	r17, r17
    1a02:	09 f0       	breq	.+2      	; 0x1a06 <vfscanf+0x23a>
    1a04:	f1 ce       	rjmp	.-542    	; 0x17e8 <vfscanf+0x1c>
    1a06:	05 c0       	rjmp	.+10     	; 0x1a12 <vfscanf+0x246>
    1a08:	55 20       	and	r5, r5
    1a0a:	19 f4       	brne	.+6      	; 0x1a12 <vfscanf+0x246>
    1a0c:	2f ef       	ldi	r18, 0xFF	; 255
    1a0e:	3f ef       	ldi	r19, 0xFF	; 255
    1a10:	02 c0       	rjmp	.+4      	; 0x1a16 <vfscanf+0x24a>
    1a12:	25 2d       	mov	r18, r5
    1a14:	30 e0       	ldi	r19, 0x00	; 0
    1a16:	c9 01       	movw	r24, r18
    1a18:	cd b7       	in	r28, 0x3d	; 61
    1a1a:	de b7       	in	r29, 0x3e	; 62
    1a1c:	ef e0       	ldi	r30, 0x0F	; 15
    1a1e:	0c 94 4f 0e 	jmp	0x1c9e	; 0x1c9e <__epilogue_restores__+0x6>

00001a22 <__floatunsisf>:
    1a22:	e8 94       	clt
    1a24:	09 c0       	rjmp	.+18     	; 0x1a38 <__floatsisf+0x12>

00001a26 <__floatsisf>:
    1a26:	97 fb       	bst	r25, 7
    1a28:	3e f4       	brtc	.+14     	; 0x1a38 <__floatsisf+0x12>
    1a2a:	90 95       	com	r25
    1a2c:	80 95       	com	r24
    1a2e:	70 95       	com	r23
    1a30:	61 95       	neg	r22
    1a32:	7f 4f       	sbci	r23, 0xFF	; 255
    1a34:	8f 4f       	sbci	r24, 0xFF	; 255
    1a36:	9f 4f       	sbci	r25, 0xFF	; 255
    1a38:	99 23       	and	r25, r25
    1a3a:	a9 f0       	breq	.+42     	; 0x1a66 <__floatsisf+0x40>
    1a3c:	f9 2f       	mov	r31, r25
    1a3e:	96 e9       	ldi	r25, 0x96	; 150
    1a40:	bb 27       	eor	r27, r27
    1a42:	93 95       	inc	r25
    1a44:	f6 95       	lsr	r31
    1a46:	87 95       	ror	r24
    1a48:	77 95       	ror	r23
    1a4a:	67 95       	ror	r22
    1a4c:	b7 95       	ror	r27
    1a4e:	f1 11       	cpse	r31, r1
    1a50:	f8 cf       	rjmp	.-16     	; 0x1a42 <__floatsisf+0x1c>
    1a52:	fa f4       	brpl	.+62     	; 0x1a92 <__floatsisf+0x6c>
    1a54:	bb 0f       	add	r27, r27
    1a56:	11 f4       	brne	.+4      	; 0x1a5c <__floatsisf+0x36>
    1a58:	60 ff       	sbrs	r22, 0
    1a5a:	1b c0       	rjmp	.+54     	; 0x1a92 <__floatsisf+0x6c>
    1a5c:	6f 5f       	subi	r22, 0xFF	; 255
    1a5e:	7f 4f       	sbci	r23, 0xFF	; 255
    1a60:	8f 4f       	sbci	r24, 0xFF	; 255
    1a62:	9f 4f       	sbci	r25, 0xFF	; 255
    1a64:	16 c0       	rjmp	.+44     	; 0x1a92 <__floatsisf+0x6c>
    1a66:	88 23       	and	r24, r24
    1a68:	11 f0       	breq	.+4      	; 0x1a6e <__floatsisf+0x48>
    1a6a:	96 e9       	ldi	r25, 0x96	; 150
    1a6c:	11 c0       	rjmp	.+34     	; 0x1a90 <__floatsisf+0x6a>
    1a6e:	77 23       	and	r23, r23
    1a70:	21 f0       	breq	.+8      	; 0x1a7a <__floatsisf+0x54>
    1a72:	9e e8       	ldi	r25, 0x8E	; 142
    1a74:	87 2f       	mov	r24, r23
    1a76:	76 2f       	mov	r23, r22
    1a78:	05 c0       	rjmp	.+10     	; 0x1a84 <__floatsisf+0x5e>
    1a7a:	66 23       	and	r22, r22
    1a7c:	71 f0       	breq	.+28     	; 0x1a9a <__floatsisf+0x74>
    1a7e:	96 e8       	ldi	r25, 0x86	; 134
    1a80:	86 2f       	mov	r24, r22
    1a82:	70 e0       	ldi	r23, 0x00	; 0
    1a84:	60 e0       	ldi	r22, 0x00	; 0
    1a86:	2a f0       	brmi	.+10     	; 0x1a92 <__floatsisf+0x6c>
    1a88:	9a 95       	dec	r25
    1a8a:	66 0f       	add	r22, r22
    1a8c:	77 1f       	adc	r23, r23
    1a8e:	88 1f       	adc	r24, r24
    1a90:	da f7       	brpl	.-10     	; 0x1a88 <__floatsisf+0x62>
    1a92:	88 0f       	add	r24, r24
    1a94:	96 95       	lsr	r25
    1a96:	87 95       	ror	r24
    1a98:	97 f9       	bld	r25, 7
    1a9a:	08 95       	ret

00001a9c <__mulsf3>:
    1a9c:	0b d0       	rcall	.+22     	; 0x1ab4 <__mulsf3x>
    1a9e:	78 c0       	rjmp	.+240    	; 0x1b90 <__fp_round>
    1aa0:	69 d0       	rcall	.+210    	; 0x1b74 <__fp_pscA>
    1aa2:	28 f0       	brcs	.+10     	; 0x1aae <__mulsf3+0x12>
    1aa4:	6e d0       	rcall	.+220    	; 0x1b82 <__fp_pscB>
    1aa6:	18 f0       	brcs	.+6      	; 0x1aae <__mulsf3+0x12>
    1aa8:	95 23       	and	r25, r21
    1aaa:	09 f0       	breq	.+2      	; 0x1aae <__mulsf3+0x12>
    1aac:	5a c0       	rjmp	.+180    	; 0x1b62 <__fp_inf>
    1aae:	5f c0       	rjmp	.+190    	; 0x1b6e <__fp_nan>
    1ab0:	11 24       	eor	r1, r1
    1ab2:	a2 c0       	rjmp	.+324    	; 0x1bf8 <__fp_szero>

00001ab4 <__mulsf3x>:
    1ab4:	7e d0       	rcall	.+252    	; 0x1bb2 <__fp_split3>
    1ab6:	a0 f3       	brcs	.-24     	; 0x1aa0 <__mulsf3+0x4>

00001ab8 <__mulsf3_pse>:
    1ab8:	95 9f       	mul	r25, r21
    1aba:	d1 f3       	breq	.-12     	; 0x1ab0 <__mulsf3+0x14>
    1abc:	95 0f       	add	r25, r21
    1abe:	50 e0       	ldi	r21, 0x00	; 0
    1ac0:	55 1f       	adc	r21, r21
    1ac2:	62 9f       	mul	r22, r18
    1ac4:	f0 01       	movw	r30, r0
    1ac6:	72 9f       	mul	r23, r18
    1ac8:	bb 27       	eor	r27, r27
    1aca:	f0 0d       	add	r31, r0
    1acc:	b1 1d       	adc	r27, r1
    1ace:	63 9f       	mul	r22, r19
    1ad0:	aa 27       	eor	r26, r26
    1ad2:	f0 0d       	add	r31, r0
    1ad4:	b1 1d       	adc	r27, r1
    1ad6:	aa 1f       	adc	r26, r26
    1ad8:	64 9f       	mul	r22, r20
    1ada:	66 27       	eor	r22, r22
    1adc:	b0 0d       	add	r27, r0
    1ade:	a1 1d       	adc	r26, r1
    1ae0:	66 1f       	adc	r22, r22
    1ae2:	82 9f       	mul	r24, r18
    1ae4:	22 27       	eor	r18, r18
    1ae6:	b0 0d       	add	r27, r0
    1ae8:	a1 1d       	adc	r26, r1
    1aea:	62 1f       	adc	r22, r18
    1aec:	73 9f       	mul	r23, r19
    1aee:	b0 0d       	add	r27, r0
    1af0:	a1 1d       	adc	r26, r1
    1af2:	62 1f       	adc	r22, r18
    1af4:	83 9f       	mul	r24, r19
    1af6:	a0 0d       	add	r26, r0
    1af8:	61 1d       	adc	r22, r1
    1afa:	22 1f       	adc	r18, r18
    1afc:	74 9f       	mul	r23, r20
    1afe:	33 27       	eor	r19, r19
    1b00:	a0 0d       	add	r26, r0
    1b02:	61 1d       	adc	r22, r1
    1b04:	23 1f       	adc	r18, r19
    1b06:	84 9f       	mul	r24, r20
    1b08:	60 0d       	add	r22, r0
    1b0a:	21 1d       	adc	r18, r1
    1b0c:	82 2f       	mov	r24, r18
    1b0e:	76 2f       	mov	r23, r22
    1b10:	6a 2f       	mov	r22, r26
    1b12:	11 24       	eor	r1, r1
    1b14:	9f 57       	subi	r25, 0x7F	; 127
    1b16:	50 40       	sbci	r21, 0x00	; 0
    1b18:	8a f0       	brmi	.+34     	; 0x1b3c <__mulsf3_pse+0x84>
    1b1a:	e1 f0       	breq	.+56     	; 0x1b54 <__mulsf3_pse+0x9c>
    1b1c:	88 23       	and	r24, r24
    1b1e:	4a f0       	brmi	.+18     	; 0x1b32 <__mulsf3_pse+0x7a>
    1b20:	ee 0f       	add	r30, r30
    1b22:	ff 1f       	adc	r31, r31
    1b24:	bb 1f       	adc	r27, r27
    1b26:	66 1f       	adc	r22, r22
    1b28:	77 1f       	adc	r23, r23
    1b2a:	88 1f       	adc	r24, r24
    1b2c:	91 50       	subi	r25, 0x01	; 1
    1b2e:	50 40       	sbci	r21, 0x00	; 0
    1b30:	a9 f7       	brne	.-22     	; 0x1b1c <__mulsf3_pse+0x64>
    1b32:	9e 3f       	cpi	r25, 0xFE	; 254
    1b34:	51 05       	cpc	r21, r1
    1b36:	70 f0       	brcs	.+28     	; 0x1b54 <__mulsf3_pse+0x9c>
    1b38:	14 c0       	rjmp	.+40     	; 0x1b62 <__fp_inf>
    1b3a:	5e c0       	rjmp	.+188    	; 0x1bf8 <__fp_szero>
    1b3c:	5f 3f       	cpi	r21, 0xFF	; 255
    1b3e:	ec f3       	brlt	.-6      	; 0x1b3a <__mulsf3_pse+0x82>
    1b40:	98 3e       	cpi	r25, 0xE8	; 232
    1b42:	dc f3       	brlt	.-10     	; 0x1b3a <__mulsf3_pse+0x82>
    1b44:	86 95       	lsr	r24
    1b46:	77 95       	ror	r23
    1b48:	67 95       	ror	r22
    1b4a:	b7 95       	ror	r27
    1b4c:	f7 95       	ror	r31
    1b4e:	e7 95       	ror	r30
    1b50:	9f 5f       	subi	r25, 0xFF	; 255
    1b52:	c1 f7       	brne	.-16     	; 0x1b44 <__mulsf3_pse+0x8c>
    1b54:	fe 2b       	or	r31, r30
    1b56:	88 0f       	add	r24, r24
    1b58:	91 1d       	adc	r25, r1
    1b5a:	96 95       	lsr	r25
    1b5c:	87 95       	ror	r24
    1b5e:	97 f9       	bld	r25, 7
    1b60:	08 95       	ret

00001b62 <__fp_inf>:
    1b62:	97 f9       	bld	r25, 7
    1b64:	9f 67       	ori	r25, 0x7F	; 127
    1b66:	80 e8       	ldi	r24, 0x80	; 128
    1b68:	70 e0       	ldi	r23, 0x00	; 0
    1b6a:	60 e0       	ldi	r22, 0x00	; 0
    1b6c:	08 95       	ret

00001b6e <__fp_nan>:
    1b6e:	9f ef       	ldi	r25, 0xFF	; 255
    1b70:	80 ec       	ldi	r24, 0xC0	; 192
    1b72:	08 95       	ret

00001b74 <__fp_pscA>:
    1b74:	00 24       	eor	r0, r0
    1b76:	0a 94       	dec	r0
    1b78:	16 16       	cp	r1, r22
    1b7a:	17 06       	cpc	r1, r23
    1b7c:	18 06       	cpc	r1, r24
    1b7e:	09 06       	cpc	r0, r25
    1b80:	08 95       	ret

00001b82 <__fp_pscB>:
    1b82:	00 24       	eor	r0, r0
    1b84:	0a 94       	dec	r0
    1b86:	12 16       	cp	r1, r18
    1b88:	13 06       	cpc	r1, r19
    1b8a:	14 06       	cpc	r1, r20
    1b8c:	05 06       	cpc	r0, r21
    1b8e:	08 95       	ret

00001b90 <__fp_round>:
    1b90:	09 2e       	mov	r0, r25
    1b92:	03 94       	inc	r0
    1b94:	00 0c       	add	r0, r0
    1b96:	11 f4       	brne	.+4      	; 0x1b9c <__fp_round+0xc>
    1b98:	88 23       	and	r24, r24
    1b9a:	52 f0       	brmi	.+20     	; 0x1bb0 <__fp_round+0x20>
    1b9c:	bb 0f       	add	r27, r27
    1b9e:	40 f4       	brcc	.+16     	; 0x1bb0 <__fp_round+0x20>
    1ba0:	bf 2b       	or	r27, r31
    1ba2:	11 f4       	brne	.+4      	; 0x1ba8 <__fp_round+0x18>
    1ba4:	60 ff       	sbrs	r22, 0
    1ba6:	04 c0       	rjmp	.+8      	; 0x1bb0 <__fp_round+0x20>
    1ba8:	6f 5f       	subi	r22, 0xFF	; 255
    1baa:	7f 4f       	sbci	r23, 0xFF	; 255
    1bac:	8f 4f       	sbci	r24, 0xFF	; 255
    1bae:	9f 4f       	sbci	r25, 0xFF	; 255
    1bb0:	08 95       	ret

00001bb2 <__fp_split3>:
    1bb2:	57 fd       	sbrc	r21, 7
    1bb4:	90 58       	subi	r25, 0x80	; 128
    1bb6:	44 0f       	add	r20, r20
    1bb8:	55 1f       	adc	r21, r21
    1bba:	59 f0       	breq	.+22     	; 0x1bd2 <__fp_splitA+0x10>
    1bbc:	5f 3f       	cpi	r21, 0xFF	; 255
    1bbe:	71 f0       	breq	.+28     	; 0x1bdc <__fp_splitA+0x1a>
    1bc0:	47 95       	ror	r20

00001bc2 <__fp_splitA>:
    1bc2:	88 0f       	add	r24, r24
    1bc4:	97 fb       	bst	r25, 7
    1bc6:	99 1f       	adc	r25, r25
    1bc8:	61 f0       	breq	.+24     	; 0x1be2 <__fp_splitA+0x20>
    1bca:	9f 3f       	cpi	r25, 0xFF	; 255
    1bcc:	79 f0       	breq	.+30     	; 0x1bec <__fp_splitA+0x2a>
    1bce:	87 95       	ror	r24
    1bd0:	08 95       	ret
    1bd2:	12 16       	cp	r1, r18
    1bd4:	13 06       	cpc	r1, r19
    1bd6:	14 06       	cpc	r1, r20
    1bd8:	55 1f       	adc	r21, r21
    1bda:	f2 cf       	rjmp	.-28     	; 0x1bc0 <__fp_split3+0xe>
    1bdc:	46 95       	lsr	r20
    1bde:	f1 df       	rcall	.-30     	; 0x1bc2 <__fp_splitA>
    1be0:	08 c0       	rjmp	.+16     	; 0x1bf2 <__fp_splitA+0x30>
    1be2:	16 16       	cp	r1, r22
    1be4:	17 06       	cpc	r1, r23
    1be6:	18 06       	cpc	r1, r24
    1be8:	99 1f       	adc	r25, r25
    1bea:	f1 cf       	rjmp	.-30     	; 0x1bce <__fp_splitA+0xc>
    1bec:	86 95       	lsr	r24
    1bee:	71 05       	cpc	r23, r1
    1bf0:	61 05       	cpc	r22, r1
    1bf2:	08 94       	sec
    1bf4:	08 95       	ret

00001bf6 <__fp_zero>:
    1bf6:	e8 94       	clt

00001bf8 <__fp_szero>:
    1bf8:	bb 27       	eor	r27, r27
    1bfa:	66 27       	eor	r22, r22
    1bfc:	77 27       	eor	r23, r23
    1bfe:	cb 01       	movw	r24, r22
    1c00:	97 f9       	bld	r25, 7
    1c02:	08 95       	ret

00001c04 <__divmodhi4>:
    1c04:	97 fb       	bst	r25, 7
    1c06:	09 2e       	mov	r0, r25
    1c08:	07 26       	eor	r0, r23
    1c0a:	0a d0       	rcall	.+20     	; 0x1c20 <__divmodhi4_neg1>
    1c0c:	77 fd       	sbrc	r23, 7
    1c0e:	04 d0       	rcall	.+8      	; 0x1c18 <__divmodhi4_neg2>
    1c10:	5e d0       	rcall	.+188    	; 0x1cce <__udivmodhi4>
    1c12:	06 d0       	rcall	.+12     	; 0x1c20 <__divmodhi4_neg1>
    1c14:	00 20       	and	r0, r0
    1c16:	1a f4       	brpl	.+6      	; 0x1c1e <__divmodhi4_exit>

00001c18 <__divmodhi4_neg2>:
    1c18:	70 95       	com	r23
    1c1a:	61 95       	neg	r22
    1c1c:	7f 4f       	sbci	r23, 0xFF	; 255

00001c1e <__divmodhi4_exit>:
    1c1e:	08 95       	ret

00001c20 <__divmodhi4_neg1>:
    1c20:	f6 f7       	brtc	.-4      	; 0x1c1e <__divmodhi4_exit>
    1c22:	90 95       	com	r25
    1c24:	81 95       	neg	r24
    1c26:	9f 4f       	sbci	r25, 0xFF	; 255
    1c28:	08 95       	ret

00001c2a <__divmodsi4>:
    1c2a:	97 fb       	bst	r25, 7
    1c2c:	09 2e       	mov	r0, r25
    1c2e:	05 26       	eor	r0, r21
    1c30:	0e d0       	rcall	.+28     	; 0x1c4e <__divmodsi4_neg1>
    1c32:	57 fd       	sbrc	r21, 7
    1c34:	04 d0       	rcall	.+8      	; 0x1c3e <__divmodsi4_neg2>
    1c36:	5f d0       	rcall	.+190    	; 0x1cf6 <__udivmodsi4>
    1c38:	0a d0       	rcall	.+20     	; 0x1c4e <__divmodsi4_neg1>
    1c3a:	00 1c       	adc	r0, r0
    1c3c:	38 f4       	brcc	.+14     	; 0x1c4c <__divmodsi4_exit>

00001c3e <__divmodsi4_neg2>:
    1c3e:	50 95       	com	r21
    1c40:	40 95       	com	r20
    1c42:	30 95       	com	r19
    1c44:	21 95       	neg	r18
    1c46:	3f 4f       	sbci	r19, 0xFF	; 255
    1c48:	4f 4f       	sbci	r20, 0xFF	; 255
    1c4a:	5f 4f       	sbci	r21, 0xFF	; 255

00001c4c <__divmodsi4_exit>:
    1c4c:	08 95       	ret

00001c4e <__divmodsi4_neg1>:
    1c4e:	f6 f7       	brtc	.-4      	; 0x1c4c <__divmodsi4_exit>
    1c50:	90 95       	com	r25
    1c52:	80 95       	com	r24
    1c54:	70 95       	com	r23
    1c56:	61 95       	neg	r22
    1c58:	7f 4f       	sbci	r23, 0xFF	; 255
    1c5a:	8f 4f       	sbci	r24, 0xFF	; 255
    1c5c:	9f 4f       	sbci	r25, 0xFF	; 255
    1c5e:	08 95       	ret

00001c60 <__prologue_saves__>:
    1c60:	2f 92       	push	r2
    1c62:	3f 92       	push	r3
    1c64:	4f 92       	push	r4
    1c66:	5f 92       	push	r5
    1c68:	6f 92       	push	r6
    1c6a:	7f 92       	push	r7
    1c6c:	8f 92       	push	r8
    1c6e:	9f 92       	push	r9
    1c70:	af 92       	push	r10
    1c72:	bf 92       	push	r11
    1c74:	cf 92       	push	r12
    1c76:	df 92       	push	r13
    1c78:	ef 92       	push	r14
    1c7a:	ff 92       	push	r15
    1c7c:	0f 93       	push	r16
    1c7e:	1f 93       	push	r17
    1c80:	cf 93       	push	r28
    1c82:	df 93       	push	r29
    1c84:	cd b7       	in	r28, 0x3d	; 61
    1c86:	de b7       	in	r29, 0x3e	; 62
    1c88:	ca 1b       	sub	r28, r26
    1c8a:	db 0b       	sbc	r29, r27
    1c8c:	0f b6       	in	r0, 0x3f	; 63
    1c8e:	f8 94       	cli
    1c90:	de bf       	out	0x3e, r29	; 62
    1c92:	0f be       	out	0x3f, r0	; 63
    1c94:	cd bf       	out	0x3d, r28	; 61
    1c96:	09 94       	ijmp

00001c98 <__epilogue_restores__>:
    1c98:	2a 88       	ldd	r2, Y+18	; 0x12
    1c9a:	39 88       	ldd	r3, Y+17	; 0x11
    1c9c:	48 88       	ldd	r4, Y+16	; 0x10
    1c9e:	5f 84       	ldd	r5, Y+15	; 0x0f
    1ca0:	6e 84       	ldd	r6, Y+14	; 0x0e
    1ca2:	7d 84       	ldd	r7, Y+13	; 0x0d
    1ca4:	8c 84       	ldd	r8, Y+12	; 0x0c
    1ca6:	9b 84       	ldd	r9, Y+11	; 0x0b
    1ca8:	aa 84       	ldd	r10, Y+10	; 0x0a
    1caa:	b9 84       	ldd	r11, Y+9	; 0x09
    1cac:	c8 84       	ldd	r12, Y+8	; 0x08
    1cae:	df 80       	ldd	r13, Y+7	; 0x07
    1cb0:	ee 80       	ldd	r14, Y+6	; 0x06
    1cb2:	fd 80       	ldd	r15, Y+5	; 0x05
    1cb4:	0c 81       	ldd	r16, Y+4	; 0x04
    1cb6:	1b 81       	ldd	r17, Y+3	; 0x03
    1cb8:	aa 81       	ldd	r26, Y+2	; 0x02
    1cba:	b9 81       	ldd	r27, Y+1	; 0x01
    1cbc:	ce 0f       	add	r28, r30
    1cbe:	d1 1d       	adc	r29, r1
    1cc0:	0f b6       	in	r0, 0x3f	; 63
    1cc2:	f8 94       	cli
    1cc4:	de bf       	out	0x3e, r29	; 62
    1cc6:	0f be       	out	0x3f, r0	; 63
    1cc8:	cd bf       	out	0x3d, r28	; 61
    1cca:	ed 01       	movw	r28, r26
    1ccc:	08 95       	ret

00001cce <__udivmodhi4>:
    1cce:	aa 1b       	sub	r26, r26
    1cd0:	bb 1b       	sub	r27, r27
    1cd2:	51 e1       	ldi	r21, 0x11	; 17
    1cd4:	07 c0       	rjmp	.+14     	; 0x1ce4 <__udivmodhi4_ep>

00001cd6 <__udivmodhi4_loop>:
    1cd6:	aa 1f       	adc	r26, r26
    1cd8:	bb 1f       	adc	r27, r27
    1cda:	a6 17       	cp	r26, r22
    1cdc:	b7 07       	cpc	r27, r23
    1cde:	10 f0       	brcs	.+4      	; 0x1ce4 <__udivmodhi4_ep>
    1ce0:	a6 1b       	sub	r26, r22
    1ce2:	b7 0b       	sbc	r27, r23

00001ce4 <__udivmodhi4_ep>:
    1ce4:	88 1f       	adc	r24, r24
    1ce6:	99 1f       	adc	r25, r25
    1ce8:	5a 95       	dec	r21
    1cea:	a9 f7       	brne	.-22     	; 0x1cd6 <__udivmodhi4_loop>
    1cec:	80 95       	com	r24
    1cee:	90 95       	com	r25
    1cf0:	bc 01       	movw	r22, r24
    1cf2:	cd 01       	movw	r24, r26
    1cf4:	08 95       	ret

00001cf6 <__udivmodsi4>:
    1cf6:	a1 e2       	ldi	r26, 0x21	; 33
    1cf8:	1a 2e       	mov	r1, r26
    1cfa:	aa 1b       	sub	r26, r26
    1cfc:	bb 1b       	sub	r27, r27
    1cfe:	fd 01       	movw	r30, r26
    1d00:	0d c0       	rjmp	.+26     	; 0x1d1c <__udivmodsi4_ep>

00001d02 <__udivmodsi4_loop>:
    1d02:	aa 1f       	adc	r26, r26
    1d04:	bb 1f       	adc	r27, r27
    1d06:	ee 1f       	adc	r30, r30
    1d08:	ff 1f       	adc	r31, r31
    1d0a:	a2 17       	cp	r26, r18
    1d0c:	b3 07       	cpc	r27, r19
    1d0e:	e4 07       	cpc	r30, r20
    1d10:	f5 07       	cpc	r31, r21
    1d12:	20 f0       	brcs	.+8      	; 0x1d1c <__udivmodsi4_ep>
    1d14:	a2 1b       	sub	r26, r18
    1d16:	b3 0b       	sbc	r27, r19
    1d18:	e4 0b       	sbc	r30, r20
    1d1a:	f5 0b       	sbc	r31, r21

00001d1c <__udivmodsi4_ep>:
    1d1c:	66 1f       	adc	r22, r22
    1d1e:	77 1f       	adc	r23, r23
    1d20:	88 1f       	adc	r24, r24
    1d22:	99 1f       	adc	r25, r25
    1d24:	1a 94       	dec	r1
    1d26:	69 f7       	brne	.-38     	; 0x1d02 <__udivmodsi4_loop>
    1d28:	60 95       	com	r22
    1d2a:	70 95       	com	r23
    1d2c:	80 95       	com	r24
    1d2e:	90 95       	com	r25
    1d30:	9b 01       	movw	r18, r22
    1d32:	ac 01       	movw	r20, r24
    1d34:	bd 01       	movw	r22, r26
    1d36:	cf 01       	movw	r24, r30
    1d38:	08 95       	ret

00001d3a <__ftoa_engine>:
    1d3a:	28 30       	cpi	r18, 0x08	; 8
    1d3c:	08 f0       	brcs	.+2      	; 0x1d40 <__ftoa_engine+0x6>
    1d3e:	27 e0       	ldi	r18, 0x07	; 7
    1d40:	33 27       	eor	r19, r19
    1d42:	da 01       	movw	r26, r20
    1d44:	99 0f       	add	r25, r25
    1d46:	31 1d       	adc	r19, r1
    1d48:	87 fd       	sbrc	r24, 7
    1d4a:	91 60       	ori	r25, 0x01	; 1
    1d4c:	00 96       	adiw	r24, 0x00	; 0
    1d4e:	61 05       	cpc	r22, r1
    1d50:	71 05       	cpc	r23, r1
    1d52:	39 f4       	brne	.+14     	; 0x1d62 <__ftoa_engine+0x28>
    1d54:	32 60       	ori	r19, 0x02	; 2
    1d56:	2e 5f       	subi	r18, 0xFE	; 254
    1d58:	3d 93       	st	X+, r19
    1d5a:	30 e3       	ldi	r19, 0x30	; 48
    1d5c:	2a 95       	dec	r18
    1d5e:	e1 f7       	brne	.-8      	; 0x1d58 <__ftoa_engine+0x1e>
    1d60:	08 95       	ret
    1d62:	9f 3f       	cpi	r25, 0xFF	; 255
    1d64:	30 f0       	brcs	.+12     	; 0x1d72 <__ftoa_engine+0x38>
    1d66:	80 38       	cpi	r24, 0x80	; 128
    1d68:	71 05       	cpc	r23, r1
    1d6a:	61 05       	cpc	r22, r1
    1d6c:	09 f0       	breq	.+2      	; 0x1d70 <__ftoa_engine+0x36>
    1d6e:	3c 5f       	subi	r19, 0xFC	; 252
    1d70:	3c 5f       	subi	r19, 0xFC	; 252
    1d72:	3d 93       	st	X+, r19
    1d74:	91 30       	cpi	r25, 0x01	; 1
    1d76:	08 f0       	brcs	.+2      	; 0x1d7a <__ftoa_engine+0x40>
    1d78:	80 68       	ori	r24, 0x80	; 128
    1d7a:	91 1d       	adc	r25, r1
    1d7c:	df 93       	push	r29
    1d7e:	cf 93       	push	r28
    1d80:	1f 93       	push	r17
    1d82:	0f 93       	push	r16
    1d84:	ff 92       	push	r15
    1d86:	ef 92       	push	r14
    1d88:	19 2f       	mov	r17, r25
    1d8a:	98 7f       	andi	r25, 0xF8	; 248
    1d8c:	96 95       	lsr	r25
    1d8e:	e9 2f       	mov	r30, r25
    1d90:	96 95       	lsr	r25
    1d92:	96 95       	lsr	r25
    1d94:	e9 0f       	add	r30, r25
    1d96:	ff 27       	eor	r31, r31
    1d98:	ed 5f       	subi	r30, 0xFD	; 253
    1d9a:	fe 4f       	sbci	r31, 0xFE	; 254
    1d9c:	99 27       	eor	r25, r25
    1d9e:	33 27       	eor	r19, r19
    1da0:	ee 24       	eor	r14, r14
    1da2:	ff 24       	eor	r15, r15
    1da4:	a7 01       	movw	r20, r14
    1da6:	e7 01       	movw	r28, r14
    1da8:	05 90       	lpm	r0, Z+
    1daa:	08 94       	sec
    1dac:	07 94       	ror	r0
    1dae:	28 f4       	brcc	.+10     	; 0x1dba <__ftoa_engine+0x80>
    1db0:	36 0f       	add	r19, r22
    1db2:	e7 1e       	adc	r14, r23
    1db4:	f8 1e       	adc	r15, r24
    1db6:	49 1f       	adc	r20, r25
    1db8:	51 1d       	adc	r21, r1
    1dba:	66 0f       	add	r22, r22
    1dbc:	77 1f       	adc	r23, r23
    1dbe:	88 1f       	adc	r24, r24
    1dc0:	99 1f       	adc	r25, r25
    1dc2:	06 94       	lsr	r0
    1dc4:	a1 f7       	brne	.-24     	; 0x1dae <__ftoa_engine+0x74>
    1dc6:	05 90       	lpm	r0, Z+
    1dc8:	07 94       	ror	r0
    1dca:	28 f4       	brcc	.+10     	; 0x1dd6 <__ftoa_engine+0x9c>
    1dcc:	e7 0e       	add	r14, r23
    1dce:	f8 1e       	adc	r15, r24
    1dd0:	49 1f       	adc	r20, r25
    1dd2:	56 1f       	adc	r21, r22
    1dd4:	c1 1d       	adc	r28, r1
    1dd6:	77 0f       	add	r23, r23
    1dd8:	88 1f       	adc	r24, r24
    1dda:	99 1f       	adc	r25, r25
    1ddc:	66 1f       	adc	r22, r22
    1dde:	06 94       	lsr	r0
    1de0:	a1 f7       	brne	.-24     	; 0x1dca <__ftoa_engine+0x90>
    1de2:	05 90       	lpm	r0, Z+
    1de4:	07 94       	ror	r0
    1de6:	28 f4       	brcc	.+10     	; 0x1df2 <__ftoa_engine+0xb8>
    1de8:	f8 0e       	add	r15, r24
    1dea:	49 1f       	adc	r20, r25
    1dec:	56 1f       	adc	r21, r22
    1dee:	c7 1f       	adc	r28, r23
    1df0:	d1 1d       	adc	r29, r1
    1df2:	88 0f       	add	r24, r24
    1df4:	99 1f       	adc	r25, r25
    1df6:	66 1f       	adc	r22, r22
    1df8:	77 1f       	adc	r23, r23
    1dfa:	06 94       	lsr	r0
    1dfc:	a1 f7       	brne	.-24     	; 0x1de6 <__ftoa_engine+0xac>
    1dfe:	05 90       	lpm	r0, Z+
    1e00:	07 94       	ror	r0
    1e02:	20 f4       	brcc	.+8      	; 0x1e0c <__ftoa_engine+0xd2>
    1e04:	49 0f       	add	r20, r25
    1e06:	56 1f       	adc	r21, r22
    1e08:	c7 1f       	adc	r28, r23
    1e0a:	d8 1f       	adc	r29, r24
    1e0c:	99 0f       	add	r25, r25
    1e0e:	66 1f       	adc	r22, r22
    1e10:	77 1f       	adc	r23, r23
    1e12:	88 1f       	adc	r24, r24
    1e14:	06 94       	lsr	r0
    1e16:	a9 f7       	brne	.-22     	; 0x1e02 <__ftoa_engine+0xc8>
    1e18:	84 91       	lpm	r24, Z+
    1e1a:	10 95       	com	r17
    1e1c:	17 70       	andi	r17, 0x07	; 7
    1e1e:	41 f0       	breq	.+16     	; 0x1e30 <__ftoa_engine+0xf6>
    1e20:	d6 95       	lsr	r29
    1e22:	c7 95       	ror	r28
    1e24:	57 95       	ror	r21
    1e26:	47 95       	ror	r20
    1e28:	f7 94       	ror	r15
    1e2a:	e7 94       	ror	r14
    1e2c:	1a 95       	dec	r17
    1e2e:	c1 f7       	brne	.-16     	; 0x1e20 <__ftoa_engine+0xe6>
    1e30:	e9 ea       	ldi	r30, 0xA9	; 169
    1e32:	f0 e0       	ldi	r31, 0x00	; 0
    1e34:	68 94       	set
    1e36:	15 90       	lpm	r1, Z+
    1e38:	15 91       	lpm	r17, Z+
    1e3a:	35 91       	lpm	r19, Z+
    1e3c:	65 91       	lpm	r22, Z+
    1e3e:	95 91       	lpm	r25, Z+
    1e40:	05 90       	lpm	r0, Z+
    1e42:	7f e2       	ldi	r23, 0x2F	; 47
    1e44:	73 95       	inc	r23
    1e46:	e1 18       	sub	r14, r1
    1e48:	f1 0a       	sbc	r15, r17
    1e4a:	43 0b       	sbc	r20, r19
    1e4c:	56 0b       	sbc	r21, r22
    1e4e:	c9 0b       	sbc	r28, r25
    1e50:	d0 09       	sbc	r29, r0
    1e52:	c0 f7       	brcc	.-16     	; 0x1e44 <__ftoa_engine+0x10a>
    1e54:	e1 0c       	add	r14, r1
    1e56:	f1 1e       	adc	r15, r17
    1e58:	43 1f       	adc	r20, r19
    1e5a:	56 1f       	adc	r21, r22
    1e5c:	c9 1f       	adc	r28, r25
    1e5e:	d0 1d       	adc	r29, r0
    1e60:	7e f4       	brtc	.+30     	; 0x1e80 <__ftoa_engine+0x146>
    1e62:	70 33       	cpi	r23, 0x30	; 48
    1e64:	11 f4       	brne	.+4      	; 0x1e6a <__ftoa_engine+0x130>
    1e66:	8a 95       	dec	r24
    1e68:	e6 cf       	rjmp	.-52     	; 0x1e36 <__ftoa_engine+0xfc>
    1e6a:	e8 94       	clt
    1e6c:	01 50       	subi	r16, 0x01	; 1
    1e6e:	30 f0       	brcs	.+12     	; 0x1e7c <__ftoa_engine+0x142>
    1e70:	08 0f       	add	r16, r24
    1e72:	0a f4       	brpl	.+2      	; 0x1e76 <__ftoa_engine+0x13c>
    1e74:	00 27       	eor	r16, r16
    1e76:	02 17       	cp	r16, r18
    1e78:	08 f4       	brcc	.+2      	; 0x1e7c <__ftoa_engine+0x142>
    1e7a:	20 2f       	mov	r18, r16
    1e7c:	23 95       	inc	r18
    1e7e:	02 2f       	mov	r16, r18
    1e80:	7a 33       	cpi	r23, 0x3A	; 58
    1e82:	28 f0       	brcs	.+10     	; 0x1e8e <__ftoa_engine+0x154>
    1e84:	79 e3       	ldi	r23, 0x39	; 57
    1e86:	7d 93       	st	X+, r23
    1e88:	2a 95       	dec	r18
    1e8a:	e9 f7       	brne	.-6      	; 0x1e86 <__ftoa_engine+0x14c>
    1e8c:	10 c0       	rjmp	.+32     	; 0x1eae <__ftoa_engine+0x174>
    1e8e:	7d 93       	st	X+, r23
    1e90:	2a 95       	dec	r18
    1e92:	89 f6       	brne	.-94     	; 0x1e36 <__ftoa_engine+0xfc>
    1e94:	06 94       	lsr	r0
    1e96:	97 95       	ror	r25
    1e98:	67 95       	ror	r22
    1e9a:	37 95       	ror	r19
    1e9c:	17 95       	ror	r17
    1e9e:	17 94       	ror	r1
    1ea0:	e1 18       	sub	r14, r1
    1ea2:	f1 0a       	sbc	r15, r17
    1ea4:	43 0b       	sbc	r20, r19
    1ea6:	56 0b       	sbc	r21, r22
    1ea8:	c9 0b       	sbc	r28, r25
    1eaa:	d0 09       	sbc	r29, r0
    1eac:	98 f0       	brcs	.+38     	; 0x1ed4 <__ftoa_engine+0x19a>
    1eae:	23 95       	inc	r18
    1eb0:	7e 91       	ld	r23, -X
    1eb2:	73 95       	inc	r23
    1eb4:	7a 33       	cpi	r23, 0x3A	; 58
    1eb6:	08 f0       	brcs	.+2      	; 0x1eba <__ftoa_engine+0x180>
    1eb8:	70 e3       	ldi	r23, 0x30	; 48
    1eba:	7c 93       	st	X, r23
    1ebc:	20 13       	cpse	r18, r16
    1ebe:	b8 f7       	brcc	.-18     	; 0x1eae <__ftoa_engine+0x174>
    1ec0:	7e 91       	ld	r23, -X
    1ec2:	70 61       	ori	r23, 0x10	; 16
    1ec4:	7d 93       	st	X+, r23
    1ec6:	30 f0       	brcs	.+12     	; 0x1ed4 <__ftoa_engine+0x19a>
    1ec8:	83 95       	inc	r24
    1eca:	71 e3       	ldi	r23, 0x31	; 49
    1ecc:	7d 93       	st	X+, r23
    1ece:	70 e3       	ldi	r23, 0x30	; 48
    1ed0:	2a 95       	dec	r18
    1ed2:	e1 f7       	brne	.-8      	; 0x1ecc <__ftoa_engine+0x192>
    1ed4:	11 24       	eor	r1, r1
    1ed6:	ef 90       	pop	r14
    1ed8:	ff 90       	pop	r15
    1eda:	0f 91       	pop	r16
    1edc:	1f 91       	pop	r17
    1ede:	cf 91       	pop	r28
    1ee0:	df 91       	pop	r29
    1ee2:	99 27       	eor	r25, r25
    1ee4:	87 fd       	sbrc	r24, 7
    1ee6:	90 95       	com	r25
    1ee8:	08 95       	ret

00001eea <isspace>:
    1eea:	91 11       	cpse	r25, r1
    1eec:	39 c1       	rjmp	.+626    	; 0x2160 <__ctype_isfalse>
    1eee:	80 32       	cpi	r24, 0x20	; 32
    1ef0:	19 f0       	breq	.+6      	; 0x1ef8 <isspace+0xe>
    1ef2:	89 50       	subi	r24, 0x09	; 9
    1ef4:	85 50       	subi	r24, 0x05	; 5
    1ef6:	d0 f7       	brcc	.-12     	; 0x1eec <isspace+0x2>
    1ef8:	08 95       	ret

00001efa <tolower>:
    1efa:	91 11       	cpse	r25, r1
    1efc:	08 95       	ret
    1efe:	81 54       	subi	r24, 0x41	; 65
    1f00:	8a 51       	subi	r24, 0x1A	; 26
    1f02:	08 f4       	brcc	.+2      	; 0x1f06 <tolower+0xc>
    1f04:	80 5e       	subi	r24, 0xE0	; 224
    1f06:	85 5a       	subi	r24, 0xA5	; 165
    1f08:	08 95       	ret

00001f0a <strchr_P>:
    1f0a:	fc 01       	movw	r30, r24
    1f0c:	05 90       	lpm	r0, Z+
    1f0e:	06 16       	cp	r0, r22
    1f10:	21 f0       	breq	.+8      	; 0x1f1a <strchr_P+0x10>
    1f12:	00 20       	and	r0, r0
    1f14:	d9 f7       	brne	.-10     	; 0x1f0c <strchr_P+0x2>
    1f16:	c0 01       	movw	r24, r0
    1f18:	08 95       	ret
    1f1a:	31 97       	sbiw	r30, 0x01	; 1
    1f1c:	cf 01       	movw	r24, r30
    1f1e:	08 95       	ret

00001f20 <strnlen_P>:
    1f20:	fc 01       	movw	r30, r24
    1f22:	05 90       	lpm	r0, Z+
    1f24:	61 50       	subi	r22, 0x01	; 1
    1f26:	70 40       	sbci	r23, 0x00	; 0
    1f28:	01 10       	cpse	r0, r1
    1f2a:	d8 f7       	brcc	.-10     	; 0x1f22 <strnlen_P+0x2>
    1f2c:	80 95       	com	r24
    1f2e:	90 95       	com	r25
    1f30:	8e 0f       	add	r24, r30
    1f32:	9f 1f       	adc	r25, r31
    1f34:	08 95       	ret

00001f36 <strnlen>:
    1f36:	fc 01       	movw	r30, r24
    1f38:	61 50       	subi	r22, 0x01	; 1
    1f3a:	70 40       	sbci	r23, 0x00	; 0
    1f3c:	01 90       	ld	r0, Z+
    1f3e:	01 10       	cpse	r0, r1
    1f40:	d8 f7       	brcc	.-10     	; 0x1f38 <strnlen+0x2>
    1f42:	80 95       	com	r24
    1f44:	90 95       	com	r25
    1f46:	8e 0f       	add	r24, r30
    1f48:	9f 1f       	adc	r25, r31
    1f4a:	08 95       	ret

00001f4c <fgetc>:
    1f4c:	cf 93       	push	r28
    1f4e:	df 93       	push	r29
    1f50:	ec 01       	movw	r28, r24
    1f52:	4b 81       	ldd	r20, Y+3	; 0x03
    1f54:	40 ff       	sbrs	r20, 0
    1f56:	1a c0       	rjmp	.+52     	; 0x1f8c <fgetc+0x40>
    1f58:	46 ff       	sbrs	r20, 6
    1f5a:	0a c0       	rjmp	.+20     	; 0x1f70 <fgetc+0x24>
    1f5c:	4f 7b       	andi	r20, 0xBF	; 191
    1f5e:	4b 83       	std	Y+3, r20	; 0x03
    1f60:	8e 81       	ldd	r24, Y+6	; 0x06
    1f62:	9f 81       	ldd	r25, Y+7	; 0x07
    1f64:	01 96       	adiw	r24, 0x01	; 1
    1f66:	9f 83       	std	Y+7, r25	; 0x07
    1f68:	8e 83       	std	Y+6, r24	; 0x06
    1f6a:	8a 81       	ldd	r24, Y+2	; 0x02
    1f6c:	28 2f       	mov	r18, r24
    1f6e:	2b c0       	rjmp	.+86     	; 0x1fc6 <fgetc+0x7a>
    1f70:	42 ff       	sbrs	r20, 2
    1f72:	13 c0       	rjmp	.+38     	; 0x1f9a <fgetc+0x4e>
    1f74:	e8 81       	ld	r30, Y
    1f76:	f9 81       	ldd	r31, Y+1	; 0x01
    1f78:	80 81       	ld	r24, Z
    1f7a:	28 2f       	mov	r18, r24
    1f7c:	33 27       	eor	r19, r19
    1f7e:	27 fd       	sbrc	r18, 7
    1f80:	30 95       	com	r19
    1f82:	21 15       	cp	r18, r1
    1f84:	31 05       	cpc	r19, r1
    1f86:	29 f4       	brne	.+10     	; 0x1f92 <fgetc+0x46>
    1f88:	40 62       	ori	r20, 0x20	; 32
    1f8a:	4b 83       	std	Y+3, r20	; 0x03
    1f8c:	2f ef       	ldi	r18, 0xFF	; 255
    1f8e:	3f ef       	ldi	r19, 0xFF	; 255
    1f90:	1b c0       	rjmp	.+54     	; 0x1fc8 <fgetc+0x7c>
    1f92:	31 96       	adiw	r30, 0x01	; 1
    1f94:	f9 83       	std	Y+1, r31	; 0x01
    1f96:	e8 83       	st	Y, r30
    1f98:	11 c0       	rjmp	.+34     	; 0x1fbc <fgetc+0x70>
    1f9a:	ea 85       	ldd	r30, Y+10	; 0x0a
    1f9c:	fb 85       	ldd	r31, Y+11	; 0x0b
    1f9e:	ce 01       	movw	r24, r28
    1fa0:	09 95       	icall
    1fa2:	9c 01       	movw	r18, r24
    1fa4:	97 ff       	sbrs	r25, 7
    1fa6:	0a c0       	rjmp	.+20     	; 0x1fbc <fgetc+0x70>
    1fa8:	9b 81       	ldd	r25, Y+3	; 0x03
    1faa:	2f 5f       	subi	r18, 0xFF	; 255
    1fac:	3f 4f       	sbci	r19, 0xFF	; 255
    1fae:	11 f0       	breq	.+4      	; 0x1fb4 <fgetc+0x68>
    1fb0:	80 e2       	ldi	r24, 0x20	; 32
    1fb2:	01 c0       	rjmp	.+2      	; 0x1fb6 <fgetc+0x6a>
    1fb4:	80 e1       	ldi	r24, 0x10	; 16
    1fb6:	89 2b       	or	r24, r25
    1fb8:	8b 83       	std	Y+3, r24	; 0x03
    1fba:	e8 cf       	rjmp	.-48     	; 0x1f8c <fgetc+0x40>
    1fbc:	8e 81       	ldd	r24, Y+6	; 0x06
    1fbe:	9f 81       	ldd	r25, Y+7	; 0x07
    1fc0:	01 96       	adiw	r24, 0x01	; 1
    1fc2:	9f 83       	std	Y+7, r25	; 0x07
    1fc4:	8e 83       	std	Y+6, r24	; 0x06
    1fc6:	30 e0       	ldi	r19, 0x00	; 0
    1fc8:	c9 01       	movw	r24, r18
    1fca:	df 91       	pop	r29
    1fcc:	cf 91       	pop	r28
    1fce:	08 95       	ret

00001fd0 <fputc>:
    1fd0:	0f 93       	push	r16
    1fd2:	1f 93       	push	r17
    1fd4:	cf 93       	push	r28
    1fd6:	df 93       	push	r29
    1fd8:	8c 01       	movw	r16, r24
    1fda:	eb 01       	movw	r28, r22
    1fdc:	8b 81       	ldd	r24, Y+3	; 0x03
    1fde:	81 ff       	sbrs	r24, 1
    1fe0:	1b c0       	rjmp	.+54     	; 0x2018 <fputc+0x48>
    1fe2:	82 ff       	sbrs	r24, 2
    1fe4:	0d c0       	rjmp	.+26     	; 0x2000 <fputc+0x30>
    1fe6:	2e 81       	ldd	r18, Y+6	; 0x06
    1fe8:	3f 81       	ldd	r19, Y+7	; 0x07
    1fea:	8c 81       	ldd	r24, Y+4	; 0x04
    1fec:	9d 81       	ldd	r25, Y+5	; 0x05
    1fee:	28 17       	cp	r18, r24
    1ff0:	39 07       	cpc	r19, r25
    1ff2:	64 f4       	brge	.+24     	; 0x200c <fputc+0x3c>
    1ff4:	e8 81       	ld	r30, Y
    1ff6:	f9 81       	ldd	r31, Y+1	; 0x01
    1ff8:	01 93       	st	Z+, r16
    1ffa:	f9 83       	std	Y+1, r31	; 0x01
    1ffc:	e8 83       	st	Y, r30
    1ffe:	06 c0       	rjmp	.+12     	; 0x200c <fputc+0x3c>
    2000:	e8 85       	ldd	r30, Y+8	; 0x08
    2002:	f9 85       	ldd	r31, Y+9	; 0x09
    2004:	80 2f       	mov	r24, r16
    2006:	09 95       	icall
    2008:	89 2b       	or	r24, r25
    200a:	31 f4       	brne	.+12     	; 0x2018 <fputc+0x48>
    200c:	8e 81       	ldd	r24, Y+6	; 0x06
    200e:	9f 81       	ldd	r25, Y+7	; 0x07
    2010:	01 96       	adiw	r24, 0x01	; 1
    2012:	9f 83       	std	Y+7, r25	; 0x07
    2014:	8e 83       	std	Y+6, r24	; 0x06
    2016:	02 c0       	rjmp	.+4      	; 0x201c <fputc+0x4c>
    2018:	0f ef       	ldi	r16, 0xFF	; 255
    201a:	1f ef       	ldi	r17, 0xFF	; 255
    201c:	c8 01       	movw	r24, r16
    201e:	df 91       	pop	r29
    2020:	cf 91       	pop	r28
    2022:	1f 91       	pop	r17
    2024:	0f 91       	pop	r16
    2026:	08 95       	ret

00002028 <sprintf>:
    2028:	ae e0       	ldi	r26, 0x0E	; 14
    202a:	b0 e0       	ldi	r27, 0x00	; 0
    202c:	ea e1       	ldi	r30, 0x1A	; 26
    202e:	f0 e1       	ldi	r31, 0x10	; 16
    2030:	0c 94 3e 0e 	jmp	0x1c7c	; 0x1c7c <__prologue_saves__+0x1c>
    2034:	0d 89       	ldd	r16, Y+21	; 0x15
    2036:	1e 89       	ldd	r17, Y+22	; 0x16
    2038:	86 e0       	ldi	r24, 0x06	; 6
    203a:	8c 83       	std	Y+4, r24	; 0x04
    203c:	1a 83       	std	Y+2, r17	; 0x02
    203e:	09 83       	std	Y+1, r16	; 0x01
    2040:	8f ef       	ldi	r24, 0xFF	; 255
    2042:	9f e7       	ldi	r25, 0x7F	; 127
    2044:	9e 83       	std	Y+6, r25	; 0x06
    2046:	8d 83       	std	Y+5, r24	; 0x05
    2048:	9e 01       	movw	r18, r28
    204a:	27 5e       	subi	r18, 0xE7	; 231
    204c:	3f 4f       	sbci	r19, 0xFF	; 255
    204e:	ce 01       	movw	r24, r28
    2050:	01 96       	adiw	r24, 0x01	; 1
    2052:	6f 89       	ldd	r22, Y+23	; 0x17
    2054:	78 8d       	ldd	r23, Y+24	; 0x18
    2056:	a9 01       	movw	r20, r18
    2058:	0e 94 79 05 	call	0xaf2	; 0xaf2 <vfprintf>
    205c:	2f 81       	ldd	r18, Y+7	; 0x07
    205e:	38 85       	ldd	r19, Y+8	; 0x08
    2060:	02 0f       	add	r16, r18
    2062:	13 1f       	adc	r17, r19
    2064:	f8 01       	movw	r30, r16
    2066:	10 82       	st	Z, r1
    2068:	2e 96       	adiw	r28, 0x0e	; 14
    206a:	e4 e0       	ldi	r30, 0x04	; 4
    206c:	0c 94 5a 0e 	jmp	0x1cb4	; 0x1cb4 <__epilogue_restores__+0x1c>

00002070 <ungetc>:
    2070:	9c 01       	movw	r18, r24
    2072:	fb 01       	movw	r30, r22
    2074:	83 81       	ldd	r24, Z+3	; 0x03
    2076:	80 ff       	sbrs	r24, 0
    2078:	11 c0       	rjmp	.+34     	; 0x209c <ungetc+0x2c>
    207a:	86 fd       	sbrc	r24, 6
    207c:	0f c0       	rjmp	.+30     	; 0x209c <ungetc+0x2c>
    207e:	9f ef       	ldi	r25, 0xFF	; 255
    2080:	2f 3f       	cpi	r18, 0xFF	; 255
    2082:	39 07       	cpc	r19, r25
    2084:	59 f0       	breq	.+22     	; 0x209c <ungetc+0x2c>
    2086:	22 83       	std	Z+2, r18	; 0x02
    2088:	80 64       	ori	r24, 0x40	; 64
    208a:	8f 7d       	andi	r24, 0xDF	; 223
    208c:	83 83       	std	Z+3, r24	; 0x03
    208e:	86 81       	ldd	r24, Z+6	; 0x06
    2090:	97 81       	ldd	r25, Z+7	; 0x07
    2092:	01 97       	sbiw	r24, 0x01	; 1
    2094:	97 83       	std	Z+7, r25	; 0x07
    2096:	86 83       	std	Z+6, r24	; 0x06
    2098:	30 e0       	ldi	r19, 0x00	; 0
    209a:	02 c0       	rjmp	.+4      	; 0x20a0 <ungetc+0x30>
    209c:	2f ef       	ldi	r18, 0xFF	; 255
    209e:	3f ef       	ldi	r19, 0xFF	; 255
    20a0:	c9 01       	movw	r24, r18
    20a2:	08 95       	ret

000020a4 <__ultoa_invert>:
    20a4:	fa 01       	movw	r30, r20
    20a6:	aa 27       	eor	r26, r26
    20a8:	28 30       	cpi	r18, 0x08	; 8
    20aa:	51 f1       	breq	.+84     	; 0x2100 <__ultoa_invert+0x5c>
    20ac:	20 31       	cpi	r18, 0x10	; 16
    20ae:	81 f1       	breq	.+96     	; 0x2110 <__ultoa_invert+0x6c>
    20b0:	e8 94       	clt
    20b2:	6f 93       	push	r22
    20b4:	6e 7f       	andi	r22, 0xFE	; 254
    20b6:	6e 5f       	subi	r22, 0xFE	; 254
    20b8:	7f 4f       	sbci	r23, 0xFF	; 255
    20ba:	8f 4f       	sbci	r24, 0xFF	; 255
    20bc:	9f 4f       	sbci	r25, 0xFF	; 255
    20be:	af 4f       	sbci	r26, 0xFF	; 255
    20c0:	b1 e0       	ldi	r27, 0x01	; 1
    20c2:	3e d0       	rcall	.+124    	; 0x2140 <__ultoa_invert+0x9c>
    20c4:	b4 e0       	ldi	r27, 0x04	; 4
    20c6:	3c d0       	rcall	.+120    	; 0x2140 <__ultoa_invert+0x9c>
    20c8:	67 0f       	add	r22, r23
    20ca:	78 1f       	adc	r23, r24
    20cc:	89 1f       	adc	r24, r25
    20ce:	9a 1f       	adc	r25, r26
    20d0:	a1 1d       	adc	r26, r1
    20d2:	68 0f       	add	r22, r24
    20d4:	79 1f       	adc	r23, r25
    20d6:	8a 1f       	adc	r24, r26
    20d8:	91 1d       	adc	r25, r1
    20da:	a1 1d       	adc	r26, r1
    20dc:	6a 0f       	add	r22, r26
    20de:	71 1d       	adc	r23, r1
    20e0:	81 1d       	adc	r24, r1
    20e2:	91 1d       	adc	r25, r1
    20e4:	a1 1d       	adc	r26, r1
    20e6:	20 d0       	rcall	.+64     	; 0x2128 <__ultoa_invert+0x84>
    20e8:	09 f4       	brne	.+2      	; 0x20ec <__ultoa_invert+0x48>
    20ea:	68 94       	set
    20ec:	3f 91       	pop	r19
    20ee:	2a e0       	ldi	r18, 0x0A	; 10
    20f0:	26 9f       	mul	r18, r22
    20f2:	11 24       	eor	r1, r1
    20f4:	30 19       	sub	r19, r0
    20f6:	30 5d       	subi	r19, 0xD0	; 208
    20f8:	31 93       	st	Z+, r19
    20fa:	de f6       	brtc	.-74     	; 0x20b2 <__ultoa_invert+0xe>
    20fc:	cf 01       	movw	r24, r30
    20fe:	08 95       	ret
    2100:	46 2f       	mov	r20, r22
    2102:	47 70       	andi	r20, 0x07	; 7
    2104:	40 5d       	subi	r20, 0xD0	; 208
    2106:	41 93       	st	Z+, r20
    2108:	b3 e0       	ldi	r27, 0x03	; 3
    210a:	0f d0       	rcall	.+30     	; 0x212a <__ultoa_invert+0x86>
    210c:	c9 f7       	brne	.-14     	; 0x2100 <__ultoa_invert+0x5c>
    210e:	f6 cf       	rjmp	.-20     	; 0x20fc <__ultoa_invert+0x58>
    2110:	46 2f       	mov	r20, r22
    2112:	4f 70       	andi	r20, 0x0F	; 15
    2114:	40 5d       	subi	r20, 0xD0	; 208
    2116:	4a 33       	cpi	r20, 0x3A	; 58
    2118:	18 f0       	brcs	.+6      	; 0x2120 <__ultoa_invert+0x7c>
    211a:	49 5d       	subi	r20, 0xD9	; 217
    211c:	31 fd       	sbrc	r19, 1
    211e:	40 52       	subi	r20, 0x20	; 32
    2120:	41 93       	st	Z+, r20
    2122:	02 d0       	rcall	.+4      	; 0x2128 <__ultoa_invert+0x84>
    2124:	a9 f7       	brne	.-22     	; 0x2110 <__ultoa_invert+0x6c>
    2126:	ea cf       	rjmp	.-44     	; 0x20fc <__ultoa_invert+0x58>
    2128:	b4 e0       	ldi	r27, 0x04	; 4
    212a:	a6 95       	lsr	r26
    212c:	97 95       	ror	r25
    212e:	87 95       	ror	r24
    2130:	77 95       	ror	r23
    2132:	67 95       	ror	r22
    2134:	ba 95       	dec	r27
    2136:	c9 f7       	brne	.-14     	; 0x212a <__ultoa_invert+0x86>
    2138:	00 97       	sbiw	r24, 0x00	; 0
    213a:	61 05       	cpc	r22, r1
    213c:	71 05       	cpc	r23, r1
    213e:	08 95       	ret
    2140:	9b 01       	movw	r18, r22
    2142:	ac 01       	movw	r20, r24
    2144:	0a 2e       	mov	r0, r26
    2146:	06 94       	lsr	r0
    2148:	57 95       	ror	r21
    214a:	47 95       	ror	r20
    214c:	37 95       	ror	r19
    214e:	27 95       	ror	r18
    2150:	ba 95       	dec	r27
    2152:	c9 f7       	brne	.-14     	; 0x2146 <__ultoa_invert+0xa2>
    2154:	62 0f       	add	r22, r18
    2156:	73 1f       	adc	r23, r19
    2158:	84 1f       	adc	r24, r20
    215a:	95 1f       	adc	r25, r21
    215c:	a0 1d       	adc	r26, r0
    215e:	08 95       	ret

00002160 <__ctype_isfalse>:
    2160:	99 27       	eor	r25, r25
    2162:	88 27       	eor	r24, r24

00002164 <__ctype_istrue>:
    2164:	08 95       	ret

00002166 <_exit>:
    2166:	f8 94       	cli

00002168 <__stop_program>:
    2168:	ff cf       	rjmp	.-2      	; 0x2168 <__stop_program>
